(this.webpackJsonpmambapad=this.webpackJsonpmambapad||[]).push([[9],{186:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_mamba.f5e60ba8.svg"},189:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_Big_mamba.53a4f4c2.svg"},194:function(e){e.exports=JSON.parse('[{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isExcluded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBurn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tAmount","type":"uint256"}],"name":"deliver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tAmount","type":"uint256"},{"internalType":"bool","name":"deductTransferFee","type":"bool"}],"name":"reflectionFromToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"rAmount","type":"uint256"}],"name":"tokenFromReflection","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"excludeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"includeAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"_getTaxFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_getBurnFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"taxFee","type":"uint256"}],"name":"_setTaxFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnFee","type":"uint256"}],"name":"_setBurnFee","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},195:function(e){e.exports=JSON.parse('{"address":"0xF505e6E8c1FB372A37BB4dACb7B79B0EE3c3e960","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_maxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_maxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"approveMax","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyCooldownEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkSwapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountPercentage","type":"uint256"}],"name":"clearStuckBalance_sender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint8","name":"_interval","type":"uint8"}],"name":"cooldownEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownTimerInterval","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deadBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"distributor","outputs":[{"internalType":"contract DividendDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isDividendExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isNotInSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTimelockExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTxLimitExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_launchblock","type":"uint256"}],"name":"launchStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualSync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256[]","name":"tokens","type":"uint256[]"}],"name":"multiTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"multiTransfer_fixed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pairContract","outputs":[{"internalType":"contract InterfaceLP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"rebase_updatebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"rescueToken","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"contract IDEXRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPeriod","type":"uint256"},{"internalType":"uint256","name":"_minDistribution","type":"uint256"}],"name":"setDistributionCriteria","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gas","type":"uint256"}],"name":"setDistributorSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_treasureFee","type":"uint256"},{"internalType":"uint256","name":"_buyReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_sellReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_feeDenominator","type":"uint256"}],"name":"setFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsDividendExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTimelockExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTxLimitExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"setLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTXPercentage_base1000","type":"uint256"}],"name":"setMaxTxPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxWallPercent_base1000","type":"uint256"}],"name":"setMaxWalletPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_enabled","type":"bool"},{"internalType":"uint256","name":"_percentage_base10000","type":"uint256"}],"name":"setSwapBackSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint256","name":"_deadBlocks","type":"uint256"}],"name":"tradingStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"adr","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasureFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"transactionHash":"0x1f7e5d2b60551a38595b7e214dc84a0c4140a4f5c9d087f1896533bf2a597459","receipt":{"to":null,"from":"0x5B2ED34223Af1E626f66C4Ea520B98C238Cb5e44","contractAddress":"0xF505e6E8c1FB372A37BB4dACb7B79B0EE3c3e960","transactionIndex":0,"gasUsed":"7667235","logsBloom":"0xblockHash":"0x43f985b964107a6d5c9f27b34af058defed66cc09a6a76a917ac8c4f8a50876f","transactionHash":"0x1f7e5d2b60551a38595b7e214dc84a0c4140a4f5c9d087f1896533bf2a597459","logs":[{"transactionIndex":0,"blockNumber":16153134,"transactionHash":"0x1f7e5d2b60551a38595b7e214dc84a0c4140a4f5c9d087f1896533bf2a597459","address":"0xB7926C0430Afb07AA7DEfDE6DA862aE0Bde767bc","topics":["0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","0x000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd","0x000000000000000000000000f505e6e8c1fb372a37bb4dacb7b79b0ee3c3e960"],"data":"0x0000000000000000000000004dac36b546cfc9d88276bc3c3f171f9215d503a5000000000000000000000000000000000000000000000000000000000001b306","logIndex":0,"blockHash":"0x43f985b964107a6d5c9f27b34af058defed66cc09a6a76a917ac8c4f8a50876f"},{"transactionIndex":0,"blockNumber":16153134,"transactionHash":"0x1f7e5d2b60551a38595b7e214dc84a0c4140a4f5c9d087f1896533bf2a597459","address":"0xF505e6E8c1FB372A37BB4dACb7B79B0EE3c3e960","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000005b2ed34223af1e626f66c4ea520b98c238cb5e44"],"data":"0x000000000000000000000000000000000000000000000000002386f26fc10000","logIndex":1,"blockHash":"0x43f985b964107a6d5c9f27b34af058defed66cc09a6a76a917ac8c4f8a50876f"}],"blockNumber":16153134,"cumulativeGasUsed":"7667235","status":1,"byzantium":true},"args":[],"solcInputHash":"c9ba89ee754ef2733229d820abe1a799","metadata":"{\\"compiler\\":{\\"version\\":\\"0.7.6+commit.7338295f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"_maxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_maxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"approveMax\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"authorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyCooldownEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkSwapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amountPercentage\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"clearStuckBalance_sender\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"_interval\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"cooldownEnabled\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"cooldownTimerInterval\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"deadBlocks\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"distributor\\",\\"outputs\\":[{\\"internalType\\":\\"contract DividendDistributor\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"feeDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getOwner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isAuthorized\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isDividendExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isFeeExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isNotInSwap\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTimelockExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTxLimitExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_launchblock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"launchStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"launchedAt\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"manualSync\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"multiTransfer\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"multiTransfer_fixed\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pair\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pairContract\\",\\"outputs\\":[{\\"internalType\\":\\"contract InterfaceLP\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"}],\\"name\\":\\"rebase_updatebalance\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"rescueToken\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"router\\",\\"outputs\\":[{\\"internalType\\":\\"contract IDEXRouter\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"sellReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minPeriod\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minDistribution\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributionCriteria\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gas\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributorSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_treasureFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_buyReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_sellReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_feeDenominator\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setFees\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsDividendExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsFeeExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTimelockExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTxLimitExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_address\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxTXPercentage_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxTxPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxWallPercent_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxWalletPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_enabled\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_percentage_base10000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setSwapBackSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"tradingOpen\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_deadBlocks\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"tradingStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address payable\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"treasureFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"unauthorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"stateMutability\\":\\"payable\\",\\"type\\":\\"receive\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/TestMambapad.sol\\":\\"TestMambapad\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/TestMambapad.sol\\":{\\"content\\":\\"/**\\\\n *Submitted for verification at BscScan.com on 2022-01-05\\\\n */\\\\n\\\\n// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity ^0.7.4;\\\\n\\\\nlibrary SafeMath {\\\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    uint256 c = a + b;\\\\n    require(c >= a, \'SafeMath: addition overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return sub(a, b, \'SafeMath: subtraction overflow\');\\\\n  }\\\\n\\\\n  function sub(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b <= a, errorMessage);\\\\n    uint256 c = a - b;\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    if (a == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 c = a * b;\\\\n    require(c / a == b, \'SafeMath: multiplication overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return div(a, b, \'SafeMath: division by zero\');\\\\n  }\\\\n\\\\n  function div(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b > 0, errorMessage);\\\\n    uint256 c = a / b;\\\\n    return c;\\\\n  }\\\\n}\\\\n\\\\nlibrary SafeMathInt {\\\\n  int256 private constant MIN_INT256 = int256(1) << 255;\\\\n  int256 private constant MAX_INT256 = ~(int256(1) << 255);\\\\n\\\\n  function mul(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a * b;\\\\n\\\\n    require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\\\\n    require((b == 0) || (c / b == a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(int256 a, int256 b) internal pure returns (int256) {\\\\n    require(b != -1 || a != MIN_INT256);\\\\n\\\\n    return a / b;\\\\n  }\\\\n\\\\n  function sub(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a - b;\\\\n    require((b >= 0 && c <= a) || (b < 0 && c > a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function add(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a + b;\\\\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function abs(int256 a) internal pure returns (int256) {\\\\n    require(a != MIN_INT256);\\\\n    return a < 0 ? -a : a;\\\\n  }\\\\n}\\\\n\\\\n/**\\\\n * BEP20 standard interface.\\\\n */\\\\ninterface IBEP20 {\\\\n  function totalSupply() external view returns (uint256);\\\\n\\\\n  function decimals() external view returns (uint8);\\\\n\\\\n  function symbol() external view returns (string memory);\\\\n\\\\n  function name() external view returns (string memory);\\\\n\\\\n  function getOwner() external view returns (address);\\\\n\\\\n  function balanceOf(address account) external view returns (uint256);\\\\n\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n  function allowance(address _owner, address spender) external view returns (uint256);\\\\n\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external returns (bool);\\\\n\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\\\nabstract contract Auth {\\\\n  address internal owner;\\\\n  mapping(address => bool) internal authorizations;\\\\n\\\\n  constructor(address _owner) {\\\\n    owner = _owner;\\\\n    authorizations[_owner] = true;\\\\n  }\\\\n\\\\n  modifier onlyOwner() {\\\\n    require(isOwner(msg.sender), \'!OWNER\');\\\\n    _;\\\\n  }\\\\n\\\\n  modifier authorized() {\\\\n    require(isAuthorized(msg.sender), \'!AUTHORIZED\');\\\\n    _;\\\\n  }\\\\n\\\\n  function authorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = true;\\\\n  }\\\\n\\\\n  function unauthorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = false;\\\\n  }\\\\n\\\\n  function isOwner(address account) public view returns (bool) {\\\\n    return account == owner;\\\\n  }\\\\n\\\\n  function isAuthorized(address adr) public view returns (bool) {\\\\n    return authorizations[adr];\\\\n  }\\\\n\\\\n  function transferOwnership(address payable adr) public onlyOwner {\\\\n    owner = adr;\\\\n    authorizations[adr] = true;\\\\n    emit OwnershipTransferred(adr);\\\\n  }\\\\n\\\\n  event OwnershipTransferred(address owner);\\\\n}\\\\n\\\\ninterface IDEXFactory {\\\\n  function createPair(address tokenA, address tokenB) external returns (address pair);\\\\n}\\\\n\\\\ninterface InterfaceLP {\\\\n  function sync() external;\\\\n}\\\\n\\\\ninterface IDEXRouter {\\\\n  function factory() external pure returns (address);\\\\n\\\\n  function WETH() external pure returns (address);\\\\n\\\\n  function addLiquidity(\\\\n    address tokenA,\\\\n    address tokenB,\\\\n    uint256 amountADesired,\\\\n    uint256 amountBDesired,\\\\n    uint256 amountAMin,\\\\n    uint256 amountBMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    returns (\\\\n      uint256 amountA,\\\\n      uint256 amountB,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function addLiquidityETH(\\\\n    address token,\\\\n    uint256 amountTokenDesired,\\\\n    uint256 amountTokenMin,\\\\n    uint256 amountETHMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    payable\\\\n    returns (\\\\n      uint256 amountToken,\\\\n      uint256 amountETH,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n\\\\n  function swapExactETHForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external payable;\\\\n\\\\n  function swapExactTokensForETHSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n}\\\\n\\\\ninterface IDividendDistributor {\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external;\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external;\\\\n\\\\n  function deposit() external payable;\\\\n\\\\n  function process(uint256 gas) external;\\\\n}\\\\n\\\\ncontract DividendDistributor is IDividendDistributor {\\\\n  using SafeMath for uint256;\\\\n\\\\n  address _token;\\\\n\\\\n  struct Share {\\\\n    uint256 amount;\\\\n    uint256 totalExcluded;\\\\n    uint256 totalRealised;\\\\n  }\\\\n\\\\n  IBEP20 RWRD = IBEP20(0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7); // 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56 for mainnet\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; // 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c for mainnet\\\\n\\\\n  IDEXRouter router;\\\\n\\\\n  address[] shareholders;\\\\n  mapping(address => uint256) shareholderIndexes;\\\\n  mapping(address => uint256) shareholderClaims;\\\\n\\\\n  mapping(address => Share) public shares;\\\\n\\\\n  uint256 public totalShares;\\\\n  uint256 public totalDividends;\\\\n  uint256 public totalDistributed;\\\\n  uint256 public dividendsPerShare;\\\\n  uint256 public dividendsPerShareAccuracyFactor = 10**36;\\\\n\\\\n  uint256 public minPeriod = 45 * 60;\\\\n  uint256 public minDistribution = (7 / 1000) * (10**8);\\\\n\\\\n  uint256 currentIndex;\\\\n\\\\n  bool initialized;\\\\n  modifier initialization() {\\\\n    require(!initialized);\\\\n    _;\\\\n    initialized = true;\\\\n  }\\\\n\\\\n  modifier onlyToken() {\\\\n    require(msg.sender == _token);\\\\n    _;\\\\n  }\\\\n\\\\n  constructor(address _router) {\\\\n    router = _router != address(0) ? IDEXRouter(_router) : IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3); //0x10ED43C718714eb63d5aA57B78B54704E256024E for mainnet\\\\n    _token = msg.sender;\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external override onlyToken {\\\\n    minPeriod = _minPeriod;\\\\n    minDistribution = _minDistribution;\\\\n  }\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external override onlyToken {\\\\n    if (shares[shareholder].amount > 0) {\\\\n      distributeDividend(shareholder);\\\\n    }\\\\n\\\\n    if (amount > 0 && shares[shareholder].amount == 0) {\\\\n      addShareholder(shareholder);\\\\n    } else if (amount == 0 && shares[shareholder].amount > 0) {\\\\n      removeShareholder(shareholder);\\\\n    }\\\\n\\\\n    totalShares = totalShares.sub(shares[shareholder].amount).add(amount);\\\\n    shares[shareholder].amount = amount;\\\\n    shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n  }\\\\n\\\\n  function deposit() external payable override onlyToken {\\\\n    uint256 balanceBefore = RWRD.balanceOf(address(this));\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = WBNB;\\\\n    path[1] = address(RWRD);\\\\n\\\\n    router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: msg.value}(\\\\n      0,\\\\n      path,\\\\n      address(this),\\\\n      block.timestamp\\\\n    );\\\\n\\\\n    uint256 amount = RWRD.balanceOf(address(this)).sub(balanceBefore);\\\\n\\\\n    totalDividends = totalDividends.add(amount);\\\\n    dividendsPerShare = dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares));\\\\n  }\\\\n\\\\n  function process(uint256 gas) external override onlyToken {\\\\n    uint256 shareholderCount = shareholders.length;\\\\n\\\\n    if (shareholderCount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 gasUsed = 0;\\\\n    uint256 gasLeft = gasleft();\\\\n\\\\n    uint256 iterations = 0;\\\\n\\\\n    while (gasUsed < gas && iterations < shareholderCount) {\\\\n      if (currentIndex >= shareholderCount) {\\\\n        currentIndex = 0;\\\\n      }\\\\n\\\\n      if (shouldDistribute(shareholders[currentIndex])) {\\\\n        distributeDividend(shareholders[currentIndex]);\\\\n      }\\\\n\\\\n      gasUsed = gasUsed.add(gasLeft.sub(gasleft()));\\\\n      gasLeft = gasleft();\\\\n      currentIndex++;\\\\n      iterations++;\\\\n    }\\\\n  }\\\\n\\\\n  function shouldDistribute(address shareholder) internal view returns (bool) {\\\\n    return\\\\n      shareholderClaims[shareholder] + minPeriod < block.timestamp && getUnpaidEarnings(shareholder) > minDistribution;\\\\n  }\\\\n\\\\n  function distributeDividend(address shareholder) internal {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 amount = getUnpaidEarnings(shareholder);\\\\n    if (amount > 0) {\\\\n      totalDistributed = totalDistributed.add(amount);\\\\n      RWRD.transfer(shareholder, amount);\\\\n      shareholderClaims[shareholder] = block.timestamp;\\\\n      shares[shareholder].totalRealised = shares[shareholder].totalRealised.add(amount);\\\\n      shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n    }\\\\n  }\\\\n\\\\n  function claimDividend() external {\\\\n    distributeDividend(msg.sender);\\\\n  }\\\\n\\\\n  function getUnpaidEarnings(address shareholder) public view returns (uint256) {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 shareholderTotalDividends = getCumulativeDividends(shares[shareholder].amount);\\\\n    uint256 shareholderTotalExcluded = shares[shareholder].totalExcluded;\\\\n\\\\n    if (shareholderTotalDividends <= shareholderTotalExcluded) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    return shareholderTotalDividends.sub(shareholderTotalExcluded);\\\\n  }\\\\n\\\\n  function getCumulativeDividends(uint256 share) internal view returns (uint256) {\\\\n    return share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor);\\\\n  }\\\\n\\\\n  function addShareholder(address shareholder) internal {\\\\n    shareholderIndexes[shareholder] = shareholders.length;\\\\n    shareholders.push(shareholder);\\\\n  }\\\\n\\\\n  function removeShareholder(address shareholder) internal {\\\\n    shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length - 1];\\\\n    shareholderIndexes[shareholders[shareholders.length - 1]] = shareholderIndexes[shareholder];\\\\n    shareholders.pop();\\\\n  }\\\\n}\\\\n\\\\ncontract TestMambapad is IBEP20, Auth {\\\\n  using SafeMath for uint256;\\\\n  using SafeMathInt for int256;\\\\n\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; // 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c for mainnet\\\\n  address DEAD = 0x000000000000000000000000000000000000dEaD;\\\\n  address ZERO = 0x0000000000000000000000000000000000000000;\\\\n\\\\n  string constant _name = \'TestMambapad\';\\\\n  string constant _symbol = \'TMAMP\';\\\\n  uint8 constant _decimals = 8;\\\\n\\\\n  mapping(address => uint256) _rBalance;\\\\n  mapping(address => mapping(address => uint256)) _allowances;\\\\n\\\\n  mapping(address => bool) public isFeeExempt;\\\\n  mapping(address => bool) public isTxLimitExempt;\\\\n  mapping(address => bool) public isTimelockExempt;\\\\n  mapping(address => bool) public isDividendExempt;\\\\n\\\\n  uint256 public treasureFee = 3; // for marketing & development & updating\\\\n  uint256 public buyReflectionFee = 3;\\\\n  uint256 public sellReflectionFee = 6;\\\\n  uint256 public feeDenominator = 100;\\\\n\\\\n  uint256 private totalReflectionFeeAmount;\\\\n  uint256 private totalFeeAmount;\\\\n\\\\n  uint256 public deadBlocks = 2;\\\\n  uint256 public launchedAt = 0;\\\\n\\\\n  IDEXRouter public router;\\\\n  address public pair;\\\\n  InterfaceLP public pairContract;\\\\n\\\\n  bool public tradingOpen = false;\\\\n\\\\n  DividendDistributor public distributor;\\\\n  uint256 distributorGas = 500000;\\\\n\\\\n  bool public buyCooldownEnabled = false;\\\\n  uint8 public cooldownTimerInterval = 5;\\\\n  mapping(address => uint256) private cooldownTimer;\\\\n\\\\n  bool public swapEnabled = false;\\\\n  bool inSwap;\\\\n  modifier swapping() {\\\\n    inSwap = true;\\\\n    _;\\\\n    inSwap = false;\\\\n  }\\\\n\\\\n  // event CaliforniaCheckin(address guest, uint256 rentPaid);\\\\n\\\\n  uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 10**8 * 10**_decimals;\\\\n  uint256 public swapThreshold = (rSupply * 10) / 50000;\\\\n\\\\n  uint256 public rate;\\\\n  uint256 public _totalSupply;\\\\n  uint256 private constant MAX_UINT256 = ~uint256(0);\\\\n  uint256 private constant MAX_SUPPLY = ~uint128(0);\\\\n  uint256 private constant rSupply = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\\\\n\\\\n  // Max wallet & Transaction\\\\n  uint256 public _maxTxAmount = rSupply.div(100).mul(2);\\\\n  uint256 public _maxWalletToken = rSupply.div(100).mul(3);\\\\n\\\\n  constructor() Auth(msg.sender) {\\\\n    router = IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3); //TODO update: 0x10ED43C718714eb63d5aA57B78B54704E256024E for mainnet\\\\n    pair = IDEXFactory(router.factory()).createPair(WBNB, address(this));\\\\n    _allowances[address(this)][address(router)] = uint256(-1);\\\\n\\\\n    pairContract = InterfaceLP(pair);\\\\n    _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\\\\n    rate = rSupply.div(_totalSupply);\\\\n\\\\n    distributor = new DividendDistributor(address(router));\\\\n\\\\n    isFeeExempt[msg.sender] = true;\\\\n    isTxLimitExempt[msg.sender] = true;\\\\n\\\\n    isTimelockExempt[msg.sender] = true;\\\\n    isTimelockExempt[DEAD] = true;\\\\n    isTimelockExempt[address(this)] = true;\\\\n\\\\n    isDividendExempt[pair] = true;\\\\n    isDividendExempt[address(this)] = true;\\\\n    isDividendExempt[DEAD] = true;\\\\n\\\\n    _rBalance[msg.sender] = rSupply;\\\\n    emit Transfer(address(0), msg.sender, _totalSupply);\\\\n  }\\\\n\\\\n  receive() external payable {}\\\\n\\\\n  function totalSupply() external view override returns (uint256) {\\\\n    return _totalSupply;\\\\n  }\\\\n\\\\n  function decimals() external pure override returns (uint8) {\\\\n    return _decimals;\\\\n  }\\\\n\\\\n  function symbol() external pure override returns (string memory) {\\\\n    return _symbol;\\\\n  }\\\\n\\\\n  function name() external pure override returns (string memory) {\\\\n    return _name;\\\\n  }\\\\n\\\\n  function getOwner() external view override returns (address) {\\\\n    return owner;\\\\n  }\\\\n\\\\n  function balanceOf(address account) public view override returns (uint256) {\\\\n    return _rBalance[account].div(rate);\\\\n  }\\\\n\\\\n  function allowance(address holder, address spender) external view override returns (uint256) {\\\\n    return _allowances[holder][spender];\\\\n  }\\\\n\\\\n  function approve(address spender, uint256 amount) public override returns (bool) {\\\\n    _allowances[msg.sender][spender] = amount;\\\\n    emit Approval(msg.sender, spender, amount);\\\\n    return true;\\\\n  }\\\\n\\\\n  function approveMax(address spender) external returns (bool) {\\\\n    return approve(spender, uint256(-1));\\\\n  }\\\\n\\\\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\\\\n    return _transferFrom(msg.sender, recipient, amount);\\\\n  }\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external override returns (bool) {\\\\n    if (_allowances[sender][msg.sender] != uint256(-1)) {\\\\n      _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \'Insufficient Allowance\');\\\\n    }\\\\n\\\\n    return _transferFrom(sender, recipient, amount);\\\\n  }\\\\n\\\\n  function _transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    if (inSwap) {\\\\n      return _basicTransfer(sender, recipient, amount);\\\\n    }\\\\n\\\\n    if (!authorizations[sender] && !authorizations[recipient]) {\\\\n      require(tradingOpen, \'Trading not open yet\');\\\\n    }\\\\n\\\\n    uint256 rAmount = amount.mul(rate);\\\\n\\\\n    if (!authorizations[sender] && recipient != address(this) && recipient != address(DEAD) && recipient != pair) {\\\\n      uint256 heldTokens = balanceOf(recipient);\\\\n      require(\\\\n        (heldTokens + rAmount) <= _maxWalletToken,\\\\n        \'Total Holding is currently limited, you can not buy that much.\'\\\\n      );\\\\n    }\\\\n\\\\n    if (sender == pair && buyCooldownEnabled && !isTimelockExempt[recipient]) {\\\\n      require(cooldownTimer[recipient] < block.timestamp, \'buy Cooldown exists\');\\\\n      cooldownTimer[recipient] = block.timestamp + cooldownTimerInterval;\\\\n    }\\\\n\\\\n    // Checks max transaction limit\\\\n    checkTxLimit(sender, rAmount);\\\\n\\\\n    if (shouldSwapBack()) {\\\\n      swapBack();\\\\n    }\\\\n\\\\n    //Exchange tokens\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n\\\\n    uint256 amountReceived = (!shouldTakeFee(sender) || !shouldTakeFee(recipient))\\\\n      ? rAmount\\\\n      : takeFee(sender, rAmount, (recipient == pair));\\\\n    _rBalance[recipient] = _rBalance[recipient].add(amountReceived);\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[sender]) {\\\\n      try distributor.setShare(sender, balanceOf(sender)) {} catch {}\\\\n    }\\\\n\\\\n    if (!isDividendExempt[recipient]) {\\\\n      try distributor.setShare(recipient, balanceOf(recipient)) {} catch {}\\\\n    }\\\\n\\\\n    try distributor.process(distributorGas) {} catch {}\\\\n\\\\n    emit Transfer(sender, recipient, amountReceived.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  // Changed\\\\n\\\\n  function _basicTransfer(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    uint256 rAmount = amount.mul(rate);\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n    _rBalance[recipient] = _rBalance[recipient].add(rAmount);\\\\n    emit Transfer(sender, recipient, rAmount.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  function checkTxLimit(address sender, uint256 rAmount) internal view {\\\\n    require(rAmount <= _maxTxAmount || isTxLimitExempt[sender], \'TX Limit Exceeded\');\\\\n  }\\\\n\\\\n  function shouldTakeFee(address sender) internal view returns (bool) {\\\\n    return !isFeeExempt[sender];\\\\n  }\\\\n\\\\n  function takeFee(\\\\n    address sender,\\\\n    uint256 rAmount,\\\\n    bool isSell\\\\n  ) internal returns (uint256) {\\\\n    uint256 reflectionFee = buyReflectionFee;\\\\n    if (isSell) {\\\\n      reflectionFee = sellReflectionFee;\\\\n    }\\\\n\\\\n    uint256 totalFee = reflectionFee.add(treasureFee);\\\\n\\\\n    uint256 feeAmount = rAmount.div(feeDenominator).mul(totalFee);\\\\n\\\\n    if (!isSell && (launchedAt + deadBlocks) > block.number) {\\\\n      feeAmount = rAmount.div(100).mul(99);\\\\n    }\\\\n\\\\n    totalFeeAmount = totalFeeAmount.add(feeAmount);\\\\n    totalReflectionFeeAmount = totalReflectionFeeAmount.add(feeAmount.div(totalFee).mul(reflectionFee));\\\\n\\\\n    _rBalance[address(this)] = _rBalance[address(this)].add(feeAmount);\\\\n    emit Transfer(sender, address(this), feeAmount.div(rate));\\\\n\\\\n    return rAmount.sub(feeAmount);\\\\n  }\\\\n\\\\n  function shouldSwapBack() internal view returns (bool) {\\\\n    return msg.sender != pair && !inSwap && swapEnabled && _rBalance[address(this)] >= swapThreshold;\\\\n  }\\\\n\\\\n  function clearStuckBalance_sender(uint256 amountPercentage) external authorized {\\\\n    uint256 amountBNB = address(this).balance;\\\\n    payable(msg.sender).transfer((amountBNB * amountPercentage) / 100);\\\\n  }\\\\n\\\\n  // switch Trading\\\\n\\\\n  function tradingStatus(bool _status, uint256 _deadBlocks) public onlyOwner {\\\\n    tradingOpen = _status;\\\\n    if (tradingOpen && launchedAt == 0) {\\\\n      launchedAt = block.number;\\\\n      deadBlocks = _deadBlocks;\\\\n    }\\\\n  }\\\\n\\\\n  function launchStatus(uint256 _launchblock) public onlyOwner {\\\\n    launchedAt = _launchblock;\\\\n  }\\\\n\\\\n  function cooldownEnabled(bool _status, uint8 _interval) public onlyOwner {\\\\n    buyCooldownEnabled = _status;\\\\n    cooldownTimerInterval = _interval;\\\\n  }\\\\n\\\\n  // OK, check 3\\\\n  function swapBack() internal swapping {\\\\n    uint256 tokensToSell = swapThreshold.div(rate);\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = address(this);\\\\n    path[1] = WBNB;\\\\n\\\\n    uint256 balanceBefore = address(this).balance;\\\\n\\\\n    router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokensToSell, 0, path, address(this), block.timestamp);\\\\n\\\\n    uint256 amountBNB = address(this).balance.sub(balanceBefore);\\\\n\\\\n    if (totalFeeAmount != 0 && totalReflectionFeeAmount != 0) {\\\\n      uint256 amountBNBReflection = amountBNB.mul(totalReflectionFeeAmount).div(totalFeeAmount);\\\\n      try distributor.deposit{value: amountBNBReflection}() {} catch {}\\\\n      totalFeeAmount = 0;\\\\n      totalReflectionFeeAmount = 0;\\\\n    }\\\\n  }\\\\n\\\\n  function setIsDividendExempt(address holder, bool exempt) external authorized {\\\\n    require(holder != address(this) && holder != pair);\\\\n    isDividendExempt[holder] = exempt;\\\\n    if (exempt) {\\\\n      distributor.setShare(holder, 0);\\\\n    } else {\\\\n      distributor.setShare(holder, balanceOf(holder));\\\\n    }\\\\n  }\\\\n\\\\n  function setIsFeeExempt(address holder, bool exempt) external authorized {\\\\n    isFeeExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTxLimitExempt(address holder, bool exempt) external authorized {\\\\n    isTxLimitExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTimelockExempt(address holder, bool exempt) external authorized {\\\\n    isTimelockExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setFees(\\\\n    uint256 _treasureFee,\\\\n    uint256 _buyReflectionFee,\\\\n    uint256 _sellReflectionFee,\\\\n    uint256 _feeDenominator\\\\n  ) external authorized {\\\\n    treasureFee = _treasureFee;\\\\n    buyReflectionFee = _buyReflectionFee;\\\\n    sellReflectionFee = _sellReflectionFee;\\\\n    feeDenominator = _feeDenominator;\\\\n    uint256 totalFee = _treasureFee.add(sellReflectionFee);\\\\n    if (buyReflectionFee > sellReflectionFee) {\\\\n      totalFee.sub(sellReflectionFee).add(buyReflectionFee);\\\\n    }\\\\n    require(totalFee < feeDenominator / 3, \'Fees cannot be more than 33%\');\\\\n  }\\\\n\\\\n  function setSwapBackSettings(bool _enabled, uint256 _percentage_base10000) external authorized {\\\\n    swapEnabled = _enabled;\\\\n    swapThreshold = rSupply.div(10000).mul(_percentage_base10000);\\\\n  }\\\\n\\\\n  function manualSync() external {\\\\n    InterfaceLP(pair).sync();\\\\n  }\\\\n\\\\n  function setLP(address _address) external onlyOwner {\\\\n    pairContract = InterfaceLP(_address);\\\\n    isFeeExempt[_address];\\\\n  }\\\\n\\\\n  function isNotInSwap() external view returns (bool) {\\\\n    return !inSwap;\\\\n  }\\\\n\\\\n  function checkSwapThreshold() external view returns (uint256) {\\\\n    return swapThreshold.div(rate);\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external authorized {\\\\n    distributor.setDistributionCriteria(_minPeriod, _minDistribution);\\\\n  }\\\\n\\\\n  function setDistributorSettings(uint256 gas) external authorized {\\\\n    require(gas < 900000);\\\\n    distributorGas = gas;\\\\n  }\\\\n\\\\n  function rescueToken(address tokenAddress, uint256 tokens) public onlyOwner returns (bool success) {\\\\n    return IBEP20(tokenAddress).transfer(msg.sender, tokens);\\\\n  }\\\\n\\\\n  function checkMaxWalletToken() external view returns (uint256) {\\\\n    return _maxWalletToken.div(rate);\\\\n  }\\\\n\\\\n  function checkMaxTxAmount() external view returns (uint256) {\\\\n    return _maxTxAmount.div(rate);\\\\n  }\\\\n\\\\n  function setMaxWalletPercent_base1000(uint256 maxWallPercent_base1000) external onlyOwner {\\\\n    _maxWalletToken = rSupply.div(1000).mul(maxWallPercent_base1000);\\\\n  }\\\\n\\\\n  function setMaxTxPercent_base1000(uint256 maxTXPercentage_base1000) external onlyOwner {\\\\n    _maxTxAmount = rSupply.div(1000).mul(maxTXPercentage_base1000);\\\\n  }\\\\n\\\\n  /* Airdrop Begins */\\\\n\\\\n  function multiTransfer(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256[] calldata tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 801, \'GAS Error: max airdrop limit is 500 addresses\'); // to prevent overflow\\\\n    require(addresses.length == tokens.length, \'Mismatch between Address and token count\');\\\\n\\\\n    uint256 SCCC = 0;\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      SCCC = SCCC + tokens[i];\\\\n    }\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens[i]);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function multiTransfer_fixed(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256 tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 2001, \'GAS Error: max airdrop limit is 2000 addresses\'); // to prevent overflow\\\\n\\\\n    uint256 SCCC = tokens * addresses.length;\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function rebase_updatebalance(address[] calldata addresses) external onlyOwner {\\\\n    require(addresses.length < 5001, \'GAS Error: max address allowed is 5000\'); // to prevent out of gas & overflow error\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x54c3f79ff247440290ee96d01c89ac82460f0ad8f01aa89bf921e131103cf842\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60806040526002805473ae13d989dac2f0debff460ac112a837c89baa7cd6001600160a01b03199182161782556003805461dead90831617815560048054909216909155600b819055600c556006600d556064600e5560115560006012556015805460ff60a01b191690556207a1206017556018805461ffff1916610500179055601a805460ff1916905561c350668e63c1efd3ffff1904601b55620000df6002620000cb6064662386f26fc100006000195b06600019036200041360201b620024a11790919060201c565b6200046660201b620024e31790919060201c565b601e55620000ff6003620000cb6064662386f26fc10000600019620000b2565b601f553480156200010f57600080fd5b50600080546001600160a01b0319908116339081178355825260016020818152604093849020805460ff191690921790915560138054909216739ac64cc6e4415144c455bd8e4837fea55603e5c31791829055825163c45a015560e01b815292516001600160a01b03929092169263c45a01559260048083019392829003018186803b1580156200019f57600080fd5b505afa158015620001b4573d6000803e3d6000fd5b505050506040513d6020811015620001cb57600080fd5b5051600254604080516364e329cb60e11b81526001600160a01b0392831660048201523060248201529051919092169163c9c653969160448083019260209291908290030181600087803b1580156200022357600080fd5b505af115801562000238573d6000803e3d6000fd5b505050506040513d60208110156200024f57600080fd5b5051601480546001600160a01b03199081166001600160a01b039384161782553060009081526006602090815260408083206013548716845290915290206000199081905591546015805491909416911617909155662386f26fc10000601d819055620002be918190620000b2565b601c556013546040516001600160a01b0390911690620002de906200056b565b6001600160a01b03909116815260405190819003602001906000f0801580156200030c573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03928316179055336000818152600760209081526040808320805460ff1990811660019081179092556008845282852080548216831790556009845282852080548216831790556003805488168652838620805483168417905530808752848720805484168517905560145489168752600a865284872080548416851790558652838620805483168417905554909616845281842080549096161790945582825260058152838220660e3d2cfe61ffff199055601d5484519081529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a362000579565b60006200045d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620004c460201b60201c565b90505b92915050565b600082620004775750600062000460565b828202828482816200048557fe5b04146200045d5760405162461bcd60e51b81526004018080602001828103825260218152602001806200471d6021913960400191505060405180910390fd5b60008183620005545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000518578181015183820152602001620004fe565b50505050905090810190601f168015620005465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200056157fe5b0495945050505050565b610ebd806200386083390190565b6132d780620005896000396000f3fe6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f55565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fc2565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611029565b34801561051357600080fd5b506103dd61102f565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611035565b34801561060357600080fd5b506103dd61134f565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611355565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611417565b34801561068d57600080fd5b506103dd61149b565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b50803590602001356114a1565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff16611551565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115ba565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611626565b34801561076d57600080fd5b5061077661163a565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163f565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118c3565b34801561085c57600080fd5b506103dd61198a565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b0316611990565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a5565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119ba565b34801561090157600080fd5b5061090a611a3a565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a49565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5e565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611ad1565b3480156109d357600080fd5b506103dd611adf565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae5565b348015610a6357600080fd5b506103dd611c4a565b348015610a7857600080fd5b506104de611c68565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c71565b348015610ac857600080fd5b506103dd611ce4565b348015610add57600080fd5b506104de611cfd565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d06565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dff565b348015610b6157600080fd5b50610776611e27565b348015610b7657600080fd5b506104a3611e35565b348015610b8b57600080fd5b506103dd611e9f565b348015610ba057600080fd5b506103dd611ea5565b348015610bb557600080fd5b506104de611eab565b348015610bca57600080fd5b5061090a611eba565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec9565b348015610c1257600080fd5b50610404611ede565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611efd565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f45565b348015610c7b57600080fd5b5061090a611fa1565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fb0565b348015610cc957600080fd5b506103dd611fbd565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd6565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b5035612040565b348015610d3b57600080fd5b506103dd6120a3565b348015610d5057600080fd5b506103dd6120a9565b348015610d6557600080fd5b5061090a6120af565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120be565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e9565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b0316612160565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121c4565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612275565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123eb565b348015610ec357600080fd5b5061090a61245e565b348015610ed857600080fd5b506103dd61246d565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b0316612473565b348015610f2057600080fd5b506104de612491565b601b5481565b60408051808201909152600c81526b15195cdd13585b58985c185960a21b602082015290565b610f5e33611626565b610f98576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fbc81610fb66103e8662386f26fc100006000195b0619906124a1565b906124e3565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103e33611626565b611078576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b85760405162461bcd60e51b815260040180806020018281038252602d81526020018061324f602d913960400191505060405180910390fd5b8281146110f65760405162461bcd60e51b815260040180806020018281038252602881526020018061319a6028913960400191505060405180910390fd5b6000805b848110156111245783838281811061110e57fe5b60200291909101359290920191506001016110fa565b508061112f87611dff565b1015611182576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112b2576111c58787878481811061119d57fe5b905060200201356001600160a01b03168686858181106111b957fe5b9050602002013561253c565b50600a60008787848181106111d657fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112aa576016546001600160a01b03166314b6ca9687878481811061121d57fe5b905060200201356001600160a01b031661125189898681811061123c57fe5b905060200201356001600160a01b0316611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129757600080fd5b505af19250505080156112a8575060015b505b600101611185565b506001600160a01b0386166000908152600a602052604090205460ff16611347576016546001600160a01b03166314b6ca96876112ee81611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133457600080fd5b505af1925050508015611345575060015b505b505050505050565b600c5481565b6001600160a01b038316600090815260066020908152604080832033845290915281205460001914611402576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113dd918490612658565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b61140d8484846126ef565b90505b9392505050565b61142033611626565b61145a576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114885750601254155b15611497574360125560118190555b5050565b601c5481565b6114aa33612473565b6114e9576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153d57600080fd5b505af1158015611347573d6000803e3d6000fd5b61155a33611626565b611594576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115c333611626565b6115fd576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164833611626565b611682576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116c25760405162461bcd60e51b815260040180806020018281038252602e8152602001806131c2602e913960400191505060405180910390fd5b808202806116cf86611dff565b1015611722576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b8381101561182b576117538686868481811061173d57fe5b905060200201356001600160a01b03168561253c565b50600a600086868481811061176457fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611823576016546001600160a01b03166314b6ca968686848181106117ab57fe5b905060200201356001600160a01b03166117ca88888681811061123c57fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561181057600080fd5b505af1925050508015611821575060015b505b600101611725565b506001600160a01b0385166000908152600a602052604090205460ff166118bc576016546001600160a01b03166314b6ca968661186781611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118ad57600080fd5b505af192505050801561134757505b5050505050565b60006118ce33611626565b611908576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195757600080fd5b505af115801561196b573d6000803e3d6000fd5b505050506040513d602081101561198157600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119c333612473565b611a02576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a35573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a6733612473565b611aa6576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061102382600019610fc2565b600d5481565b611aee33611626565b611b28576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b685760405162461bcd60e51b815260040180806020018281038252602681526020018061327c6026913960400191505060405180910390fd5b60005b81811015611a3557600a6000848484818110611b8357fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c42576016546001600160a01b03166314b6ca96848484818110611bca57fe5b905060200201356001600160a01b0316611be986868681811061123c57fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2f57600080fd5b505af1925050508015611c40575060015b505b600101611b6b565b6000611c63601c54601e546124a190919063ffffffff16565b905090565b60185460ff1681565b611c7a33612473565b611cb9576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c63601c54601b546124a190919063ffffffff16565b601a5460ff1681565b611d0f33612473565b611d4e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6e8584612c59565b9050600d54600c541115611d9f57611d9d600c54611d97600d5484612cb390919063ffffffff16565b90612c59565b505b6003600e5481611dab57fe5b0481106118bc576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161102391906124a1565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8557600080fd5b505af1158015611e99573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b6040805180820190915260058152640544d414d560dc1b602082015290565b611f0633611626565b611f40576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f4e33612473565b611f8d576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9c57600080fd5b601755565b6014546001600160a01b031681565b60006114103384846126ef565b6000611c63601c54601f546124a190919063ffffffff16565b611fdf33611626565b612019576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204933611626565b612083576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209d81610fb66103e8662386f26fc10000600019610fae565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120f233612473565b612131576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215981610fb6612710662386f26fc10000600019610fae565b601b555050565b61216933611626565b6121a3576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121cd33611626565b612207576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b61227e33612473565b6122bd576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122e457506014546001600160a01b03838116911614155b6122ed57600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff1916821580159190911790915561238a5760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236d57600080fd5b505af1158015612381573d6000803e3d6000fd5b50505050611497565b6016546001600160a01b03166314b6ca96836123a581611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153d57600080fd5b6123f433612473565b612433576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061141083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf5565b6000826124f257506000611023565b828202828482816124ff57fe5b04146114105760405162461bcd60e51b81526004018080602001828103825260218152602001806131f06021913960400191505060405180910390fd5b600080612554601c54846124e390919063ffffffff16565b90506125bc8160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126589092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125eb9082612c59565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263c9085906124a1565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126ac578181015183820152602001612694565b50505050905090810190601f1680156126d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff16156127145761270d84848461253c565b9050611410565b6001600160a01b03841660009081526001602052604090205460ff1615801561275657506001600160a01b03831660009081526001602052604090205460ff16155b156127b057601554600160a01b900460ff166127b0576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c7601c54846124e390919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127fc57506001600160a01b0384163014155b801561281657506003546001600160a01b03858116911614155b801561283057506014546001600160a01b03858116911614155b1561288757600061284085611dff565b9050601f5482820111156128855760405162461bcd60e51b815260040180806020018281038252603e815260200180613211603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a6575060185460ff165b80156128cb57506001600160a01b03841660009081526009602052604090205460ff16155b1561295b576001600160a01b0384166000908152601960205260409020544211612932576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129658582612d5a565b61296d612dc8565b1561297a5761297a612e1c565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129cc918390612658565b6001600160a01b0386166000908152600560205260408120919091556129f18661304d565b1580612a035750612a018561304d565b155b612a2a57601454612a2590879084906001600160a01b0389811691161461306c565b612a2c565b815b6001600160a01b038616600090815260056020526040902054909150612a529082612c59565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af9576016546001600160a01b03166314b6ca9687612aa081611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae657600080fd5b505af1925050508015612af7575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b8d576016546001600160a01b03166314b6ca9686612b3481611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7a57600080fd5b505af1925050508015612b8b575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612be057600080fd5b505af1925050508015612bf1575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c3c601c54856124a190919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b600082820183811015611410576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061141083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612658565b60008183612d445760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126ac578181015183820152602001612694565b506000838581612d5057fe5b0495945050505050565b601e5481111580612d8357506001600160a01b03821660009081526008602052604090205460ff165b611497576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612dee5750601a54610100900460ff16155b8015612dfc5750601a5460ff165b8015611c63575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e3e91906124a1565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e7257fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9d57fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f37578181015183820152602001612f1f565b505050509050019650505050505050600060405180830381600087803b158015612f6057600080fd5b505af1158015612f74573d6000803e3d6000fd5b505050506000612f8d8247612cb390919063ffffffff16565b9050601054600014158015612fa35750600f5415155b1561303c576000612fcb601054612fc5600f54856124e390919063ffffffff16565b906124a1565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301d57600080fd5b505af19350505050801561302f575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c54600090821561307d5750600d545b6000613094600b5483612c5990919063ffffffff16565b905060006130b182610fb6600e54896124a190919063ffffffff16565b9050841580156130c657504360115460125401115b156130de576130db6063610fb68860646124a1565b90505b6010546130eb9082612c59565b6010556131086130ff84610fb684866124a1565b600f5490612c59565b600f55306000908152600560205260409020546131259082612c59565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131739085906124a1565b60408051918252519081900360200190a361318e8682612cb3565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212204dedbd422b6a1e24a32feb82ae407279e7e59324d25c12869658e50342163a6464736f6c634300070600336080604052600180546001600160a01b03199081167378867bbeef44f2326bf8ddd1941a4439382ef2a7179091556002805490911673ae13d989dac2f0debff460ac112a837c89baa7cd1790556ec097ce7bc90715b34b9f1000000000600c55610a8c600d55620aae60600e5534801561007857600080fd5b50604051610ebd380380610ebd8339818101604052602081101561009b57600080fd5b50516001600160a01b0381166100c557739ac64cc6e4415144c455bd8e4837fea55603e5c36100c7565b805b600380546001600160a01b03929092166001600160a01b0319928316179055600080549091163317905550610dbc806101016000396000f3fe6080604052600436106100dd5760003560e01c8063ce7c2ac21161007f578063efca2eed11610059578063efca2eed14610254578063f0fc6bca14610269578063ffb2c4791461027e578063ffd49c84146102a8576100dd565b8063ce7c2ac2146101e6578063d0e30db014610237578063e2d2e2191461023f576100dd565b80632d48e896116100bb5780632d48e896146101775780633a98ef39146101a75780634fab0ae8146101bc578063997664d7146101d1576100dd565b806311ce023d146100e257806314b6ca961461010957806328fd319814610144575b600080fd5b3480156100ee57600080fd5b506100f76102bd565b60408051918252519081900360200190f35b34801561011557600080fd5b506101426004803603604081101561012c57600080fd5b506001600160a01b0381351690602001356102c3565b005b34801561015057600080fd5b506100f76004803603602081101561016757600080fd5b50356001600160a01b03166103e8565b34801561018357600080fd5b506101426004803603604081101561019a57600080fd5b5080359060200135610474565b3480156101b357600080fd5b506100f7610496565b3480156101c857600080fd5b506100f761049c565b3480156101dd57600080fd5b506100f76104a2565b3480156101f257600080fd5b506102196004803603602081101561020957600080fd5b50356001600160a01b03166104a8565b60408051938452602084019290925282820152519081900360600190f35b6101426104c9565b34801561024b57600080fd5b506100f761075b565b34801561026057600080fd5b506100f7610761565b34801561027557600080fd5b50610142610767565b34801561028a57600080fd5b50610142600480360360208110156102a157600080fd5b5035610772565b3480156102b457600080fd5b506100f7610854565b600c5481565b6000546001600160a01b031633146102da57600080fd5b6001600160a01b03821660009081526007602052604090205415610301576103018261085a565b60008111801561032757506001600160a01b038216600090815260076020526040902054155b1561033a5761033582610982565b61036d565b8015801561035f57506001600160a01b03821660009081526007602052604090205415155b1561036d5761036d826109e3565b6001600160a01b03821660009081526007602052604090205460085461039e91839161039891610ad0565b90610b1b565b6008556001600160a01b03821660009081526007602052604090208190556103c581610b75565b6001600160a01b0390921660009081526007602052604090206001019190915550565b6001600160a01b03811660009081526007602052604081205461040d5750600061046f565b6001600160a01b03821660009081526007602052604081205461042f90610b75565b6001600160a01b0384166000908152600760205260409020600101549091508082116104605760009250505061046f565b61046a8282610ad0565b925050505b919050565b6000546001600160a01b0316331461048b57600080fd5b600d91909155600e55565b60085481565b600e5481565b60095481565b60076020526000908152604090208054600182015460029092015490919083565b6000546001600160a01b031633146104e057600080fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b50516040805160028082526060820183529293506000929091602083019080368337505060025482519293506001600160a01b03169183915060009061059757fe5b6001600160a01b03928316602091820292909201015260018054835192169183919081106105c157fe5b6001600160a01b0392831660209182029290920181019190915260035460405163b6f9de9560e01b815260006004820181815230604484018190524260648501819052608060248601908152895160848701528951969098169763b6f9de9597349795968b969495939460a49091019187810191028083838b5b8381101561065357818101518382015260200161063b565b50505050905001955050505050506000604051808303818588803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b5050600154604080516370a0823160e01b815230600482015290516000955061071994508793506001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106e757600080fd5b505afa1580156106fb573d6000803e3d6000fd5b505050506040513d602081101561071157600080fd5b505190610ad0565b6009549091506107299082610b1b565b600955600854600c546107539161074a916107449085610b92565b90610beb565b600b5490610b1b565b600b55505050565b600b5481565b600a5481565b6107703361085a565b565b6000546001600160a01b0316331461078957600080fd5b600454806107975750610851565b6000805a905060005b84831080156107ae57508381105b1561084c5783600f54106107c2576000600f555b6107ee6004600f54815481106107d457fe5b6000918252602090912001546001600160a01b0316610c2d565b1561081f5761081f6004600f548154811061080557fe5b6000918252602090912001546001600160a01b031661085a565b61083461082d5a8490610ad0565b8490610b1b565b92505a600f80546001908101909155909250016107a0565b505050505b50565b600d5481565b6001600160a01b03811660009081526007602052604090205461087c57610851565b6000610887826103e8565b9050801561097e57600a5461089c9082610b1b565b600a556001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b505050506040513d602081101561091f57600080fd5b50506001600160a01b038216600090815260066020908152604080832042905560079091529020600201546109549082610b1b565b6001600160a01b03831660009081526007602052604090206002810191909155546103c590610b75565b5050565b600480546001600160a01b039092166000818152600560205260408120849055600184018355919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b0319169091179055565b6004805460001981019081106109f557fe5b60009182526020808320909101546001600160a01b0384811684526005909252604090922054600480549290931692918110610a2d57fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559183168152600591829052604081205460048054919392916000198101908110610a7b57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556004805480610aab57fe5b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000610b1283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c69565b90505b92915050565b600082820183811015610b12576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610b15600c54610744600b5485610b9290919063ffffffff16565b600082610ba157506000610b15565b82820282848281610bae57fe5b0414610b125760405162461bcd60e51b8152600401808060200182810382526021815260200180610d666021913960400191505060405180910390fd5b6000610b1283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d00565b600d546001600160a01b0382166000908152600660205260408120549091429101108015610b155750600e54610c62836103e8565b1192915050565b60008184841115610cf85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cbd578181015183820152602001610ca5565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d4f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cbd578181015183820152602001610ca5565b506000838581610d5b57fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220d47bc4e3300a07e78029e5a5d596a3d989e361983f4d9c24dba497c608b0f41e64736f6c63430007060033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","deployedBytecode":"0x6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f55565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fc2565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611029565b34801561051357600080fd5b506103dd61102f565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611035565b34801561060357600080fd5b506103dd61134f565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611355565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611417565b34801561068d57600080fd5b506103dd61149b565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b50803590602001356114a1565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff16611551565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115ba565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611626565b34801561076d57600080fd5b5061077661163a565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163f565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118c3565b34801561085c57600080fd5b506103dd61198a565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b0316611990565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a5565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119ba565b34801561090157600080fd5b5061090a611a3a565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a49565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5e565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611ad1565b3480156109d357600080fd5b506103dd611adf565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae5565b348015610a6357600080fd5b506103dd611c4a565b348015610a7857600080fd5b506104de611c68565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c71565b348015610ac857600080fd5b506103dd611ce4565b348015610add57600080fd5b506104de611cfd565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d06565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dff565b348015610b6157600080fd5b50610776611e27565b348015610b7657600080fd5b506104a3611e35565b348015610b8b57600080fd5b506103dd611e9f565b348015610ba057600080fd5b506103dd611ea5565b348015610bb557600080fd5b506104de611eab565b348015610bca57600080fd5b5061090a611eba565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec9565b348015610c1257600080fd5b50610404611ede565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611efd565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f45565b348015610c7b57600080fd5b5061090a611fa1565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fb0565b348015610cc957600080fd5b506103dd611fbd565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd6565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b5035612040565b348015610d3b57600080fd5b506103dd6120a3565b348015610d5057600080fd5b506103dd6120a9565b348015610d6557600080fd5b5061090a6120af565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120be565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e9565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b0316612160565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121c4565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612275565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123eb565b348015610ec357600080fd5b5061090a61245e565b348015610ed857600080fd5b506103dd61246d565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b0316612473565b348015610f2057600080fd5b506104de612491565b601b5481565b60408051808201909152600c81526b15195cdd13585b58985c185960a21b602082015290565b610f5e33611626565b610f98576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fbc81610fb66103e8662386f26fc100006000195b0619906124a1565b906124e3565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103e33611626565b611078576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b85760405162461bcd60e51b815260040180806020018281038252602d81526020018061324f602d913960400191505060405180910390fd5b8281146110f65760405162461bcd60e51b815260040180806020018281038252602881526020018061319a6028913960400191505060405180910390fd5b6000805b848110156111245783838281811061110e57fe5b60200291909101359290920191506001016110fa565b508061112f87611dff565b1015611182576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112b2576111c58787878481811061119d57fe5b905060200201356001600160a01b03168686858181106111b957fe5b9050602002013561253c565b50600a60008787848181106111d657fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112aa576016546001600160a01b03166314b6ca9687878481811061121d57fe5b905060200201356001600160a01b031661125189898681811061123c57fe5b905060200201356001600160a01b0316611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129757600080fd5b505af19250505080156112a8575060015b505b600101611185565b506001600160a01b0386166000908152600a602052604090205460ff16611347576016546001600160a01b03166314b6ca96876112ee81611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133457600080fd5b505af1925050508015611345575060015b505b505050505050565b600c5481565b6001600160a01b038316600090815260066020908152604080832033845290915281205460001914611402576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113dd918490612658565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b61140d8484846126ef565b90505b9392505050565b61142033611626565b61145a576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114885750601254155b15611497574360125560118190555b5050565b601c5481565b6114aa33612473565b6114e9576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153d57600080fd5b505af1158015611347573d6000803e3d6000fd5b61155a33611626565b611594576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115c333611626565b6115fd576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164833611626565b611682576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116c25760405162461bcd60e51b815260040180806020018281038252602e8152602001806131c2602e913960400191505060405180910390fd5b808202806116cf86611dff565b1015611722576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b8381101561182b576117538686868481811061173d57fe5b905060200201356001600160a01b03168561253c565b50600a600086868481811061176457fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611823576016546001600160a01b03166314b6ca968686848181106117ab57fe5b905060200201356001600160a01b03166117ca88888681811061123c57fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561181057600080fd5b505af1925050508015611821575060015b505b600101611725565b506001600160a01b0385166000908152600a602052604090205460ff166118bc576016546001600160a01b03166314b6ca968661186781611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118ad57600080fd5b505af192505050801561134757505b5050505050565b60006118ce33611626565b611908576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195757600080fd5b505af115801561196b573d6000803e3d6000fd5b505050506040513d602081101561198157600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119c333612473565b611a02576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a35573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a6733612473565b611aa6576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061102382600019610fc2565b600d5481565b611aee33611626565b611b28576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b685760405162461bcd60e51b815260040180806020018281038252602681526020018061327c6026913960400191505060405180910390fd5b60005b81811015611a3557600a6000848484818110611b8357fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c42576016546001600160a01b03166314b6ca96848484818110611bca57fe5b905060200201356001600160a01b0316611be986868681811061123c57fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2f57600080fd5b505af1925050508015611c40575060015b505b600101611b6b565b6000611c63601c54601e546124a190919063ffffffff16565b905090565b60185460ff1681565b611c7a33612473565b611cb9576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c63601c54601b546124a190919063ffffffff16565b601a5460ff1681565b611d0f33612473565b611d4e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6e8584612c59565b9050600d54600c541115611d9f57611d9d600c54611d97600d5484612cb390919063ffffffff16565b90612c59565b505b6003600e5481611dab57fe5b0481106118bc576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161102391906124a1565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8557600080fd5b505af1158015611e99573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b6040805180820190915260058152640544d414d560dc1b602082015290565b611f0633611626565b611f40576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f4e33612473565b611f8d576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9c57600080fd5b601755565b6014546001600160a01b031681565b60006114103384846126ef565b6000611c63601c54601f546124a190919063ffffffff16565b611fdf33611626565b612019576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204933611626565b612083576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209d81610fb66103e8662386f26fc10000600019610fae565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120f233612473565b612131576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215981610fb6612710662386f26fc10000600019610fae565b601b555050565b61216933611626565b6121a3576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121cd33611626565b612207576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b61227e33612473565b6122bd576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122e457506014546001600160a01b03838116911614155b6122ed57600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff1916821580159190911790915561238a5760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236d57600080fd5b505af1158015612381573d6000803e3d6000fd5b50505050611497565b6016546001600160a01b03166314b6ca96836123a581611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153d57600080fd5b6123f433612473565b612433576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061141083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf5565b6000826124f257506000611023565b828202828482816124ff57fe5b04146114105760405162461bcd60e51b81526004018080602001828103825260218152602001806131f06021913960400191505060405180910390fd5b600080612554601c54846124e390919063ffffffff16565b90506125bc8160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126589092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125eb9082612c59565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263c9085906124a1565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126ac578181015183820152602001612694565b50505050905090810190601f1680156126d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff16156127145761270d84848461253c565b9050611410565b6001600160a01b03841660009081526001602052604090205460ff1615801561275657506001600160a01b03831660009081526001602052604090205460ff16155b156127b057601554600160a01b900460ff166127b0576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c7601c54846124e390919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127fc57506001600160a01b0384163014155b801561281657506003546001600160a01b03858116911614155b801561283057506014546001600160a01b03858116911614155b1561288757600061284085611dff565b9050601f5482820111156128855760405162461bcd60e51b815260040180806020018281038252603e815260200180613211603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a6575060185460ff165b80156128cb57506001600160a01b03841660009081526009602052604090205460ff16155b1561295b576001600160a01b0384166000908152601960205260409020544211612932576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129658582612d5a565b61296d612dc8565b1561297a5761297a612e1c565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129cc918390612658565b6001600160a01b0386166000908152600560205260408120919091556129f18661304d565b1580612a035750612a018561304d565b155b612a2a57601454612a2590879084906001600160a01b0389811691161461306c565b612a2c565b815b6001600160a01b038616600090815260056020526040902054909150612a529082612c59565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af9576016546001600160a01b03166314b6ca9687612aa081611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae657600080fd5b505af1925050508015612af7575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b8d576016546001600160a01b03166314b6ca9686612b3481611dff565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7a57600080fd5b505af1925050508015612b8b575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612be057600080fd5b505af1925050508015612bf1575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c3c601c54856124a190919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b600082820183811015611410576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061141083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612658565b60008183612d445760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126ac578181015183820152602001612694565b506000838581612d5057fe5b0495945050505050565b601e5481111580612d8357506001600160a01b03821660009081526008602052604090205460ff165b611497576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612dee5750601a54610100900460ff16155b8015612dfc5750601a5460ff165b8015611c63575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e3e91906124a1565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e7257fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9d57fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f37578181015183820152602001612f1f565b505050509050019650505050505050600060405180830381600087803b158015612f6057600080fd5b505af1158015612f74573d6000803e3d6000fd5b505050506000612f8d8247612cb390919063ffffffff16565b9050601054600014158015612fa35750600f5415155b1561303c576000612fcb601054612fc5600f54856124e390919063ffffffff16565b906124a1565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301d57600080fd5b505af19350505050801561302f575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c54600090821561307d5750600d545b6000613094600b5483612c5990919063ffffffff16565b905060006130b182610fb6600e54896124a190919063ffffffff16565b9050841580156130c657504360115460125401115b156130de576130db6063610fb68860646124a1565b90505b6010546130eb9082612c59565b6010556131086130ff84610fb684866124a1565b600f5490612c59565b600f55306000908152600560205260409020546131259082612c59565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131739085906124a1565b60408051918252519081900360200190a361318e8682612cb3565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212204dedbd422b6a1e24a32feb82ae407279e7e59324d25c12869658e50342163a6464736f6c63430007060033","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":427,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":431,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"authorizations","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1327,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"WBNB","offset":0,"slot":"2","type":"t_address"},{"astId":1330,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"DEAD","offset":0,"slot":"3","type":"t_address"},{"astId":1333,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"ZERO","offset":0,"slot":"4","type":"t_address"},{"astId":1346,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"_rBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":1352,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"_allowances","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1356,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"isFeeExempt","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":1360,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"isTxLimitExempt","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":1364,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"isTimelockExempt","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"},{"astId":1368,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"isDividendExempt","offset":0,"slot":"10","type":"t_mapping(t_address,t_bool)"},{"astId":1371,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"treasureFee","offset":0,"slot":"11","type":"t_uint256"},{"astId":1374,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"buyReflectionFee","offset":0,"slot":"12","type":"t_uint256"},{"astId":1377,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"sellReflectionFee","offset":0,"slot":"13","type":"t_uint256"},{"astId":1380,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"feeDenominator","offset":0,"slot":"14","type":"t_uint256"},{"astId":1382,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"totalReflectionFeeAmount","offset":0,"slot":"15","type":"t_uint256"},{"astId":1384,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"totalFeeAmount","offset":0,"slot":"16","type":"t_uint256"},{"astId":1387,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"deadBlocks","offset":0,"slot":"17","type":"t_uint256"},{"astId":1390,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"launchedAt","offset":0,"slot":"18","type":"t_uint256"},{"astId":1392,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"router","offset":0,"slot":"19","type":"t_contract(IDEXRouter)661"},{"astId":1394,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"pair","offset":0,"slot":"20","type":"t_address"},{"astId":1396,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"pairContract","offset":0,"slot":"21","type":"t_contract(InterfaceLP)564"},{"astId":1399,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"tradingOpen","offset":20,"slot":"21","type":"t_bool"},{"astId":1401,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"distributor","offset":0,"slot":"22","type":"t_contract(DividendDistributor)1314"},{"astId":1404,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"distributorGas","offset":0,"slot":"23","type":"t_uint256"},{"astId":1407,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"buyCooldownEnabled","offset":0,"slot":"24","type":"t_bool"},{"astId":1410,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"cooldownTimerInterval","offset":1,"slot":"24","type":"t_uint8"},{"astId":1414,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"cooldownTimer","offset":0,"slot":"25","type":"t_mapping(t_address,t_uint256)"},{"astId":1417,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"swapEnabled","offset":0,"slot":"26","type":"t_bool"},{"astId":1419,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"inSwap","offset":1,"slot":"26","type":"t_bool"},{"astId":1448,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"swapThreshold","offset":0,"slot":"27","type":"t_uint256"},{"astId":1450,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"rate","offset":0,"slot":"28","type":"t_uint256"},{"astId":1452,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"_totalSupply","offset":0,"slot":"29","type":"t_uint256"},{"astId":1483,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"_maxTxAmount","offset":0,"slot":"30","type":"t_uint256"},{"astId":1492,"contract":"contracts/TestMambapad.sol:TestMambapad","label":"_maxWalletToken","offset":0,"slot":"31","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(DividendDistributor)1314":{"encoding":"inplace","label":"contract DividendDistributor","numberOfBytes":"20"},"t_contract(IDEXRouter)661":{"encoding":"inplace","label":"contract IDEXRouter","numberOfBytes":"20"},"t_contract(InterfaceLP)564":{"encoding":"inplace","label":"contract InterfaceLP","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},196:function(e){e.exports=JSON.parse('[{"constant":true,"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"name":"timestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"components":[{"name":"target","type":"address"},{"name":"callData","type":"bytes"}],"name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"name":"blockNumber","type":"uint256"},{"name":"returnData","type":"bytes[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getLastBlockHash","outputs":[{"name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"name":"difficulty","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"name":"gaslimit","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"name":"coinbase","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}]')},198:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));n(2);var a=n(51),b=n(59),d={97:"0xbC36F44C7FCE03C0e2801BB7A52278755AF8e21F",56:"0x2c8368f8F474Ed9aF49b87eAc77061BEb986c2f1"},i={97:"0xF505e6E8c1FB372A37BB4dACb7B79B0EE3c3e960",56:"0xf43e84e5461005ecAcB49693Fa6Dbf5C9eCa8c10"},s=(n(68),n(46),n(174),n(50),n(60)),r=Object(s.a)(),c=new a.a.providers.JsonRpcProvider(r),f=n(194),o=n(195),u=(n(196),function(e){return e[56]?e[56]:e[b.a.MAINNET]}),l=function(e,t,n){var b=null!==n&&void 0!==n?n:c;return new a.a.Contract(t,e,b)},p=function(e){return l(f,u(d),e)},m=function(e){return l(o.abi,u(i),e)}},227:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return V}));var a=n(2),b=n(185),d=n(192),i=n(4),s=n.n(i),r=n(30),c=n(50),f=n(76),o=n(81),u=(n(203),n(44)),l=n.n(u),p=(n(51),n(60),new l.a(10),n.p+"static/media/mamba.ac9e647b.mp4"),m=n.p+"static/media/Mambapad_6.b1683b7c.pdf",y=n(193),h=n.p+"static/media/eightpolygons.8e326ee0.png",x=n(198),T=n(13),j=function(){var e=Object(c.c)(),t=e.account,n=e.library,b=Object(o.b)();b.setModalTitle,b.setModalBody,b.unSetModal;return Object(a.useEffect)((function(){(function(){var e=Object(r.a)(s.a.mark((function e(t){var a,b;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=9;break}return e.next=3,n.getSigner().getBalance();case 3:return a=e.sent,e.next=6,Object(x.a)(n.getSigner()).balanceOf(t);case 6:return b=e.sent,console.log(a.toString(),b.toString()),e.abrupt("return",b);case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}})()(t)}),[t,n]),Object(T.jsx)(T.Fragment,{children:Object(T.jsxs)("div",{class:"video-wrapper",children:[Object(T.jsx)("video",{playsinline:!0,autoPlay:!0,muted:!0,loop:!0,children:Object(T.jsx)("source",{src:p,type:"video/mp4"})}),Object(T.jsx)("section",{className:"container hero",children:Object(T.jsxs)("div",{className:"row",children:[Object(T.jsxs)("div",{className:"col-lg-6",style:{marginTop:"20px"},children:[Object(T.jsx)("section",{className:"bannerslogan",children:Object(T.jsx)("div",{className:"hero-title",children:"Bridging the world to the future"})}),Object(T.jsx)("p",{className:"hero-description",children:"The first Launchpad platform for both macro-cap & micro-cap promising projects built on Binance Smart Chain. We aimed to present best projects to our investors by fundraising."}),Object(T.jsx)("br",{}),Object(T.jsxs)("div",{className:"buy-whitepapaer",children:[Object(T.jsx)("a",{href:m,target:"blank",children:Object(T.jsx)("button",{type:"button",className:"btn btn-warning button-large",children:"BUY NOW"})}),Object(T.jsx)("a",{href:m,target:"blank",children:Object(T.jsx)("button",{type:"button",className:"btn btn-default button-large-default",children:"WHITEPAPER"})})]}),Object(T.jsx)("div",{style:{marginTop:"40px"},children:Object(T.jsx)(y.a,{size:30})}),Object(T.jsx)("i",{className:"bi bi-telegram"}),Object(T.jsxs)("div",{style:{marginTop:"20px"},children:[Object(T.jsx)("a",{href:"https://auditrate.tech/images/pdf/Mambapad_0xf43e84e5461005ecAcB49693Fa6Dbf5C9eCa8c10.pdf",target:"blank",children:Object(T.jsx)("button",{type:"button",className:"btn btn-default button-small",children:"AUDIT"})}),Object(T.jsx)("button",{type:"button",className:"btn btn-default button-small",onClick:function(){return Object(f.c)("Coming Soon...")},children:"AUDIT"})]})]}),Object(T.jsx)("div",{className:"col-lg-6",style:{marginRight:"0"},children:Object(T.jsx)("div",{className:"hero-polygons",children:Object(T.jsx)("img",{src:h,alt:"eightpolygons"})})})]})})]})})},O=n(232),v=n(214),M=n(215),g=n(216),w=n(182),_=n.n(w),E=n(200),k=n.n(E);function A(e){var t=e.feature;return Object(T.jsx)(_.a,{bottom:!0,cascade:!0,children:Object(T.jsxs)("section",{className:"feature-card",children:[Object(T.jsx)("div",{className:"feature-card-image",children:Object(T.jsx)(t.picture,{size:100})}),Object(T.jsxs)("div",{className:"feature-card-header",children:[" ",t.feature," "]}),Object(T.jsx)("div",{className:"feature-card-body",children:Object(T.jsx)("p",{className:"feature-description",children:t.description.split("/\n/g")})}),Object(T.jsx)("div",{className:"feature-card-footer",children:"AUDIT"!==t.btn_1&&("MEDIUM"===t.btn_1?Object(T.jsx)("button",{className:"card-button-small",onClick:function(){return Object(f.c)("Coming Soon...")},children:t.btn_1}):Object(T.jsx)("button",{className:"card-button-small",onClick:function(){return document.getElementById("tiersystem").scrollIntoView()},children:t.btn_1}))})]})})}var I=n(179),D=n(189),B=n.p+"static/media/doughnut.59e1d989.svg",S=function(){return Object(T.jsxs)(T.Fragment,{children:[Object(T.jsxs)("section",{className:"container feature",children:[Object(T.jsxs)("section",{className:"feature-cards",children:[Object(T.jsx)(k.a,{left:!0,children:Object(T.jsx)("div",{className:"feature-mamba",children:Object(T.jsx)("img",{src:D.a,alt:"leftsidebigmamba"})})}),Object(T.jsxs)(_.a,{left:!0,children:[Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"MAIN FEATURES"}),Object(T.jsx)("p",{className:"text-center",children:"Introducing the amazing features of Mambapad"})]}),Object(T.jsx)("section",{className:"projects",children:I.a.map((function(e,t){return Object(T.jsx)(A,{feature:e},t)}))})]}),Object(T.jsx)("section",{className:"",children:Object(T.jsx)(k.a,{cascade:!0,children:Object(T.jsxs)(O.a,{className:"tokenomics",children:[Object(T.jsxs)(v.a,{children:[Object(T.jsxs)(M.a,{lg:!0,md:"6",style:{display:"flex",flexDirection:"column",justifyContent:"space-around"},children:[Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold feature-title",children:"TOKENOMICS"}),Object(T.jsxs)(g.a,{className:"taxtable",bordered:!0,hover:!0,variant:"dark",children:[Object(T.jsx)("thead",{children:Object(T.jsxs)("tr",{children:[Object(T.jsx)("th",{children:"TAX"}),Object(T.jsx)("th",{children:"BUY"}),Object(T.jsx)("th",{children:"SELL"})]})}),Object(T.jsxs)("tbody",{children:[Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"HOLDERS"}),Object(T.jsx)("td",{children:"3%"}),Object(T.jsx)("td",{children:"6%"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"TEAM"}),Object(T.jsx)("td",{children:"3%"}),Object(T.jsx)("td",{children:"3%"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"TOTAL"}),Object(T.jsx)("td",{children:"6%"}),Object(T.jsx)("td",{children:"9%"})]})]})]})]}),Object(T.jsx)(M.a,{lg:!0,md:"6",style:{marginTop:"30px"},children:Object(T.jsx)("img",{src:B,alt:"doughnut"})})]}),Object(T.jsx)(v.a,{style:{marginTop:"30px",padding:"10px",borderColor:"orange"},children:Object(T.jsxs)(g.a,{className:"tokenomicstable",bordered:!0,hover:!0,variant:"dark",children:[Object(T.jsx)("thead",{children:Object(T.jsxs)("tr",{children:[Object(T.jsx)("th",{}),Object(T.jsx)("th",{children:"TOKEN AMOUNT"}),Object(T.jsx)("th",{children:"%"}),Object(T.jsx)("th",{children:"VESTING (TGE)"}),Object(T.jsx)("th",{children:"VESTING (per MONTH)"}),Object(T.jsx)("th",{children:"CIRCULATIOIN TGE"})]})}),Object(T.jsxs)("tbody",{children:[Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"TOTAL"}),Object(T.jsx)("td",{children:"100,000,000"}),Object(T.jsx)("td",{children:"100"}),Object(T.jsx)("td",{children:"32"}),Object(T.jsx)("td",{children:"6"}),Object(T.jsx)("td",{children:"32,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"TEAM"}),Object(T.jsx)("td",{children:"5,000,000"}),Object(T.jsx)("td",{children:"5"}),Object(T.jsx)("td",{children:"40"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"2,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"DEVELOPMENT"}),Object(T.jsx)("td",{children:"5,000,000"}),Object(T.jsx)("td",{children:"5"}),Object(T.jsx)("td",{children:"40"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"2,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"MARKETING"}),Object(T.jsx)("td",{children:"5,000,000"}),Object(T.jsx)("td",{children:"5"}),Object(T.jsx)("td",{children:"40"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"2,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"AIRDROP"}),Object(T.jsx)("td",{children:"5,000,000"}),Object(T.jsx)("td",{children:"5"}),Object(T.jsx)("td",{children:"40"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"2,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"PRIVATE"}),Object(T.jsx)("td",{children:"10,000,000"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"60"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"6,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"PRE-SALE"}),Object(T.jsx)("td",{children:"30,000,000"}),Object(T.jsx)("td",{children:"30"}),Object(T.jsx)("td",{children:"60"}),Object(T.jsx)("td",{children:"10"}),Object(T.jsx)("td",{children:"18,000,000"})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"LIQUIDITY"}),Object(T.jsx)("td",{children:"15,000,000"}),Object(T.jsx)("td",{children:"15"}),Object(T.jsx)("td",{}),Object(T.jsx)("td",{}),Object(T.jsx)("td",{})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"STAKE"}),Object(T.jsx)("td",{children:"25,000,000"}),Object(T.jsx)("td",{children:"25"}),Object(T.jsx)("td",{}),Object(T.jsx)("td",{}),Object(T.jsx)("td",{})]}),Object(T.jsxs)("tr",{children:[Object(T.jsx)("td",{children:"TOTAL"}),Object(T.jsx)("td",{children:"100,000,000"}),Object(T.jsx)("td",{}),Object(T.jsx)("td",{children:"32"}),Object(T.jsx)("td",{children:"6"}),Object(T.jsx)("td",{children:"32,000,000"})]})]})]})})]})})})]}),Object(T.jsx)("hr",{style:{borderColor:"#f1b90c"}})]})},F=n(5),N=n(6),C=n(8),P=n(7),R=n(69);function L(e){var t=e.tier;return console.log(t),Object(T.jsx)(_.a,{bottom:!0,cascade:!0,children:Object(T.jsxs)("section",{className:"tier-card",children:[Object(T.jsx)("p",{className:"hero-description mb-1",children:t.id}),Object(T.jsxs)("div",{className:"tier-card-header",style:{marginTop:20},children:[" ",t.name," "]}),Object(T.jsx)("p",{className:"hero-description mb-1",style:{marginTop:20},children:"MAMP TOKEN TO STAKE"}),Object(T.jsx)("h3",{className:"text-white",children:t.requirement}),Object(T.jsx)("p",{className:"hero-description mb-1",children:"POOL WEIGHT"}),Object(T.jsx)("h3",{className:"text-white",children:t.pool_weight}),Object(T.jsx)("p",{className:"hero-description mb-1",children:"ALLOCATION TYPE"}),Object(T.jsx)("h3",{className:"text-white",children:t.allocation}),Object(T.jsx)("div",{className:"tier-card-footer",style:{textAlign:"center"},children:Object(T.jsx)(R.Link,{to:"/staking",children:Object(T.jsx)("button",{className:"tier-button",style:{textAlign:"center"},children:"STAKE NOW"})})})]})})}var z=n.p+"static/media/rightsidemamba.539d6594.png",W=function(e){Object(C.a)(n,e);var t=Object(P.a)(n);function n(){return Object(F.a)(this,n),t.apply(this,arguments)}return Object(N.a)(n,[{key:"render",value:function(){return Object(T.jsxs)(T.Fragment,{children:[Object(T.jsxs)("section",{className:"container tier",id:"tiersystem",children:[Object(T.jsx)("div",{className:"tiersystem-mamba",children:Object(T.jsx)(_.a,{left:!0,children:Object(T.jsx)("img",{src:z,alt:"rightmamba"})})}),Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"TIER SYSTEM"}),Object(T.jsx)("section",{className:"projects",children:I.g.map((function(e,t){return Object(T.jsx)(L,{tier:e},t)}))})]}),Object(T.jsx)("hr",{style:{borderColor:"#f1b90c"}})]})}}]),n}(a.Component),q=n.p+"static/media/roadmap_whole.eb8e5be1.svg",H=function(e){Object(C.a)(n,e);var t=Object(P.a)(n);function n(){return Object(F.a)(this,n),t.apply(this,arguments)}return Object(N.a)(n,[{key:"render",value:function(){return Object(T.jsxs)(T.Fragment,{children:[Object(T.jsx)("section",{className:"container roadmap",children:Object(T.jsxs)(_.a,{bottom:!0,cascade:!0,children:[Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold  sub-title",children:"ROADMAP"}),Object(T.jsxs)("div",{className:"container",style:{position:"relative",textAlign:"center"},children:[Object(T.jsx)("img",{src:q,alt:"network",style:{textAlign:"center"}}),Object(T.jsxs)("div",{className:"Q1",children:[Object(T.jsx)("p",{className:"roadmap-title",children:"Q1/2022"}),Object(T.jsx)("p",{children:"* Project Development "}),Object(T.jsx)("p",{children:"* Pre-sale & Listing on Pancakeswap"}),Object(T.jsx)("p",{children:"* 10K Global Telegram Member"}),Object(T.jsx)("p",{children:"* 1000 $MAMP Token Holder"}),Object(T.jsx)("p",{children:"* Announce Partnership with Launchpad Platforms "}),Object(T.jsx)("p",{children:"* Announce Partnership with Investment Groups"}),Object(T.jsx)("p",{children:"* Marketing with Influencers & AMAs & Press Release"}),Object(T.jsx)("p",{children:"* Minimum 5 IDO Release"})]}),Object(T.jsxs)("div",{className:"Q2",children:[Object(T.jsx)("p",{className:"roadmap-title",children:"Q2/2022"}),Object(T.jsx)("p",{children:"* Growing with More Core-Team Members "}),Object(T.jsx)("p",{children:"* Listing on CEX"}),Object(T.jsx)("p",{children:"* 20K Global Telegram Member"}),Object(T.jsx)("p",{children:"* 2000 $MAMP Token Holder"}),Object(T.jsx)("p",{children:"* More Partnership with Launchpad Platforms"}),Object(T.jsx)("p",{children:"* More Partnership with Investment Groups"}),Object(T.jsx)("p",{children:"* Ambassadorship with Major Influencers"}),Object(T.jsx)("p",{children:"* +10 IDO Release"})]}),Object(T.jsxs)("div",{className:"Q3",children:[Object(T.jsx)("p",{className:"roadmap-title",children:"Q3/2022"}),Object(T.jsx)("p",{children:"* Development of Multi-Blockchain Feature "}),Object(T.jsx)("p",{children:"* Listing on Major CEX"}),Object(T.jsx)("p",{children:"* 30K Global Telegram Member"}),Object(T.jsx)("p",{children:"* 4000 $MAMP Token Holder"}),Object(T.jsx)("p",{children:"* Development of Co-Project Feature (Gaming/Metaverse) "}),Object(T.jsx)("p",{children:"* +15 IDO Release"})]}),Object(T.jsxs)("div",{className:"Q4",children:[Object(T.jsx)("p",{className:"roadmap-title",children:"Q4/2022"}),Object(T.jsx)("p",{children:"* Multi-Blockchain Platform Release: Mambapad V2 "}),Object(T.jsx)("p",{children:"* Listing on 2nd Major CEX"}),Object(T.jsx)("p",{children:"* 50K Global Telegram Member"}),Object(T.jsx)("p",{children:"* 8000 $MAMP Token Holder"}),Object(T.jsx)("p",{children:"* Co-Project Feature Release (Gaming/Metaverse)"}),Object(T.jsx)("p",{children:"* +20 IDO Release"})]})]}),Object(T.jsx)("div",{})]})}),Object(T.jsx)("div",{}),Object(T.jsx)("hr",{style:{borderColor:"#f1b90c",marginTop:"100px"}})]})}}]),n}(a.Component),X=(n.p,n(186)),G=function(e){Object(C.a)(n,e);var t=Object(P.a)(n);function n(){return Object(F.a)(this,n),t.apply(this,arguments)}return Object(N.a)(n,[{key:"render",value:function(){return Object(T.jsxs)(T.Fragment,{children:[Object(T.jsxs)("section",{className:"container",children:[Object(T.jsx)(_.a,{right:!0,children:Object(T.jsx)("img",{src:X.a,alt:"leftmamba",className:"partner-mamba"})}),Object(T.jsxs)(_.a,{bottom:!0,cascade:!0,children:[Object(T.jsxs)("section",{className:"partner",children:[Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PARTNERS"}),Object(T.jsx)("div",{style:{textAlign:"center",fontFamily:"Tradewinds",fontSize:"50px"},children:"Coming Soon..."})]}),Object(T.jsxs)("section",{className:"release",children:[Object(T.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PRESS RELEASE"}),Object(T.jsx)("div",{style:{textAlign:"center",fontFamily:"Tradewinds",fontSize:"50px"},children:"Coming Soon..."})]})]})]}),Object(T.jsx)("hr",{style:{borderColor:"#f1b90c",marginTop:"80px"}})]})}}]),n}(a.Component),U=n(218);function K(e){var t=e.team;return Object(T.jsx)("section",{className:"team-card",children:Object(T.jsxs)(v.a,{children:[Object(T.jsx)(M.a,{children:Object(T.jsx)(_.a,{bottom:!0,children:Object(T.jsx)("img",{src:t.picture,alt:"avatar",className:"team-card-image"})})}),Object(T.jsx)(M.a,{children:Object(T.jsx)(_.a,{bottom:!0,cascade:!0,children:Object(T.jsxs)("div",{className:"team-card-body",children:[Object(T.jsx)("h5",{className:"text-white",children:t.name}),Object(T.jsx)("p",{className:"",style:{marginBottom:0},children:t.position}),Object(T.jsxs)("div",{className:"social-links",children:[Object(T.jsx)("a",{href:"www.google.com",children:Object(T.jsx)(U.c,{className:"social-link"})}),Object(T.jsx)("a",{href:"www.google.com",children:Object(T.jsx)(U.a,{className:"social-link"})})]})]})})})]})})}a.Component;var Q=Object(a.lazy)((function(){return n.e(14).then(n.bind(null,183))}));function V(){return Object(T.jsxs)(T.Fragment,{children:[Object(T.jsx)(b.a,{}),Object(T.jsx)(j,{}),Object(T.jsx)(Q,{}),Object(T.jsx)(S,{}),Object(T.jsx)(W,{}),Object(T.jsx)(H,{}),Object(T.jsx)(G,{}),Object(T.jsx)(d.a,{})]})}}}]);
//# sourceMappingURL=9.ac98d97b.chunk.js.map