{"version":3,"sources":["state/userRoleSlice.js","state/store.js","theme.js","components/Loading.js","hooks/useEagerConnnect.js","components/ScrollButton.js","routerHistory.js","App.js","contexts/RefreshContext.js","Providers.js","reportWebVitals.js","index.js","utils/bigNumber.js","config/index.js","utils/getRpcUrl.js","utils/web3React.js","contexts/modalContext.js","utils/wallet.js","hooks/useAuth.js","state/appLoading.js"],"names":["userRoleSlice","createSlice","name","initialState","role","reducers","setUserRole","state","action","payload","actions","store","configureStore","reducer","loadingReducer","userRoleReducer","darkTheme","body","text","toggleBorder","gradient","Loading","opened","useState","open","color","css","size","useEagerConnect","login","useAuth","useEffect","window","localStorage","getItem","connectorLocalStorageKey","Button","styled","div","ScrollButton","visible","setVisible","addEventListener","scrolled","document","documentElement","scrollTop","onClick","scrollTo","top","behavior","style","display","history","createBrowserHistory","Home","lazy","Staking","PrivateSale","Vesting","ApplyIDO","App","theme","fallback","exact","path","component","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","setSlow","setFast","isBrowserTabActiveRef","useRef","onVisibilityChange","current","hidden","removeEventListener","useIsBrowserTabActive","interval","setInterval","a","prev","clearInterval","Provider","value","Providers","getLibrary","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Slide","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BIG_TEN","ChainId","MAINNET","TESTNET","pow","nodes","process","getNodeUrl","sample","chainId","parseInt","injected","InjectedConnector","supportedChainIds","provider","library","ethers","providers","Web3Provider","pollingInterval","ModalContext","Modal","modalTitle","modalBody","unSetModal","bind","e","keyCode","activeElement","includes","tagName","className","d","ModalProvider","props","setModalTitle","setModalBody","useCallback","useModal","context","useContext","undefined","Error","BASE_BSC_SCAN_URL","setupNetwork","ethereum","request","method","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","useWeb3React","activate","deactivate","connector","UnsupportedChainIdError","removeItem","logout","loadingSlice","isLoading","setLoading","setNotLoading","selectLoading"],"mappings":"0HAEMA,EAAgBC,YAAY,CAChCC,KAAM,cACNC,aAAc,CACZC,KAAM,SAERC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAMH,KAAOI,EAAOC,YAOXT,GAFgBA,EAAcU,QAA9BJ,YAEAN,EAAf,SCZMW,EAAQC,YAAe,CAC3BC,QAAS,CACPC,mBACAC,qBAIWJ,O,+NCJFK,EAAY,CACvBC,KAAM,UACNC,KAAM,UACNC,aAAc,UACdC,SAAU,qC,kCCkBGC,EAxBC,SAACC,GACf,MAAwBC,mBAASD,GAAjC,mBAAOE,EAAP,UAYA,OACE,mCACGA,GAAQ,cAAC,IAAD,CAAYC,MAAO,UAAWC,IAZ7B,iKAY4CC,KAAM,S,wCCqBnDC,EAvBS,WACtB,IAAQC,EAAUC,cAAVD,MAERE,qBAAU,WAGU,aAFEC,OAAOC,aAAaC,QAAQC,MAc9CN,MAED,CAACA,K,iBCjCOO,EAASC,IAAOC,IAAV,sSAoDJC,EAjCM,WACnB,MAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAsBA,OAFAT,OAAOU,iBAAiB,UAlBF,WACpB,IAAMC,EAAWC,SAASC,gBAAgBC,UACtCH,EAAW,IACbF,GAAW,GACFE,GAAY,KACrBF,GAAW,MAgBb,cAACL,EAAD,UACE,cAAC,IAAD,CACEW,QAdc,WAClBf,OAAOgB,SAAS,CACdC,IAAK,EACLC,SAAU,YAYRC,MAAO,CAAEC,QAASZ,EAAU,SAAW,a,QC/ChCa,EAFCC,cCeVC,G,OAAOC,gBAAK,kBAAM,uEAClBC,EAAUD,gBAAK,kBAAM,sEAErBE,EAAcF,gBAAK,kBAAM,qEACzBG,EAAUH,gBAAK,kBAAM,kCACrBI,EAAWJ,gBAAK,kBAAM,kCA+BbK,EAxBH,WAGV,OADAjC,IAEE,eAAC,IAAD,CAAekC,MAAO9C,EAAtB,UACE,eAAC,gBAAD,CAAQqC,QAASA,EAAjB,UACE,cAAC,IAAD,IACA,cAAC,WAAD,CAAUU,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IAEjC,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,aAAaC,UAAWR,IAC1C,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,YAAYC,UAAWT,IACzC,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,YAAYC,UAAWP,IACzC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,aAAaC,UAAWN,YAIhD,cAAC,EAAD,Q,wBC1CAO,EAAiBC,IAAMC,cAAc,CAAEC,KAAM,EAAGC,KAAM,IAuBtDC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAAwBlD,mBAAS,GAAjC,mBAAO+C,EAAP,KAAaI,EAAb,KACA,EAAwBnD,mBAAS,GAAjC,mBAAOgD,EAAP,KAAaI,EAAb,KACMC,EAvBsB,WAC5B,IAAMA,EAAwBC,kBAAO,GAcrC,OAZA9C,qBAAU,WACR,IAAM+C,EAAqB,WACzBF,EAAsBG,SAAWnC,SAASoC,QAK5C,OAFAhD,OAAOU,iBAAiB,mBAAoBoC,GAErC,WACL9C,OAAOiD,oBAAoB,mBAAoBH,MAEhD,IAEIF,EAQuBM,GAoB9B,OAlBAnD,qBAAU,WACR,IAAMoD,EAAWC,YAAW,sBAAC,sBAAAC,EAAA,sDACvBT,EAAsBG,SACxBJ,GAAQ,SAACW,GAAD,OAAUA,EAAO,KAFA,2CAhCX,KAqClB,OAAO,kBAAMC,cAAcJ,MAC1B,CAACP,IAEJ7C,qBAAU,WACR,IAAMoD,EAAWC,YAAW,sBAAC,sBAAAC,EAAA,sDACvBT,EAAsBG,SACxBL,GAAQ,SAACY,GAAD,OAAUA,EAAO,KAFA,2CAxCX,KA6ClB,OAAO,kBAAMC,cAAcJ,MAC1B,CAACP,IAEG,cAACT,EAAeqB,SAAhB,CAAyBC,MAAO,CAAEnB,OAAMC,QAAxC,SAAiDE,K,kCCjB3CiB,EAxBG,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACnB,OACE,cAAC,IAAD,CAAmBkB,WAAYA,IAA/B,SACE,eAAC,IAAD,CAAUhF,MAAOA,IAAjB,UACE,cAAC,IAAD,CACEiF,SAAS,eACT9B,MAAM,SACN+B,UAAW,IACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,WAAYC,MAEd,cAAC,IAAD,UACE,cAAC,EAAD,UAAyB7B,YChBpB8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJtE,SAASuE,eAAe,SAG1BZ,K,0ICfAa,IAAUC,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAMM,IAAIH,IAAU,GACf,IAAIA,IAAU,GACb,IAAIA,IAAU,GAF/B,I,EAGMI,EAAU,IAAIJ,IAAU,ICXrCA,IAAUC,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGX,IAAME,EAAU,CACrBC,QAAS,GACTC,QAAS,IAiBExF,GAZkB,mBAC5BsF,EAAQC,QAAU,uBADU,cAE5BD,EAAQE,QAAU,+BAMgBH,EAAQI,IAVjB,GAcY,a,gCC3BxC,wDAEaC,EAAQ,CAACC,4EAMPC,IAJI,WACjB,OAAOC,IAAOH,K,4ICGVI,GADSF,cACCG,SAASJ,KAAgC,KAE5CK,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACJ,KAUvDtC,EAAa,SAAC2C,GACzB,IAAMC,EAAU,IAAIC,IAAOC,UAAUC,aAAaJ,GAElD,OADAC,EAAQI,gBAhBe,KAiBhBJ,I,gJCrBHK,EAAexE,IAAMC,gBAErBwE,EAAQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAqBtC,OApBAjH,qBAAU,WACR,IAAMkH,EAAO,SAACC,GACO,MAAdA,EAAEC,UAKLvG,SAASwG,eACT,CAAC,QAAS,UAAUC,SAASzG,SAASwG,cAAcE,UAKtDN,MAIF,OADApG,SAASF,iBAAiB,QAASuG,GAC5B,kBAAMrG,SAASqC,oBAAoB,QAASgE,MAClD,CAACH,EAAYC,EAAWC,IAGzB,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,eAAexG,QAASiG,IAC1C,sBAAKO,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UACGT,EACD,wBAAQS,UAAU,mBAAmBxG,QAASiG,EAA9C,SACE,8BAOE,sBAAMQ,EAAE,sWAId,qBAAKD,UAAU,cAAf,SAA8BR,WA+BhCU,EAAgB,SAACC,GACrB,MAAoCnI,qBAApC,mBAAOuH,EAAP,KAAmBa,EAAnB,KACA,EAAkCpI,qBAAlC,mBAAOwH,EAAP,KAAkBa,EAAlB,KACMZ,EAAaa,uBAAY,WAC7BF,IACAC,MACC,CAACD,EAAeC,IAEnB,OACE,eAAChB,EAAapD,SAAd,yBACEC,MAAO,CAAEuD,aAAYW,gBAAeC,iBAChCF,GAFN,cAIGA,EAAMjF,SACNqE,GACC,cAACD,EAAD,CACEC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,SAOhBc,EAAW,WACf,IAAMC,EAAU3F,IAAM4F,WAAWpB,GACjC,QAAgBqB,IAAZF,EACF,MAAM,IAAIG,MAAM,+CAGlB,OAAOH,I,6GC7FHI,GAJkB,mBACrB,GAAK,uBADgB,cAErB,GAAK,+BAFgB,GAIqBrC,IAMhCsC,EAAY,uCAAG,8BAAA/E,EAAA,2DACpBiD,EAAWtG,OAAOqI,UADE,wBAGlBpC,EAAUC,SAASJ,KAAgC,IAHjC,kBAKhBQ,EAASgC,QAAQ,CACrBC,OAAQ,0BACRC,OAAQ,CACN,CACEvC,QAAQ,KAAD,OAAOA,EAAQwC,SAAS,KAC/BC,UAAW,8BACXC,eAAgB,CACdzK,KAAM,MACN0K,OAAQ,MACRC,SAAU,IAEZC,QAASjD,IACTkD,kBAAmB,CAAC,GAAD,OAAIZ,EAAJ,UAjBH,iCAqBf,GArBe,uCAuBtBa,QAAQC,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBD,QAAQC,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDCuCVnJ,IAlDC,WACd,MAAiCoJ,cAAzBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WA8ClB,MAAO,CAAEvJ,MA5CKgI,uBACZ,WACE,IAAMwB,EAAYlD,IACdkD,GACFF,EAASE,EAAD,uCAAY,WAAOJ,GAAP,SAAA5F,EAAA,2DACd4F,aAAiBK,KADH,gCAEOlB,IAFP,eAIde,EAASE,GAJK,sBAOhBrJ,OAAOC,aAAasJ,WAAWpJ,KAPf,2CAAZ,yDA4BZ,CAACgJ,IAYaK,OATD3B,uBAAY,WACzBuB,IAEIpJ,OAAOC,aAAaC,QAAQ,mBAI/B,CAACkJ,O,gCCpDN,kHAEMK,EAAexL,YAAY,CAC/BC,KAAM,aACNC,aAAc,CACZuL,WAAW,GAEbrL,SAAU,CACRsL,WAAY,SAACpL,GACXA,EAAMmL,WAAY,GAEpBE,cAAe,SAACrL,GACdA,EAAMmL,WAAY,MAKjB,EAAsCD,EAAa/K,QAA3CiL,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACdC,EAAgB,SAACtL,GAAD,OAC3BA,EAAMO,eAAe4K,WACRD,MAAf,U","file":"static/js/main.220d0d82.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nconst userRoleSlice = createSlice({\r\n  name: 'appUserRole',\r\n  initialState: {\r\n    role: 'Guest',\r\n  },\r\n  reducers: {\r\n    setUserRole: (state, action) => {\r\n      state.role = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserRole } = userRoleSlice.actions;\r\nexport const selectUserRole = (state) => state.userRoleReducer.role;\r\nexport default userRoleSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport loadingReducer from './appLoading';\r\nimport userRoleReducer from './userRoleSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    loadingReducer,\r\n    userRoleReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","export const lightTheme = {\r\n  body: \"#E2E2E2\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  gradient: \"linear-gradient(#091236, #1E215D)\",\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Importing loader\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\nconst Loading = (opened) => {\r\n  const [open, setOpen] = useState(opened);\r\n  // Custom css for loader\r\n  const override = `\r\n    position: fixed;\r\n    transform: translate(50%, -50%);\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n    top:50%;\r\n    right:50%;\r\n`;\r\n\r\n  return (\r\n    <>\r\n      {open && <PuffLoader color={\"#ffa600\"} css={override} size={150} />}\r\n      {/* {open&&<div className=\"loading-spinner\"></div>} */}\r\n    </>\r\n  );\r\n};\r\nLoading.propTypes = {\r\n  opened: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey } from '../config';\r\nimport useAuth from \"./useAuth\";\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey)\r\n\r\n    if (connectorId==='injected') {\r\n      // const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      // const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // // Currently BSC extension doesn't always inject in time.\r\n      // // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      // if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n      //   _binanceChainListener().then(() => login(connectorId))\r\n\r\n      //   return\r\n      // }\r\n\r\n      login()\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React, { useState } from \"react\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const Button = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  left: 94%;\r\n  bottom: 70px;\r\n  height: 20px;\r\n  font-size: 3rem;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  color: #ffa600;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n  @media (max-width: 768px) {\r\n\t  display: none;\r\n  }\r\n`;\r\n\r\nconst ScrollButton = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300) {\r\n      setVisible(true);\r\n    } else if (scrolled <= 300) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n      /* you can also use 'auto' behaviour\r\n\t\tin place of 'smooth' */\r\n    });\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", toggleVisible);\r\n\r\n  return (\r\n    <Button>\r\n      <FaArrowCircleUp\r\n        onClick={scrollToTop}\r\n        style={{ display: visible ? \"inline\" : \"none\" }}\r\n      />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nexport default history","import React, { lazy, Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport ScrollRestoration from \"react-scroll-restoration\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme } from \"./theme\";\r\nimport Loading from \"./components/Loading\";\r\nimport useEagerConnect from \"./hooks/useEagerConnnect\";\r\nimport ScrollButton from './components/ScrollButton';\r\nimport history from \"./routerHistory\";\r\nimport \"./App.css\";\r\n// import { useAppLoading } from './hooks/useAppLoading';\r\n\r\n\r\nconst Home = lazy(() => import(\"./pages/Home\"));\r\nconst Staking = lazy(() => import(\"./pages/Staking\"));\r\nconst Projects = lazy(() => import(\"./pages/Projects\"));\r\nconst PrivateSale = lazy(() => import(\"./pages/PrivateSale\"));\r\nconst Vesting = lazy(() => import(\"./pages/Vesting\"));\r\nconst ApplyIDO = lazy(() => import(\"./pages/ApplyIDO\"));\r\n\r\n// export const ScrollTop = ({ children, location }) => {\r\n//   React.useEffect(() => window.scrollTo(0, 0), [location]);\r\n//   return children;\r\n// };\r\n\r\nconst App = () => {\r\n  // const { isAppLoading } = useAppLoading();\r\n  useEagerConnect();\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Router history={history}>\r\n        <ScrollRestoration />\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            {/* <Route exact path=\"/projects/\" component={Projects} /> */}\r\n            <Route exact path=\"/projects/\" component={PrivateSale} />\r\n            <Route exact path=\"/staking/\" component={Staking} />\r\n            <Route exact path=\"/vesting/\" component={Vesting} />\r\n            <Route exact path=\"/applyido/\" component={ApplyIDO} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n      <ScrollButton/>\r\n      {/* <Loading opened={isAppLoading} /> */}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\n// @ts-ignore\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import React from \"react\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport { getLibrary } from \"./utils/web3React\";\r\nimport { RefreshContextProvider } from \"./contexts/RefreshContext\";\r\nimport { ModalProvider } from \"./contexts/modalContext\";\r\nimport { ToastContainer, Slide } from \"react-toastify\";\r\nimport \"./contexts/ReactToastify.css\";\r\nimport store from \"./state/store\";\r\n\r\nconst Providers = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          theme=\"custom\"\r\n          autoClose={5000}\r\n          hideProgressBar\r\n          newestOnTop\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          transition={Slide}\r\n        />\r\n        <ModalProvider>\r\n          <RefreshContextProvider>{children}</RefreshContextProvider>\r\n        </ModalProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  );\r\n};\r\nexport default Providers;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport Providers from \"./Providers\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\n\r\n// export type SerializedBigNumber = string\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (value) =>\r\n  ethersToBigNumber(value).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn)=> new BigNumber(ethersBn.toString())\r\n\r\n\r\n","import BigNumber from \"bignumber.js/bignumber\";\r\nimport { BIG_TEN } from \"../utils/bigNumber\";\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n});\r\n\r\nexport const ChainId = {\r\n  MAINNET: 56,\r\n  TESTNET: 97,\r\n};\r\n\r\nexport const LEOS_DECIMAL = 8;\r\nexport const BSC_BLOCK_TIME = 3;\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: \"https://bscscan.com\",\r\n  [ChainId.TESTNET]: \"https://testnet.bscscan.com\",\r\n};\r\n\r\nexport const BASE_URL = \"https://mambapad.com\";\r\nexport const BASE_BSC_SCAN_URL =\r\n  BASE_BSC_SCAN_URLS[process.env.REACT_APP_CHAIN_ID];\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(LEOS_DECIMAL);\r\nexport const DEFAULT_GAS_LIMIT = 200000;\r\nexport const DEFAULT_GAS_PRICE = 5;\r\n\r\nexport const connectorLocalStorageKey = 'injected';","import sample from 'lodash/sample'\r\n\r\nexport const nodes = [process.env.REACT_APP_NODE]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl","import { InjectedConnector } from '@web3-react/injected-connector'\r\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\n// export const walletconnect = new WalletConnectConnector({\r\n//   rpc: { [chainId]: rpcUrl },\r\n//   qrcode: true,\r\n//   pollingInterval: POLLING_INTERVAL,\r\n// })\r\n\r\n// export const bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const getLibrary = (provider) => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider, account, message) => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nconst Modal = ({ modalTitle, modalBody, unSetModal }) => {\r\n  useEffect(() => {\r\n    const bind = (e) => {\r\n      if (!e.keyCode === 27) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        document.activeElement &&\r\n        [\"INPUT\", \"SELECT\"].includes(document.activeElement.tagName)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      unSetModal();\r\n    };\r\n\r\n    document.addEventListener(\"keyup\", bind);\r\n    return () => document.removeEventListener(\"keyup\", bind);\r\n  }, [modalTitle, modalBody, unSetModal]);\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <button className=\"modal__close\" onClick={unSetModal} />\r\n      <div className=\"modal__inner\">\r\n        <div className=\"modal__header\">\r\n          {modalTitle}\r\n          <button className=\"modal__close-btn\" onClick={unSetModal}>\r\n            <svg\r\n            // height=\"20\"\r\n            // width=\"20\"\r\n            // viewBox=\"0 0 20 20\"\r\n            // aria-hidden=\"true\"\r\n            // focusable=\"false\"\r\n            >\r\n              <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal__body\">{modalBody}</div>\r\n      </div>\r\n    </div>\r\n\r\n    // <div\r\n    //   class=\"modal\"\r\n    //   id=\"exampleModal\"\r\n    //   tabindex=\"-1\"\r\n    //   aria-labelledby=\"exampleModalLabel\"\r\n    //   aria-hidden=\"true\"\r\n    // >\r\n    //   <div class=\"modal-dialog \">\r\n    //     <div class=\"modal-content modal__inner\">\r\n    //       <div class=\"modal-header\">\r\n    //         <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n    //           {modalTitle}\r\n    //         </h5>\r\n    //         <button\r\n    //           type=\"button\"\r\n    //           class=\"btn-close\"\r\n    //           data-mdb-dismiss=\"modal\"\r\n    //           aria-label=\"Close\"\r\n    //         ></button>\r\n    //       </div>\r\n    //       <div class=\"modal-body\">{modalBody}</div>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nconst ModalProvider = (props) => {\r\n  const [modalTitle, setModalTitle] = useState();\r\n  const [modalBody, setModalBody] = useState();\r\n  const unSetModal = useCallback(() => {\r\n    setModalTitle();\r\n    setModalBody();\r\n  }, [setModalTitle, setModalBody]);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{ unSetModal, setModalTitle, setModalBody }}\r\n      {...props}\r\n    >\r\n      {props.children}\r\n      {modalTitle && (\r\n        <Modal\r\n          modalTitle={modalTitle}\r\n          modalBody={modalBody}\r\n          unSetModal={unSetModal}\r\n        />\r\n      )}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nconst useModal = () => {\r\n  const context = React.useContext(ModalContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useModal must be used within a UserProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { ModalProvider, useModal };\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\n\r\n\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\nconst BASE_URL = 'https://leonicornswap.com'\r\nconst BASE_BSC_SCAN_URLS = {\r\n  [56]: 'https://bscscan.com',\r\n  [97]: 'https://testnet.bscscan.com',\r\n}\r\nconst BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[process.env.REACT_APP_CHAIN_ID]\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to setup the network in Metamask:', error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress, tokenSymbol, tokenDecimals) => {\r\n  // @ts-ignore\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { connectorLocalStorageKey } from \"../config\";\r\nimport { injected } from \"../utils/web3React\";\r\nimport { setupNetwork } from \"../utils/wallet\";\r\n\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n\r\n  const login = useCallback(\r\n    () => {\r\n      const connector = injected\r\n      if (connector) { \r\n        activate(connector, async (error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }            \r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            // if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n            //   toastError('Provider Error', 'No provider was found')\r\n            // } else if (\r\n            //   error instanceof UserRejectedRequestErrorInjected ||\r\n            //   error instanceof UserRejectedRequestErrorWalletConnect\r\n            // ) {\r\n            //   if (connector instanceof WalletConnectConnector) {\r\n            //     const walletConnector = connector as WalletConnectConnector\r\n            //     walletConnector.walletConnectProvider = null\r\n            //   }\r\n            //   toastError('Authorization Error', 'Please authorize to access your account')\r\n            // } else {\r\n            //   toastError(error.name, error.message)\r\n            // }\r\n          }\r\n        })\r\n      } else {\r\n        // toastError('Unable to find connector', 'The connector config is wrong')\r\n      }\r\n    },\r\n    [activate],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      // connectorsByName.walletconnect.close()\r\n      // connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst loadingSlice = createSlice({\r\n  name: 'appLoading',\r\n  initialState: {\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    setLoading: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    setNotLoading: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setNotLoading } = loadingSlice.actions;\r\nexport const selectLoading = (state) =>\r\n  state.loadingReducer.isLoading;\r\nexport default loadingSlice.reducer;\r\n"],"sourceRoot":""}