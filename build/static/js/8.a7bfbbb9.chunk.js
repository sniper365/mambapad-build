(this.webpackJsonpmambapad=this.webpackJsonpmambapad||[]).push([[8,14],{186:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"e",(function(){return o})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return c})),n.d(t,"f",(function(){return l}));var a=n(255),b=n(256),i=n(257),r=n.p+"static/media/Blue_II.fa6de38c.jpg",d=n(187),s=[{picture:a.a,feature:"Auto-Reflection Reward",description:"Mambapad is the unique launchpad platform with an auto-reflection reward. %3 on buy and %6 on sell will be distributed as $BUSD tokens to the stakers in each transaction. ",btn_1:"MEDIUM",btn_2:""},{picture:b.a,feature:"Staking Reward",description:"Stakers will earn $MAMP tokens with high APR and get passive income. Double reward system with both auto-reflection and staking will boost $MAMP investors earnings. ",btn_1:"MEDIUM",btn_2:""},{picture:i.a,feature:"Guarenteed Allocation",description:"Stakers will have guarenteed allocation with 3 seperate Tiers for IDOs. Thus, the investors won\u2019t miss any opportunities for the amazing projects. ",btn_1:"TIER SYSTEM",btn_2:""},{picture:b.b,feature:"Secure & Fair Platform",description:"Each project will have to fulfill security standards with third-party companies. Also we will make the best deals with IDO partners to get fair allocation for $MAMP investors.",btn_1:"AUDIT",btn_2:"AUDIT"}],o=[{picture:r,name:"MAMBAPAD",subname:"The IDO Platform",startTime:Date.now()+1e4,status:"Coming",progress:0,swap_rate:10,cap:7e3,access:"Public",message:"The first Launchpad platform for both macro-cap & micro-cap promising projects built on Binance Smart Chain."}],f={picture:r,tier_name:"MAMBA",name:"MAMP",total_amount:10,weight:120,startTime:Date.now()+3e3,endTime:16449696e5,min_allocation:.1,max_allocation:2.4,ido_price:125e-7,listing_price:1875e-8},c={picture:d.a,name:"MAMBAPAD",subname:"The IDO Platform",startTime:16447104e5,status:"Coming",progress:0,swap_rate:10,cap:7e3,access:"Public",message:"The first Launchpad platform for both macro-cap & micro-cap promising projects built on Binance Smart Chain."},u=[],l=[{id:"tier1",name:"MAMBA",requirement:192e3,pool_weight:"225",allocation:"GUARANTEED"},{id:"tier2",name:"COBRA",requirement:96e3,pool_weight:"100",allocation:"GUARANTEED"},{id:"tier3",name:"VIPER",requirement:48e3,pool_weight:"45",allocation:"GUARANTEED"},{id:"tier4",name:"PYTHON",requirement:8e3,pool_weight:"15",allocation:"FCFS"}]},187:function(e,t,n){"use strict";t.a=n.p+"static/media/Yellow_II.b757b894.jpg"},188:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a,b,i,r,d,s,o,f,c,u=n(84),l=n(62),p=l.b.div(a||(a=Object(u.a)(['\n  width: 2rem;\n  height: 2rem;\n  position: fixed;\n  top: 15px;\n  right: 20px;\n  z-index: 20;\n  display: none;\n  cursor: pointer;\n  font-family: "Zilla Slab", sans-serif;\n\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: column nowrap;\n  }\n']))),m=l.b.div(b||(b=Object(u.a)(["\n  width: 2rem;\n  height: 0.25rem;\n  background-color: #000;\n  border-radius: 10px;\n  transform-origin: 1px;\n  transition: all 0.3s linear;\n  cursor: pointer;\n  background: #ffa600;\n\n  &:nth-child(1) {\n    transform: ",";\n  }\n  &:nth-child(2) {\n    transform: ",";\n    opacity: ",";\n  }\n  &:nth-child(3) {\n    transform: ",";\n  }\n"])),(function(e){return e.open?"rotate(45deg)":"rotate(0)"}),(function(e){return e.open?"translateX(100%)":"translateX(0)"}),(function(e){return e.open?0:1}),(function(e){return e.open?"rotate(-45deg)":"rotate(0)"})),y=l.b.nav(i||(i=Object(u.a)(['\n  position: relative;\n  font-family: "Zilla Slab", sans-serif;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: #fdfdfdfa;\n  align-items: center;\n  background-color: blue;\n  background: #28293d;\n\n  @media (max-width: 678px) {\n    width: 100vw;\n  }\n']))),h=l.b.ul(r||(r=Object(u.a)(['\n  font-family: "Zilla Slab", sans-serif;\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  gap: 10px;\n  position: absolute;\n  top: 0;\n  justify-content: flex-end;\n  margin-top: 0px;\n  align-items: center;\n  font-size: 18px;\n  height: 70px;\n  margin-left: 0px;\n  width: fit-content;\n  right: 5rem;\n\n  a {\n    color: #ffa600;\n    transition: all 0.3s linear;\n    border: 1px solid #ffa600;\n    border-radius: 5px;\n    padding: 1px 0;\n    text-decoration: none;\n    text-transform: none;\n    cursor: pointer;\n\n    &:hover {\n      color: white;\n      border-color: white;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    background-color: #fdfdfdfa;\n    position: fixed;\n    transform: ',";\n    top: -16px;\n    right: 0;\n    height: 105%;\n    width: 320px;\n    align-items: inherit;\n    padding-top: 3.5rem;\n    transition: transform 0.3s ease-in-out;\n    z-index: 9;\n    justify-content: normal;\n  }\n"])),(function(e){return e.open?"translateX(0)":"translateX(100%)"})),v=l.b.li(d||(d=Object(u.a)(["\n  padding: 3px 10px;\n  outline: none;\n\n  @media (max-width: 768px) {\n    color: #000;\n    margin-right: 34px;\n\n    &:hover {\n      color: #0dadea;\n    }\n  }\n"]))),T=l.b.img(s||(s=Object(u.a)(["\n  margin: 0px 110px;\n  width: 160px;\n  height: 70px;\n  object-fit: contain;\n\n  @media (max-width: 1250px) {\n    margin: 0px 52px;\n  }\n"]))),x=l.b.img(o||(o=Object(u.a)(["\n  display: none;\n  border-radius: 8px;\n\n  @media (max-width: 768px) {\n    display: flex;\n    width: 160px;\n    object-fit: contain;\n  }\n"]))),w=(l.b.div(f||(f=Object(u.a)(["\n  width: 100vw;\n  height: calc(100vh - 112px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"]))),l.b.img(c||(c=Object(u.a)(["\n  width: 150px;\n  height: 150px;\n  pointer-events: none;\n  object-fit: contain;\n  animation: Spin infinite 20s linear;\n"]))),n.p+"static/media/logo.a5e1878f.svg"),j=n(37),g=n(2),_=n.p+"static/media/logo.1af23099.jpg",M=n(52),O=n(83),S=n.p+"static/media/metamask.09e5f554.svg",I=[{title:"Metamask",icon:S,connectorId:56}],A=n(71),P=n(85),B=n(61),k=n(11);var D=function(e){var t=Object(M.c)().account,n=Object(P.a)(),a=n.login,b=n.logout,i=Object(O.b)(),r=i.setModalTitle,d=i.setModalBody,s=i.unSetModal,o=t?"".concat(t.substring(0,4),"...").concat(t.substring(t.length-4)):null,f=function(){t?(s(),b(),window.localStorage.removeItem(B.b)):(s(),a(),window.localStorage.setItem(B.b,"injected"))},c=function(){return Object(k.jsx)("div",{style:{display:"flex",flexDirection:"column"},children:I.map((function(e,t){return Object(k.jsxs)("button",{className:"wallet-logo-button ",onClick:f,children:[Object(k.jsx)("img",{src:S,alt:"meta",style:{width:"60px"}}),Object(k.jsx)("div",{style:{fontFamily:"Nerkoone",color:"orange"},children:e.title})]},e.title)}))})};return Object(k.jsxs)(h,{open:e.open,children:[Object(k.jsx)(A.Link,{to:"/",style:{border:"none"},children:Object(k.jsx)(x,{src:_,alt:"Gustavo Scarpim"})}),Object(k.jsx)(A.Link,{to:"/projects",children:Object(k.jsx)(v,{children:"IDO PROJECTS"})}),Object(k.jsx)(A.Link,{to:"/staking",children:Object(k.jsx)(v,{children:"STAKING"})}),Object(k.jsx)(A.Link,{to:"/vesting",children:Object(k.jsx)(v,{children:"VESTING"})}),Object(k.jsx)(A.Link,{to:"/applyido",children:Object(k.jsx)(v,{children:"APPLY IDO"})}),Object(k.jsx)(A.Link,{children:t?Object(k.jsx)("li",{onClick:function(){r("Logout"),d(Object(k.jsxs)("div",{className:"wallet-logout",children:[Object(k.jsx)("h5",{children:t}),Object(k.jsx)("button",{className:"wallet-logout-button",onClick:f,children:"Logout"})]}))},children:Object(k.jsx)(v,{children:o})}):Object(k.jsx)("li",{onClick:function(){r("Connect Wallet"),d(Object(k.jsx)(c,{}))},children:Object(k.jsx)(v,{children:"CONNECT"})})})]})},E=function(){var e=Object(g.useState)(!1),t=Object(j.a)(e,2),n=t[0],a=t[1];return Object(k.jsxs)(k.Fragment,{children:[Object(k.jsxs)(p,{open:n,onClick:function(){return a(!n)},children:[Object(k.jsx)(m,{open:n}),Object(k.jsx)(m,{open:n}),Object(k.jsx)(m,{open:n})]}),Object(k.jsx)(D,{open:n})]})};function N(e){return Object(k.jsxs)(k.Fragment,{children:[Object(k.jsx)(y,{children:Object(k.jsx)(A.Link,{to:"/",children:Object(k.jsx)(T,{src:w,alt:"Gustavo Scarpim"})})}),Object(k.jsx)(E,{}),e.children]})}},193:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return b}));n(2);var a=n(11);function b(){return Object(a.jsx)("div",{className:"background"})}},194:function(e,t,n){"use strict";n(2);var a=n(112),b=n(254),i=n(11);t.a=function(e){var t=e.size;return Object(i.jsxs)("div",{className:"sociallinks",children:[Object(i.jsx)("a",{className:"TG-link",href:"https://twitter.com/mambapad_bsc",target:"blank",color:"white",children:Object(i.jsx)(a.f,{size:t})}),Object(i.jsx)("a",{className:"TG-link",href:"https://t.me/mambapad_official",target:"blank",children:Object(i.jsx)(a.d,{size:t})}),Object(i.jsx)("a",{className:"TG-link",href:"https://t.me/mambapad_ann",target:"blank",color:"white",children:Object(i.jsx)(a.d,{size:t})}),Object(i.jsx)("a",{className:"TG-link",href:"https://medium.com/@mambapad",target:"blank",color:"white",children:Object(i.jsx)(a.c,{size:t})}),Object(i.jsx)("a",{className:"TG-link",href:"mailto:support@mambapad.com",target:"blank",color:"white",children:Object(i.jsx)(b.a,{size:t})})]})}},196:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(6),b=n(7),i=n(9),r=n(8),d=n(2),s=n(200),o=n(112),f=n(71),c=n(194),u=n(187),l=n(11),p=function(e){Object(i.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(b.a)(n,[{key:"render",value:function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"CONTACT US"}),Object(l.jsxs)("section",{className:"container footer",children:[Object(l.jsx)("div",{className:"contactlogo",children:Object(l.jsx)(f.Link,{to:"/",children:Object(l.jsx)("img",{src:u.a,alt:"logo"})})}),Object(l.jsx)("div",{children:Object(l.jsx)(c.a,{size:30})}),Object(l.jsxs)("section",{className:"footer-card",children:[Object(l.jsxs)("div",{className:"footer-card-header",children:[Object(l.jsx)("div",{className:"footer-card-title",children:Object(l.jsx)("strong",{children:"TWITTER FEED"})}),Object(l.jsx)("a",{className:"TG-link",href:"https://twitter.com/mambapad_bsc",target:"blank",color:"white",children:Object(l.jsx)(o.f,{size:30})})]}),Object(l.jsx)("div",{className:"footer-card-footer",children:Object(l.jsx)(s.a,{sourceType:"url",url:"https://twitter.com/mambapad_bsc",screenName:"mambapad",options:{height:200}})})]})]}),Object(l.jsx)("hr",{style:{borderColor:"#f1b90c",marginTop:"10px"}}),Object(l.jsxs)("div",{className:"footer-contact",children:[Object(l.jsx)("p",{style:{textAlign:"center",color:"grey"},children:"Copyright \xa9 2022, MAMBAPAD. All Right Reserved"}),Object(l.jsx)("span",{children:Object(l.jsx)("a",{href:"mailto:support@mambapad.com",children:"support@mambapad.com"})})]})]})}}]),n}(d.Component)},197:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_mamba.f5e60ba8.svg"},199:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_Big_mamba.53a4f4c2.svg"},201:function(e,t,n){"use strict";n(2);var a=n(259),b=n(112),i=n(254),r=n(11);t.a=function(e){e.size;return Object(r.jsxs)("div",{className:"social-links",children:[Object(r.jsx)("a",{href:"https://twitter.com/mambapad_bsc",children:Object(r.jsx)(a.a,{className:"social-link"})}),Object(r.jsx)("a",{href:"https://t.me/mambapad_official",children:Object(r.jsx)(b.e,{className:"social-link"})}),Object(r.jsx)("a",{href:"https://t.me/mambapad_ann",children:Object(r.jsx)(b.e,{className:"social-link"})}),Object(r.jsx)("a",{href:"https://medium.com/@mambapad",children:Object(r.jsx)(a.b,{className:"social-link"})}),Object(r.jsx)("a",{href:"mailto:support@mambapad.com",children:Object(r.jsx)(i.a,{className:"social-link"})})]})}},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(45),b=n.n(a),i=n(53),r=n(63),d=(new b.a(10),function(e){return e||new i.a.providers.StaticJsonRpcProvider(Object(r.a)())})},205:function(e,t,n){"use strict";t.a=n.p+"static/media/rightsidemamba.244d89fd.svg"},233:function(e){e.exports=JSON.parse('{"address":"0x813c16DC8eb2F7E9e2C3b1bCBb4a3bDD57affFEB","abi":[{"inputs":[{"internalType":"address","name":"_mambapad","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"AdddWhitelisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RemovedWhitelisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"joinedPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"withdrawn","type":"event"},{"inputs":[],"name":"MambaContract","outputs":[{"internalType":"contract IBEP20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PercPerMonth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_addingAmount","type":"uint256"}],"name":"addTotalAmountForPrivateSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"addWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"}],"name":"addWhitelistedMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cliff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositedBNB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end_time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"etherDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInfo","outputs":[{"internalType":"uint256","name":"mampAmountofContract","type":"uint256"},{"internalType":"uint256","name":"bnbAmountofContract","type":"uint256"},{"internalType":"uint256","name":"bnbAmountDepositedinContract","type":"uint256"},{"internalType":"uint256","name":"startingTime","type":"uint256"},{"internalType":"uint256","name":"endingTime","type":"uint256"},{"internalType":"bool","name":"isListedPCS","type":"bool"},{"internalType":"address[]","name":"joinedInvestors","type":"address[]"},{"internalType":"address[]","name":"holderIndex","type":"address[]"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"cliffTime","type":"uint256"},{"internalType":"uint256","name":"perMonth","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"}],"name":"getInvestorInfo","outputs":[{"components":[{"internalType":"uint256","name":"joinedDate","type":"uint256"},{"internalType":"uint256","name":"_cliff","type":"uint256"},{"internalType":"uint256","name":"joinedBNBAmount","type":"uint256"},{"internalType":"uint256","name":"totalReceivableAmount","type":"uint256"},{"internalType":"uint256","name":"receivableAmount","type":"uint256"},{"internalType":"uint256","name":"currentAmount","type":"uint256"},{"internalType":"uint256","name":"releaseState","type":"uint256"}],"internalType":"struct PrivateSale.InvestorInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"holdersIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"investorInfos","outputs":[{"internalType":"uint256","name":"joinedDate","type":"uint256"},{"internalType":"uint256","name":"_cliff","type":"uint256"},{"internalType":"uint256","name":"joinedBNBAmount","type":"uint256"},{"internalType":"uint256","name":"totalReceivableAmount","type":"uint256"},{"internalType":"uint256","name":"receivableAmount","type":"uint256"},{"internalType":"uint256","name":"currentAmount","type":"uint256"},{"internalType":"uint256","name":"releaseState","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"investors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isListedonPancakeswap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mambapadAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mampDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"max_buy_amount_estimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"min_buy_amount_estimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"percDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rateDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rateMAMPperBNB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"removeWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"}],"name":"removeWhitelistedMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"setAddressForListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"setBuyMaxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"setBuyMinAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_cliff","type":"uint256"}],"name":"setCliff","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"setEndTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setListedonPancakeswap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_perc","type":"uint256"}],"name":"setPercPerMonth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate","type":"uint256"}],"name":"setRateMAMPperBNB","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"}],"name":"setStartTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tge","type":"uint256"}],"name":"setTGE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start_time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAmountForPrivateSale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWhiteListed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"adr","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawBNB","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawMAMP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawPerMonth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawTGE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x2bf85dde51999a755c5675075856163625dfb8d1911fa32dca2d2dd4b8c0f63b","receipt":{"to":null,"from":"0xF82F63a0a80782DA349d2bFE3f53D23308F82212","contractAddress":"0x813c16DC8eb2F7E9e2C3b1bCBb4a3bDD57affFEB","transactionIndex":40,"gasUsed":"2731230","logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","blockHash":"0x59f4ef4c6d4d3b17b84a7f8f563c232596f2e789727bd4812024edb63b2d4f64","transactionHash":"0x2bf85dde51999a755c5675075856163625dfb8d1911fa32dca2d2dd4b8c0f63b","logs":[],"blockNumber":15179326,"cumulativeGasUsed":"7352384","status":1,"byzantium":true},"args":["0xf43e84e5461005ecAcB49693Fa6Dbf5C9eCa8c10"],"solcInputHash":"ccd6bdc40c2a91cfcdecbc5fc55e13f2","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.11+commit.d7f03943\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_mambapad\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"AdddWhitelisted\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"RemovedWhitelisted\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"joinedPool\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"rewardAmount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdrawn\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"MambaContract\\",\\"outputs\\":[{\\"internalType\\":\\"contract IBEP20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"PercPerMonth\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"TGE\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_addingAmount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"addTotalAmountForPrivateSale\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"addWhitelisted\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"users\\",\\"type\\":\\"address[]\\"}],\\"name\\":\\"addWhitelistedMultiple\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"authorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"cliff\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"depositedBNB\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"duration\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"end_time\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"etherDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getInfo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"mampAmountofContract\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"bnbAmountofContract\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"bnbAmountDepositedinContract\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"startingTime\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"endingTime\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isListedPCS\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"joinedInvestors\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"holderIndex\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"minAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"cliffTime\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"perMonth\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_beneficiary\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getInvestorInfo\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"joinedDate\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_cliff\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"joinedBNBAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalReceivableAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"receivableAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"currentAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"releaseState\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct PrivateSale.InvestorInfo\\",\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"holdersIndex\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"investorInfos\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"joinedDate\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_cliff\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"joinedBNBAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalReceivableAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"receivableAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"currentAmount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"releaseState\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"investors\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isAuthorized\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isListedonPancakeswap\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isWhitelisted\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"joinPool\\",\\"outputs\\":[],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"mambapadAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"mampDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"max_buy_amount_estimate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"min_buy_amount_estimate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"percDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rateDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rateMAMPperBNB\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"removeWhitelisted\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"users\\",\\"type\\":\\"address[]\\"}],\\"name\\":\\"removeWhitelistedMultiple\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setAddressForListing\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setBuyMaxAmount\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setBuyMinAmount\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_cliff\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setCliff\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_endTime\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setEndTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"setListedonPancakeswap\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_perc\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setPercPerMonth\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_rate\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setRateMAMPperBNB\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_startTime\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setStartTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_tge\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setTGE\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"start_time\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalAmountForPrivateSale\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalWhiteListed\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address payable\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"unauthorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"}],\\"name\\":\\"withdrawBNB\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"}],\\"name\\":\\"withdrawMAMP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"withdrawPerMonth\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"withdrawTGE\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"addWhitelisted(address)\\":{\\"details\\":\\"Add an account to the whitelist,\\",\\"params\\":{\\"user\\":\\"The address of the investor\\"}},\\"addWhitelistedMultiple(address[])\\":{\\"params\\":{\\"users\\":\\"The accounts to be whitelisted in batch\\"}},\\"isWhitelisted(address)\\":{\\"params\\":{\\"user\\":\\"The account to be checked\\"},\\"returns\\":{\\"_0\\":\\"true if the account is whitelisted. Otherwise, false.\\"}},\\"removeWhitelisted(address)\\":{\\"params\\":{\\"user\\":\\"The address of the investor that needs to be removed\\"}},\\"removeWhitelistedMultiple(address[])\\":{\\"params\\":{\\"users\\":\\"The accounts to be whitelisted in batch\\"}}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{\\"addWhitelistedMultiple(address[])\\":{\\"notice\\":\\"This function allows to whitelist investors in batch with control of number of iterations\\"},\\"isWhitelisted(address)\\":{\\"notice\\":\\"Check if an account is whitelisted or not\\"},\\"removeWhitelisted(address)\\":{\\"notice\\":\\"Remove an account from the whitelist, calling the corresponding internal function\\"},\\"removeWhitelistedMultiple(address[])\\":{\\"notice\\":\\"This function allows to whitelist investors in batch with control of number of iterations\\"}},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/PrivateSale.sol\\":\\"PrivateSale\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/PrivateSale.sol\\":{\\"content\\":\\"/**\\\\r\\\\n *Submitted for verification at BscScan.com on 2022-01-18\\\\r\\\\n */\\\\r\\\\n\\\\r\\\\n// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity >=0.8.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * BEP20 standard interface.\\\\r\\\\n */\\\\r\\\\ninterface IBEP20 {\\\\r\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n\\\\r\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n  function transferFrom(\\\\r\\\\n    address sender,\\\\r\\\\n    address recipient,\\\\r\\\\n    uint256 amount\\\\r\\\\n  ) external returns (bool);\\\\r\\\\n\\\\r\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n  function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n  function decimals() external view returns (uint8);\\\\r\\\\n\\\\r\\\\n  function symbol() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n  function name() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n  function getOwner() external view returns (address);\\\\r\\\\n\\\\r\\\\n  function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n  function allowance(address _owner, address spender) external view returns (uint256);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    uint256 c = a + b;\\\\r\\\\n    require(c >= a, \'SafeMath: addition overflow\');\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    return sub(a, b, \'SafeMath: subtraction overflow\');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(\\\\r\\\\n    uint256 a,\\\\r\\\\n    uint256 b,\\\\r\\\\n    string memory errorMessage\\\\r\\\\n  ) internal pure returns (uint256) {\\\\r\\\\n    require(b <= a, errorMessage);\\\\r\\\\n    uint256 c = a - b;\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    if (a == 0) {\\\\r\\\\n      return 0;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    uint256 c = a * b;\\\\r\\\\n    require(c / a == b, \'SafeMath: multiplication overflow\');\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    return div(a, b, \'SafeMath: division by zero\');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(\\\\r\\\\n    uint256 a,\\\\r\\\\n    uint256 b,\\\\r\\\\n    string memory errorMessage\\\\r\\\\n  ) internal pure returns (uint256) {\\\\r\\\\n    require(b > 0, errorMessage);\\\\r\\\\n    uint256 c = a / b;\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nlibrary SafeMathInt {\\\\r\\\\n  int256 private constant MIN_INT256 = int256(1) << 255;\\\\r\\\\n  int256 private constant MAX_INT256 = ~(int256(1) << 255);\\\\r\\\\n\\\\r\\\\n  function mul(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a * b;\\\\r\\\\n\\\\r\\\\n    require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\\\\r\\\\n    require((b == 0) || (c / b == a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    require(b != -1 || a != MIN_INT256);\\\\r\\\\n\\\\r\\\\n    return a / b;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a - b;\\\\r\\\\n    require((b >= 0 && c <= a) || (b < 0 && c > a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function add(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a + b;\\\\r\\\\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function abs(int256 a) internal pure returns (int256) {\\\\r\\\\n    require(a != MIN_INT256);\\\\r\\\\n    return a < 0 ? -a : a;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nabstract contract Auth {\\\\r\\\\n  address internal owner;\\\\r\\\\n  mapping(address => bool) internal authorizations;\\\\r\\\\n  event OwnershipTransferred(address owner);\\\\r\\\\n\\\\r\\\\n  modifier onlyOwner() {\\\\r\\\\n    require(isOwner(msg.sender), \'!OWNER\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  modifier authorized() {\\\\r\\\\n    require(isAuthorized(msg.sender), \'!AUTHORIZED\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  constructor(address _owner) {\\\\r\\\\n    owner = _owner;\\\\r\\\\n    authorizations[_owner] = true;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function authorize(address adr) public onlyOwner {\\\\r\\\\n    authorizations[adr] = true;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function unauthorize(address adr) public onlyOwner {\\\\r\\\\n    authorizations[adr] = false;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function transferOwnership(address payable adr) public onlyOwner {\\\\r\\\\n    owner = adr;\\\\r\\\\n    authorizations[adr] = true;\\\\r\\\\n    emit OwnershipTransferred(adr);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function isOwner(address account) public view returns (bool) {\\\\r\\\\n    return account == owner;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function isAuthorized(address adr) public view returns (bool) {\\\\r\\\\n    return authorizations[adr];\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ncontract PrivateSale is Auth {\\\\r\\\\n  using SafeMath for uint256;\\\\r\\\\n  using SafeMathInt for int256;\\\\r\\\\n\\\\r\\\\n  struct InvestorInfo {\\\\r\\\\n    uint256 joinedDate; //first joined date in seconds\\\\r\\\\n    uint256 _cliff; // in seconds\\\\r\\\\n    uint256 joinedBNBAmount; //max 2.4\\\\r\\\\n    uint256 totalReceivableAmount; //total\\\\r\\\\n    uint256 receivableAmount; //left\\\\r\\\\n    uint256 currentAmount; //current  e.g. total = left + current\\\\r\\\\n    uint256 releaseState; // 0: not released, 1: listing-released, 2: first-released, 3: second-released, 4: third-released, 5: last-released\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  IBEP20 public MambaContract;\\\\r\\\\n  address public mambapadAddress;\\\\r\\\\n\\\\r\\\\n  /////////// whitelist\\\\r\\\\n  mapping(address => bool) private _isWhitelisted; // white listed flag\\\\r\\\\n  uint256 public totalWhiteListed; // white listed users number\\\\r\\\\n  address[] public holdersIndex; // iterable index of holders\\\\r\\\\n  // Create a new role identifier for the controller role\\\\r\\\\n\\\\r\\\\n  event AdddWhitelisted(address indexed user);\\\\r\\\\n  event RemovedWhitelisted(address indexed user);\\\\r\\\\n\\\\r\\\\n  ////////// private sale\\\\r\\\\n\\\\r\\\\n  address[] public investors;\\\\r\\\\n\\\\r\\\\n  uint256 public totalAmountForPrivateSale = 10000000; //10,000,000\\\\r\\\\n  uint256 public rateMAMPperBNB = 80000; //80,000\\\\r\\\\n  uint256 public etherDenominator = 10**18;\\\\r\\\\n  uint256 public mampDenominator = 10**8;\\\\r\\\\n  uint256 public rateDenominator = 10**10;\\\\r\\\\n  uint256 public percDenominator = 100;\\\\r\\\\n\\\\r\\\\n  uint256 public cliff = 30 days;\\\\r\\\\n  uint256 public duration = 3 days;\\\\r\\\\n  uint256 public TGE = 20; //20%\\\\r\\\\n  uint256 public PercPerMonth = 20; //20%\\\\r\\\\n  bool public isListedonPancakeswap = false;\\\\r\\\\n\\\\r\\\\n  uint256 public start_time = 1644710400; //13th Feb 2022\\\\r\\\\n  uint256 public end_time = 1644969600; //16th Feb 2022\\\\r\\\\n\\\\r\\\\n  uint256 public min_buy_amount_estimate = 10; //0.1 * percDenominator\\\\r\\\\n  uint256 public max_buy_amount_estimate = 240; //2.4 * percDenominator\\\\r\\\\n\\\\r\\\\n  uint256 public depositedBNB = 0;\\\\r\\\\n  mapping(address => InvestorInfo) public investorInfos;\\\\r\\\\n\\\\r\\\\n  event joinedPool(address indexed from, uint256 amount);\\\\r\\\\n  event withdrawn(address indexed from, uint256 rewardAmount);\\\\r\\\\n\\\\r\\\\n  constructor(address _mambapad) Auth(msg.sender) {\\\\r\\\\n    require(_mambapad != address(0), \'PrivateSale: mambapad is zero address\');\\\\r\\\\n\\\\r\\\\n    MambaContract = IBEP20(_mambapad);\\\\r\\\\n    mambapadAddress = _mambapad;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function joinPool() public payable {\\\\r\\\\n    require(block.timestamp > start_time, \\\\\\"PrivateSale:joinPool - Can\'t join pool yet\\\\\\");\\\\r\\\\n    require(block.timestamp < end_time, \\\\\\"PrivateSale:joinPool - Can\'t join pool more\\\\\\");\\\\r\\\\n    require(\\\\r\\\\n      msg.value >= min_buy_amount_estimate.mul(etherDenominator).div(percDenominator),\\\\r\\\\n      \\\\\\"PrivateSale:joinPool - Can\'t be under min_buy_amount\\\\\\"\\\\r\\\\n    );\\\\r\\\\n    require(\\\\r\\\\n      msg.value <= max_buy_amount_estimate.mul(etherDenominator).div(percDenominator),\\\\r\\\\n      \\\\\\"PrivateSale:joinPool - Can\'t be over max_buy_amount\\\\\\"\\\\r\\\\n    );\\\\r\\\\n    require(isWhitelisted(msg.sender), \'PrivateSale:joinPool - User is not whitelisted\');\\\\r\\\\n    require(\\\\r\\\\n      investorInfos[msg.sender].joinedBNBAmount.add(msg.value) <=\\\\r\\\\n        max_buy_amount_estimate.mul(etherDenominator).div(percDenominator),\\\\r\\\\n      \'PrivateSale:joinPool - exceeded max amount\'\\\\r\\\\n    );\\\\r\\\\n\\\\r\\\\n    uint256 amountToBuy = (msg.value).mul(rateMAMPperBNB).div(rateDenominator);\\\\r\\\\n\\\\r\\\\n    require(\\\\r\\\\n      MambaContract.balanceOf(address(this)) > amountToBuy,\\\\r\\\\n      \'PrivateSale:joinPool - This pool has no enough Mamp than amountToBuy\'\\\\r\\\\n    );\\\\r\\\\n\\\\r\\\\n    uint256 total = investorInfos[msg.sender].totalReceivableAmount.add(amountToBuy);\\\\r\\\\n    uint256 totalJoinedBNB = investorInfos[msg.sender].joinedBNBAmount.add(msg.value);\\\\r\\\\n\\\\r\\\\n    investorInfos[msg.sender] = InvestorInfo(block.timestamp, 0, totalJoinedBNB, total, total, 0, 0); //joineddate, _cliff, bnb, total, left, current, state\\\\r\\\\n    investors.push(msg.sender);\\\\r\\\\n    depositedBNB = depositedBNB.add(msg.value);\\\\r\\\\n\\\\r\\\\n    emit joinedPool(msg.sender, msg.value);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawBNB(uint256 _amount, address _to) external onlyOwner {\\\\r\\\\n    uint256 ownerBalance = address(this).balance;\\\\r\\\\n    require(ownerBalance > 0, \'PrivateSale:withdrawBNB - No BNB to withdraw\');\\\\r\\\\n\\\\r\\\\n    (bool sent, ) = _to.call{value: _amount}(\'\');\\\\r\\\\n    require(sent, \'PrivateSale:withdrawBNB - Transfer failed.\');\\\\r\\\\n    emit withdrawn(msg.sender, ownerBalance);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawMAMP(uint256 _amount, address _to) external onlyOwner {\\\\r\\\\n    uint256 ownerBalance = MambaContract.balanceOf(address(this));\\\\r\\\\n    require(ownerBalance > 0, \'PrivateSale:withdrawMAMP - No MAMP to withdraw\');\\\\r\\\\n\\\\r\\\\n    MambaContract.transfer(_to, _amount);\\\\r\\\\n\\\\r\\\\n    emit withdrawn(msg.sender, ownerBalance);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawTGE() external {\\\\r\\\\n    require(isListedonPancakeswap, \'PrivateSale:withdrawTGE - MAMP is not yet listed on PancakeSwap\');\\\\r\\\\n    require(investorInfos[msg.sender].releaseState == 0, \'PrivateSale:withdrawTGE - You already received TGE\');\\\\r\\\\n    require(isWhitelisted(msg.sender), \'PrivateSale:withdrawTGE - User is not whitelisted\');\\\\r\\\\n\\\\r\\\\n    uint256 receivingAmountAfterListing = investorInfos[msg.sender].receivableAmount.mul(TGE).div(percDenominator);\\\\r\\\\n    _claimMamp(receivingAmountAfterListing);\\\\r\\\\n\\\\r\\\\n    investorInfos[msg.sender]._cliff = block.timestamp.add(cliff); //30 * 24 * 60 * 60\\\\r\\\\n    uint256 nextReceivableAmount = investorInfos[msg.sender].receivableAmount.sub(receivingAmountAfterListing);\\\\r\\\\n    investorInfos[msg.sender].receivableAmount = nextReceivableAmount;\\\\r\\\\n    investorInfos[msg.sender].currentAmount = receivingAmountAfterListing;\\\\r\\\\n    investorInfos[msg.sender].releaseState = 1;\\\\r\\\\n    emit withdrawn(address(this), receivingAmountAfterListing);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawPerMonth() external {\\\\r\\\\n    require(isListedonPancakeswap, \'PrivateSale:withdrawPerMonth - MAMP is not yet listed on PancakeSwap\');\\\\r\\\\n    require(isWhitelisted(msg.sender), \'PrivateSale:withdrawPerMonth - User is not whitelisted\');\\\\r\\\\n    require(\\\\r\\\\n      investorInfos[msg.sender]._cliff < block.timestamp,\\\\r\\\\n      \'PrivateSale:withdrawPerMonth - is not the time to withdraw monthly\'\\\\r\\\\n    );\\\\r\\\\n    require(investorInfos[msg.sender].releaseState >= 1, \'PrivateSale:withdrawPerMonth - First receive TGE\');\\\\r\\\\n    require(\\\\r\\\\n      investorInfos[msg.sender].releaseState < 5,\\\\r\\\\n      \'PrivateSale:withdrawPerMonth - You are all received Amount of Private Sale\'\\\\r\\\\n    );\\\\r\\\\n\\\\r\\\\n    uint256 amountToReceivePerMonth = investorInfos[msg.sender].totalReceivableAmount.mul(PercPerMonth).div(\\\\r\\\\n      percDenominator\\\\r\\\\n    );\\\\r\\\\n    _claimMamp(amountToReceivePerMonth);\\\\r\\\\n\\\\r\\\\n    uint256 overTime = block.timestamp.sub(investorInfos[msg.sender]._cliff);\\\\r\\\\n\\\\r\\\\n    investorInfos[msg.sender]._cliff = block.timestamp.sub(overTime).add(cliff);\\\\r\\\\n    investorInfos[msg.sender].receivableAmount = investorInfos[msg.sender].receivableAmount.sub(\\\\r\\\\n      amountToReceivePerMonth\\\\r\\\\n    );\\\\r\\\\n    investorInfos[msg.sender].currentAmount = investorInfos[msg.sender].currentAmount.add(amountToReceivePerMonth);\\\\r\\\\n    investorInfos[msg.sender].releaseState++;\\\\r\\\\n    emit withdrawn(address(this), amountToReceivePerMonth);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function addTotalAmountForPrivateSale(uint256 _addingAmount) external onlyOwner {\\\\r\\\\n    totalAmountForPrivateSale = totalAmountForPrivateSale.add(_addingAmount);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setListedonPancakeswap() external onlyOwner {\\\\r\\\\n    isListedonPancakeswap = true;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setStartTime(uint256 _startTime) external onlyOwner {\\\\r\\\\n    start_time = _startTime;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setCliff(uint256 _cliff) external onlyOwner {\\\\r\\\\n    cliff = _cliff;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setAddressForListing(address _to) external onlyOwner {\\\\r\\\\n    mambapadAddress = _to;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setEndTime(uint256 _endTime) external onlyOwner {\\\\r\\\\n    end_time = _endTime;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setBuyMinAmount(uint256 _amount) external onlyOwner {\\\\r\\\\n    min_buy_amount_estimate = _amount;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setBuyMaxAmount(uint256 _amount) external onlyOwner {\\\\r\\\\n    max_buy_amount_estimate = _amount;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setPercPerMonth(uint256 _perc) external onlyOwner {\\\\r\\\\n    PercPerMonth = _perc;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setTGE(uint256 _tge) external onlyOwner {\\\\r\\\\n    TGE = _tge;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setRateMAMPperBNB(uint256 _rate) external onlyOwner {\\\\r\\\\n    rateMAMPperBNB = _rate;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getInvestorInfo(address _beneficiary) external view returns (InvestorInfo memory) {\\\\r\\\\n    return investorInfos[_beneficiary];\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getInfo()\\\\r\\\\n    external\\\\r\\\\n    view\\\\r\\\\n    returns (\\\\r\\\\n      uint256 mampAmountofContract,\\\\r\\\\n      uint256 bnbAmountofContract,\\\\r\\\\n      uint256 bnbAmountDepositedinContract,\\\\r\\\\n      uint256 startingTime,\\\\r\\\\n      uint256 endingTime,\\\\r\\\\n      bool isListedPCS,\\\\r\\\\n      address[] memory joinedInvestors,\\\\r\\\\n      address[] memory holderIndex,\\\\r\\\\n      uint256 minAmount,\\\\r\\\\n      uint256 maxAmount,\\\\r\\\\n      uint256 cliffTime,\\\\r\\\\n      uint256 perMonth\\\\r\\\\n    )\\\\r\\\\n  {\\\\r\\\\n    mampAmountofContract = MambaContract.balanceOf(address(this));\\\\r\\\\n    bnbAmountofContract = address(this).balance;\\\\r\\\\n    bnbAmountDepositedinContract = depositedBNB;\\\\r\\\\n    startingTime = start_time;\\\\r\\\\n    endingTime = end_time;\\\\r\\\\n    isListedPCS = isListedonPancakeswap;\\\\r\\\\n    joinedInvestors = investors;\\\\r\\\\n    holderIndex = holdersIndex;\\\\r\\\\n    minAmount = min_buy_amount_estimate;\\\\r\\\\n    maxAmount = max_buy_amount_estimate;\\\\r\\\\n    cliffTime = cliff;\\\\r\\\\n    perMonth = PercPerMonth;\\\\r\\\\n    return (\\\\r\\\\n      mampAmountofContract,\\\\r\\\\n      bnbAmountofContract,\\\\r\\\\n      bnbAmountDepositedinContract,\\\\r\\\\n      startingTime,\\\\r\\\\n      endingTime,\\\\r\\\\n      isListedPCS,\\\\r\\\\n      joinedInvestors,\\\\r\\\\n      holderIndex,\\\\r\\\\n      minAmount,\\\\r\\\\n      maxAmount,\\\\r\\\\n      cliffTime,\\\\r\\\\n      perMonth\\\\r\\\\n    );\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function _claimMamp(uint256 amountToBuy) private {\\\\r\\\\n    if (MambaContract.balanceOf(address(this)) > amountToBuy) {\\\\r\\\\n      MambaContract.transfer(msg.sender, amountToBuy);\\\\r\\\\n    } else MambaContract.transfer(msg.sender, MambaContract.balanceOf(address(this)));\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Add an account to the whitelist,\\\\r\\\\n   * @param user The address of the investor\\\\r\\\\n   */\\\\r\\\\n  function addWhitelisted(address user) external onlyOwner {\\\\r\\\\n    _addWhitelisted(user);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice This function allows to whitelist investors in batch\\\\r\\\\n   * with control of number of iterations\\\\r\\\\n   * @param users The accounts to be whitelisted in batch\\\\r\\\\n   */\\\\r\\\\n  function addWhitelistedMultiple(address[] calldata users) external onlyOwner {\\\\r\\\\n    uint256 length = users.length;\\\\r\\\\n    require(length <= 256, \'Whitelist-addWhitelistedMultiple: List too long\');\\\\r\\\\n    for (uint256 i = 0; i < length; i++) {\\\\r\\\\n      _addWhitelisted(users[i]);\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice Remove an account from the whitelist, calling the corresponding internal\\\\r\\\\n   * function\\\\r\\\\n   * @param user The address of the investor that needs to be removed\\\\r\\\\n   */\\\\r\\\\n  function removeWhitelisted(address user) external onlyOwner {\\\\r\\\\n    _removeWhitelisted(user);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice This function allows to whitelist investors in batch\\\\r\\\\n   * with control of number of iterations\\\\r\\\\n   * @param users The accounts to be whitelisted in batch\\\\r\\\\n   */\\\\r\\\\n  function removeWhitelistedMultiple(address[] calldata users) external onlyOwner {\\\\r\\\\n    uint256 length = users.length;\\\\r\\\\n    require(length <= 256, \'Whitelist-removeWhitelistedMultiple: List too long\');\\\\r\\\\n    for (uint256 i = 0; i < length; i++) {\\\\r\\\\n      _removeWhitelisted(users[i]);\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice Check if an account is whitelisted or not\\\\r\\\\n   * @param user The account to be checked\\\\r\\\\n   * @return true if the account is whitelisted. Otherwise, false.\\\\r\\\\n   */\\\\r\\\\n  function isWhitelisted(address user) public view returns (bool) {\\\\r\\\\n    return _isWhitelisted[user];\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice Add an investor to the whitelist\\\\r\\\\n   * @param user The address of the investor that has successfully passed KYC\\\\r\\\\n   */\\\\r\\\\n  function _addWhitelisted(address user) private {\\\\r\\\\n    require(user != address(0), \'WhiteList:_addWhiteList - Not a valid address\');\\\\r\\\\n    require(_isWhitelisted[user] == false, \'Whitelist-_addWhitelisted: account already whitelisted\');\\\\r\\\\n    _isWhitelisted[user] = true;\\\\r\\\\n    totalWhiteListed++;\\\\r\\\\n    holdersIndex.push(user);\\\\r\\\\n    emit AdddWhitelisted(user);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @notice Remove an investor from the whitelist\\\\r\\\\n   * @param user The address of the investor that needs to be removed\\\\r\\\\n   */\\\\r\\\\n  function _removeWhitelisted(address user) private {\\\\r\\\\n    require(user != address(0), \'WhiteList:_removeWhitelisted - Not a valid address\');\\\\r\\\\n    require(_isWhitelisted[user] == true, \'Whitelist-_removeWhitelisted: account was not whitelisted\');\\\\r\\\\n    _isWhitelisted[user] = false;\\\\r\\\\n    totalWhiteListed--;\\\\r\\\\n    emit RemovedWhitelisted(user);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x495ce72081eac1bf652e939adc76a88d29c427e2d59d41692a03821a7fcf02d0\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60806040526298968060085562013880600955670de0b6b3a7640000600a9081556305f5e100600b556402540be400600c556064600d5562278d00600e556203f480600f556014601081905560118190556012805460ff191690556362084a0060135563620c3e80905560155560f060165560006017553480156200008357600080fd5b5060405162002b6138038062002b61833981016040819052620000a6916200016c565b600080546001600160a01b0319163390811782558152600160208190526040909120805460ff191690911790556001600160a01b0381166200013c5760405162461bcd60e51b815260206004820152602560248201527f5072697661746553616c653a206d616d6261706164206973207a65726f206164604482015264647265737360d81b606482015260840160405180910390fd5b600280546001600160a01b039092166001600160a01b03199283168117909155600380549092161790556200019e565b6000602082840312156200017f57600080fd5b81516001600160a01b03811681146200019757600080fd5b9392505050565b6129b380620001ae6000396000f3fe6080604052600436106102c95760003560e01c8063834ee41711610175578063c40ce6f9116100dc578063f2fde38b11610095578063fd6cf78b1161006f578063fd6cf78b146108ee578063fe9fbb8014610904578063ff1a318d1461093d578063ff4d1f251461095d57600080fd5b8063f2fde38b14610898578063f5c35ea3146108b8578063fb79e552146108d857600080fd5b8063c40ce6f9146107f6578063c669d8b71461080c578063ccb98ffc1461082c578063df2ea3be1461084c578063f00b2b1214610862578063f0b37c041461087857600080fd5b806397a9bfaf1161012e57806397a9bfaf1461075e5780639dc738bd1461077e578063a07b206f14610794578063a9c9b19c146107aa578063ac5227b3146107c0578063b6a5d7de146107d657600080fd5b8063834ee417146106d45780638371e6b4146106ea578063865192f7146106f25780638867596f1461070857806393ef0b5f1461071e57806396281f891461073e57600080fd5b80632a14a9da116102345780633feb5f2b116101ed57806369c7c20e116101c757806369c7c20e1461066a5780636d53c6fc1461068a57806378988ccf1461069f57806383031f12146106bf57600080fd5b80633feb5f2b1461060857806348bbdfd5146106285780635a9b0b891461063d57600080fd5b80632a14a9da146105205780632f54bf6e1461054057806332a6900c1461056f57806338c8bf551461058f5780633af32abf146105af5780633e0a322d146105e857600080fd5b806310154bad1161028657806310154bad1461046657806313cf63b91461048657806313d033c0146104be57806316243356146104d457806324d4d6ce146104ea578063291d95491461050057600080fd5b8063050d1040146102ce5780630707873c1461036057806307d1b247146103d6578063092ee84d146103f857806309ef1fdb146104225780630fb5a6b414610442575b600080fd5b3480156102da57600080fd5b506103266102e9366004612642565b6018602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b34801561036c57600080fd5b5061038061037b366004612642565b61097d565b6040516103579190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b3480156103e257600080fd5b506103f66103f136600461265f565b610a29565b005b34801561040457600080fd5b506012546104129060ff1681565b6040519015158152602001610357565b34801561042e57600080fd5b506103f661043d36600461268f565b610b9e565b34801561044e57600080fd5b50610458600f5481565b604051908152602001610357565b34801561047257600080fd5b506103f6610481366004612642565b610bcd565b34801561049257600080fd5b506003546104a6906001600160a01b031681565b6040516001600160a01b039091168152602001610357565b3480156104ca57600080fd5b50610458600e5481565b3480156104e057600080fd5b5061045860145481565b3480156104f657600080fd5b5061045860095481565b34801561050c57600080fd5b506103f661051b366004612642565b610c03565b34801561052c57600080fd5b506104a661053b36600461268f565b610c36565b34801561054c57600080fd5b5061041261055b366004612642565b6000546001600160a01b0391821691161490565b34801561057b57600080fd5b506103f661058a36600461265f565b610c60565b34801561059b57600080fd5b506103f66105aa36600461268f565b610e01565b3480156105bb57600080fd5b506104126105ca366004612642565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156105f457600080fd5b506103f661060336600461268f565b610e30565b34801561061457600080fd5b506104a661062336600461268f565b610e5f565b34801561063457600080fd5b506103f6610e6f565b34801561064957600080fd5b5061065261122e565b6040516103579c9b9a999897969594939291906126ec565b34801561067657600080fd5b506103f661068536600461276a565b6113b6565b34801561069657600080fd5b506103f661149d565b3480156106ab57600080fd5b506103f66106ba366004612642565b6116bd565b3480156106cb57600080fd5b506103f6611709565b3480156106e057600080fd5b5061045860135481565b6103f6611742565b3480156106fe57600080fd5b50610458600c5481565b34801561071457600080fd5b5061045860105481565b34801561072a57600080fd5b506103f661073936600461268f565b611c79565b34801561074a57600080fd5b506103f661075936600461268f565b611ca8565b34801561076a57600080fd5b506103f661077936600461268f565b611ce5565b34801561078a57600080fd5b5061045860175481565b3480156107a057600080fd5b5061045860055481565b3480156107b657600080fd5b5061045860155481565b3480156107cc57600080fd5b50610458600b5481565b3480156107e257600080fd5b506103f66107f1366004612642565b611d14565b34801561080257600080fd5b5061045860085481565b34801561081857600080fd5b506103f661082736600461276a565b611d65565b34801561083857600080fd5b506103f661084736600461268f565b611e49565b34801561085857600080fd5b5061045860165481565b34801561086e57600080fd5b5061045860115481565b34801561088457600080fd5b506103f6610893366004612642565b611e78565b3480156108a457600080fd5b506103f66108b3366004612642565b611ec3565b3480156108c457600080fd5b506002546104a6906001600160a01b031681565b3480156108e457600080fd5b50610458600d5481565b3480156108fa57600080fd5b50610458600a5481565b34801561091057600080fd5b5061041261091f366004612642565b6001600160a01b031660009081526001602052604090205460ff1690565b34801561094957600080fd5b506103f661095836600461268f565b611f59565b34801561096957600080fd5b506103f661097836600461268f565b611f88565b6109bd6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260186020908152604091829020825160e081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260069091015460c082015290565b6000546001600160a01b03163314610a5c5760405162461bcd60e51b8152600401610a53906127df565b60405180910390fd5b4780610abf5760405162461bcd60e51b815260206004820152602c60248201527f5072697661746553616c653a7769746864726177424e42202d204e6f20424e4260448201526b20746f20776974686472617760a01b6064820152608401610a53565b6000826001600160a01b03168460405160006040518083038185875af1925050503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b5050905080610b755760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a7769746864726177424e42202d205472616e736660448201526932b9103330b4b632b21760b11b6064820152608401610a53565b604051828152339060008051602061295e8339815191529060200160405180910390a250505050565b6000546001600160a01b03163314610bc85760405162461bcd60e51b8152600401610a53906127df565b600955565b6000546001600160a01b03163314610bf75760405162461bcd60e51b8152600401610a53906127df565b610c0081611fb7565b50565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b8152600401610a53906127df565b610c0081612159565b60068181548110610c4657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b8152600401610a53906127df565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906127ff565b905060008111610d605760405162461bcd60e51b815260206004820152602e60248201527f5072697661746553616c653a77697468647261774d414d50202d204e6f204d4160448201526d4d5020746f20776974686472617760901b6064820152608401610a53565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af1158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190612818565b50604051818152339060008051602061295e833981519152906020015b60405180910390a2505050565b6000546001600160a01b03163314610e2b5760405162461bcd60e51b8152600401610a53906127df565b601555565b6000546001600160a01b03163314610e5a5760405162461bcd60e51b8152600401610a53906127df565b601355565b60078181548110610c4657600080fd5b60125460ff16610ef55760405162461bcd60e51b8152602060048201526044602482018190527f5072697661746553616c653a77697468647261775065724d6f6e7468202d204d908201527f414d50206973206e6f7420796574206c6973746564206f6e2050616e63616b656064820152630537761760e41b608482015260a401610a53565b3360009081526004602052604090205460ff16610f735760405162461bcd60e51b815260206004820152603660248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d20556044820152751cd95c881a5cc81b9bdd081dda1a5d195b1a5cdd195960521b6064820152608401610a53565b3360009081526018602052604090206001015442116110055760405162461bcd60e51b815260206004820152604260248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d206960448201527f73206e6f74207468652074696d6520746f207769746864726177206d6f6e74686064820152616c7960f01b608482015260a401610a53565b33600090815260186020526040902060060154600111156110815760405162461bcd60e51b815260206004820152603060248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d204660448201526f6972737420726563656976652054474560801b6064820152608401610a53565b3360009081526018602052604090206006015460051161111c5760405162461bcd60e51b815260206004820152604a60248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d205960448201527f6f752061726520616c6c20726563656976656420416d6f756e74206f6620507260648201526969766174652053616c6560b01b608482015260a401610a53565b600d5460115433600090815260186020526040812060030154909261114c929091611146916122c7565b9061234f565b905061115781612391565b33600090815260186020526040812060010154611175904290612524565b600e5490915061118f906111894284612524565b90612566565b3360009081526018602052604090206001810191909155600401546111b49083612524565b3360009081526018602052604090206004810191909155600501546111d99083612566565b3360009081526018602052604081206005810192909255600690910180549161120183612850565b9091555050604051828152309060008051602061295e833981519152906020015b60405180910390a25050565b6002546040516370a0823160e01b815230600482015260009182918291829182918291606091829184918291829182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b491906127ff565b9b50479a50601754995060135498506014549750601260009054906101000a900460ff169650600780548060200260200160405190810160405280929190818152602001828054801561133057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611312575b50505050509550600680548060200260200160405190810160405280929190818152602001828054801561138d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161136f575b5050505050945060155493506016549250600e5491506011549050909192939495969798999a9b565b6000546001600160a01b031633146113e05760405162461bcd60e51b8152600401610a53906127df565b8061010081111561144b5760405162461bcd60e51b815260206004820152602f60248201527f57686974656c6973742d61646457686974656c69737465644d756c7469706c6560448201526e3a204c69737420746f6f206c6f6e6760881b6064820152608401610a53565b60005b818110156114975761148584848381811061146b5761146b61286b565b90506020020160208101906114809190612642565b611fb7565b8061148f81612850565b91505061144e565b50505050565b60125460ff166115155760405162461bcd60e51b815260206004820152603f60248201527f5072697661746553616c653a7769746864726177544745202d204d414d50206960448201527f73206e6f7420796574206c6973746564206f6e2050616e63616b6553776170006064820152608401610a53565b33600090815260186020526040902060060154156115905760405162461bcd60e51b815260206004820152603260248201527f5072697661746553616c653a7769746864726177544745202d20596f7520616c60448201527172656164792072656365697665642054474560701b6064820152608401610a53565b3360009081526004602052604090205460ff166116095760405162461bcd60e51b815260206004820152603160248201527f5072697661746553616c653a7769746864726177544745202d205573657220696044820152701cc81b9bdd081dda1a5d195b1a5cdd1959607a1b6064820152608401610a53565b600d54601054336000908152601860205260408120600401549092611633929091611146916122c7565b905061163e81612391565b600e5461164c904290612566565b33600090815260186020526040812060018101929092556004909101546116739083612524565b33600090815260186020526040908190206004810183905560058101859055600160069091015551909150309060008051602061295e833981519152906112229085815260200190565b6000546001600160a01b031633146116e75760405162461bcd60e51b8152600401610a53906127df565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117335760405162461bcd60e51b8152600401610a53906127df565b6012805460ff19166001179055565b60135442116117a65760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206a6f696044820152691b881c1bdbdb081e595d60b21b6064820152608401610a53565b601454421061180b5760405162461bcd60e51b815260206004820152602b60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206a6f6960448201526a6e20706f6f6c206d6f726560a81b6064820152608401610a53565b611828600d54611146600a546015546122c790919063ffffffff16565b3410156118945760405162461bcd60e51b815260206004820152603460248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206265206044820152731d5b99195c881b5a5b97d89d5e57d85b5bdd5b9d60621b6064820152608401610a53565b6118b1600d54611146600a546016546122c790919063ffffffff16565b34111561191c5760405162461bcd60e51b815260206004820152603360248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206265206044820152721bdd995c881b585e17d89d5e57d85b5bdd5b9d606a1b6064820152608401610a53565b3360009081526004602052604090205460ff166119925760405162461bcd60e51b815260206004820152602e60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2055736572206973206e60448201526d1bdd081dda1a5d195b1a5cdd195960921b6064820152608401610a53565b6119af600d54611146600a546016546122c790919063ffffffff16565b336000908152601860205260409020600201546119cc9034612566565b1115611a2d5760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a6a6f696e506f6f6c202d206578636565646564206044820152691b585e08185b5bdd5b9d60b21b6064820152608401610a53565b6000611a4a600c54611146600954346122c790919063ffffffff16565b6002546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abb91906127ff565b11611b3c5760405162461bcd60e51b8152602060048201526044602482018190527f5072697661746553616c653a6a6f696e506f6f6c202d205468697320706f6f6c908201527f20686173206e6f20656e6f756768204d616d70207468616e20616d6f756e74546064820152636f42757960e01b608482015260a401610a53565b33600090815260186020526040812060030154611b599083612566565b3360009081526018602052604081206002015491925090611b7a9034612566565b6040805160e0810182524281526000602080830182815283850186815260608501898152608086018a815260a0870186815260c08801878152338089526018909752988720975188559351600180890191909155925160028801559051600387015551600486015590516005850155935160069093019290925560078054938401815590527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180546001600160a01b0319169091179055601754909150611c449034612566565b60175560405134815233907f25fca2339137f6b91fa9be6e01fb2c1e91aeea5c57ed5f286b1bc814b1bf0a7990602001610df4565b6000546001600160a01b03163314611ca35760405162461bcd60e51b8152600401610a53906127df565b601655565b6000546001600160a01b03163314611cd25760405162461bcd60e51b8152600401610a53906127df565b600854611cdf9082612566565b60085550565b6000546001600160a01b03163314611d0f5760405162461bcd60e51b8152600401610a53906127df565b601155565b6000546001600160a01b03163314611d3e5760405162461bcd60e51b8152600401610a53906127df565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314611d8f5760405162461bcd60e51b8152600401610a53906127df565b80610100811115611dfd5760405162461bcd60e51b815260206004820152603260248201527f57686974656c6973742d72656d6f766557686974656c69737465644d756c7469604482015271706c653a204c69737420746f6f206c6f6e6760701b6064820152608401610a53565b60005b8181101561149757611e37848483818110611e1d57611e1d61286b565b9050602002016020810190611e329190612642565b612159565b80611e4181612850565b915050611e00565b6000546001600160a01b03163314611e735760405162461bcd60e51b8152600401610a53906127df565b601455565b6000546001600160a01b03163314611ea25760405162461bcd60e51b8152600401610a53906127df565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314611eed5760405162461bcd60e51b8152600401610a53906127df565b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff191690921790915591519081527f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163910160405180910390a150565b6000546001600160a01b03163314611f835760405162461bcd60e51b8152600401610a53906127df565b601055565b6000546001600160a01b03163314611fb25760405162461bcd60e51b8152600401610a53906127df565b600e55565b6001600160a01b0381166120235760405162461bcd60e51b815260206004820152602d60248201527f57686974654c6973743a5f61646457686974654c697374202d204e6f7420612060448201526c76616c6964206164647265737360981b6064820152608401610a53565b6001600160a01b03811660009081526004602052604090205460ff16156120ab5760405162461bcd60e51b815260206004820152603660248201527f57686974656c6973742d5f61646457686974656c69737465643a206163636f756044820152751b9d08185b1c9958591e481dda1a5d195b1a5cdd195960521b6064820152608401610a53565b6001600160a01b0381166000908152600460205260408120805460ff1916600117905560058054916120dc83612850565b90915550506006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b03841690811790915560405190917fcf1cca3d6456f2268db1b80986d584a1702c8c6acdd26fd41ce29f44a19fc2cd91a250565b6001600160a01b0381166121ca5760405162461bcd60e51b815260206004820152603260248201527f57686974654c6973743a5f72656d6f766557686974656c6973746564202d204e6044820152716f7420612076616c6964206164647265737360701b6064820152608401610a53565b6001600160a01b03811660009081526004602052604090205460ff16151560011461225d5760405162461bcd60e51b815260206004820152603960248201527f57686974656c6973742d5f72656d6f766557686974656c69737465643a20616360448201527f636f756e7420776173206e6f742077686974656c6973746564000000000000006064820152608401610a53565b6001600160a01b0381166000908152600460205260408120805460ff19169055600580549161228b83612881565b90915550506040516001600160a01b038216907fb4b1b6e4ef298ce17f0c4f14828a249dec837a6146d1ceae313c808d47cbe86390600090a250565b6000826122d657506000612349565b60006122e28385612898565b9050826122ef85836128b7565b146123465760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610a53565b90505b92915050565b600061234683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506125c5565b6002546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156123d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fd91906127ff565b111561247d5760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af1158015612455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124799190612818565b5050565b6002546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156124cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f391906127ff565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401612436565b600061234683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506125fc565b60008061257383856128d9565b9050838110156123465760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610a53565b600081836125e65760405162461bcd60e51b8152600401610a5391906128f1565b5060006125f384866128b7565b95945050505050565b600081848411156126205760405162461bcd60e51b8152600401610a5391906128f1565b5060006125f38486612946565b6001600160a01b0381168114610c0057600080fd5b60006020828403121561265457600080fd5b81356123468161262d565b6000806040838503121561267257600080fd5b8235915060208301356126848161262d565b809150509250929050565b6000602082840312156126a157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156126e15781516001600160a01b0316875295820195908201906001016126bc565b509495945050505050565b60006101808e83528d60208401528c60408401528b60608401528a608084015289151560a08401528060c08401526127268184018a6126a8565b905082810360e084015261273a81896126a8565b915050856101008301528461012083015283610140830152826101608301529d9c50505050505050505050505050565b6000806020838503121561277d57600080fd5b823567ffffffffffffffff8082111561279557600080fd5b818501915085601f8301126127a957600080fd5b8135818111156127b857600080fd5b8660208260051b85010111156127cd57600080fd5b60209290920196919550909350505050565b60208082526006908201526510a7aba722a960d11b604082015260600190565b60006020828403121561281157600080fd5b5051919050565b60006020828403121561282a57600080fd5b8151801515811461234657600080fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128645761286461283a565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816128905761289061283a565b506000190190565b60008160001904831182151516156128b2576128b261283a565b500290565b6000826128d457634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156128ec576128ec61283a565b500190565b600060208083528351808285015260005b8181101561291e57858101830151858201604001528201612902565b81811115612930576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156129585761295861283a565b50039056fe6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885aa26469706673582212205c77ccdafb5af2bbdca2a069167d6d1c97097feed227f5f3b8664c702ecca11064736f6c634300080b0033","deployedBytecode":"0x6080604052600436106102c95760003560e01c8063834ee41711610175578063c40ce6f9116100dc578063f2fde38b11610095578063fd6cf78b1161006f578063fd6cf78b146108ee578063fe9fbb8014610904578063ff1a318d1461093d578063ff4d1f251461095d57600080fd5b8063f2fde38b14610898578063f5c35ea3146108b8578063fb79e552146108d857600080fd5b8063c40ce6f9146107f6578063c669d8b71461080c578063ccb98ffc1461082c578063df2ea3be1461084c578063f00b2b1214610862578063f0b37c041461087857600080fd5b806397a9bfaf1161012e57806397a9bfaf1461075e5780639dc738bd1461077e578063a07b206f14610794578063a9c9b19c146107aa578063ac5227b3146107c0578063b6a5d7de146107d657600080fd5b8063834ee417146106d45780638371e6b4146106ea578063865192f7146106f25780638867596f1461070857806393ef0b5f1461071e57806396281f891461073e57600080fd5b80632a14a9da116102345780633feb5f2b116101ed57806369c7c20e116101c757806369c7c20e1461066a5780636d53c6fc1461068a57806378988ccf1461069f57806383031f12146106bf57600080fd5b80633feb5f2b1461060857806348bbdfd5146106285780635a9b0b891461063d57600080fd5b80632a14a9da146105205780632f54bf6e1461054057806332a6900c1461056f57806338c8bf551461058f5780633af32abf146105af5780633e0a322d146105e857600080fd5b806310154bad1161028657806310154bad1461046657806313cf63b91461048657806313d033c0146104be57806316243356146104d457806324d4d6ce146104ea578063291d95491461050057600080fd5b8063050d1040146102ce5780630707873c1461036057806307d1b247146103d6578063092ee84d146103f857806309ef1fdb146104225780630fb5a6b414610442575b600080fd5b3480156102da57600080fd5b506103266102e9366004612642565b6018602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b34801561036c57600080fd5b5061038061037b366004612642565b61097d565b6040516103579190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b3480156103e257600080fd5b506103f66103f136600461265f565b610a29565b005b34801561040457600080fd5b506012546104129060ff1681565b6040519015158152602001610357565b34801561042e57600080fd5b506103f661043d36600461268f565b610b9e565b34801561044e57600080fd5b50610458600f5481565b604051908152602001610357565b34801561047257600080fd5b506103f6610481366004612642565b610bcd565b34801561049257600080fd5b506003546104a6906001600160a01b031681565b6040516001600160a01b039091168152602001610357565b3480156104ca57600080fd5b50610458600e5481565b3480156104e057600080fd5b5061045860145481565b3480156104f657600080fd5b5061045860095481565b34801561050c57600080fd5b506103f661051b366004612642565b610c03565b34801561052c57600080fd5b506104a661053b36600461268f565b610c36565b34801561054c57600080fd5b5061041261055b366004612642565b6000546001600160a01b0391821691161490565b34801561057b57600080fd5b506103f661058a36600461265f565b610c60565b34801561059b57600080fd5b506103f66105aa36600461268f565b610e01565b3480156105bb57600080fd5b506104126105ca366004612642565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156105f457600080fd5b506103f661060336600461268f565b610e30565b34801561061457600080fd5b506104a661062336600461268f565b610e5f565b34801561063457600080fd5b506103f6610e6f565b34801561064957600080fd5b5061065261122e565b6040516103579c9b9a999897969594939291906126ec565b34801561067657600080fd5b506103f661068536600461276a565b6113b6565b34801561069657600080fd5b506103f661149d565b3480156106ab57600080fd5b506103f66106ba366004612642565b6116bd565b3480156106cb57600080fd5b506103f6611709565b3480156106e057600080fd5b5061045860135481565b6103f6611742565b3480156106fe57600080fd5b50610458600c5481565b34801561071457600080fd5b5061045860105481565b34801561072a57600080fd5b506103f661073936600461268f565b611c79565b34801561074a57600080fd5b506103f661075936600461268f565b611ca8565b34801561076a57600080fd5b506103f661077936600461268f565b611ce5565b34801561078a57600080fd5b5061045860175481565b3480156107a057600080fd5b5061045860055481565b3480156107b657600080fd5b5061045860155481565b3480156107cc57600080fd5b50610458600b5481565b3480156107e257600080fd5b506103f66107f1366004612642565b611d14565b34801561080257600080fd5b5061045860085481565b34801561081857600080fd5b506103f661082736600461276a565b611d65565b34801561083857600080fd5b506103f661084736600461268f565b611e49565b34801561085857600080fd5b5061045860165481565b34801561086e57600080fd5b5061045860115481565b34801561088457600080fd5b506103f6610893366004612642565b611e78565b3480156108a457600080fd5b506103f66108b3366004612642565b611ec3565b3480156108c457600080fd5b506002546104a6906001600160a01b031681565b3480156108e457600080fd5b50610458600d5481565b3480156108fa57600080fd5b50610458600a5481565b34801561091057600080fd5b5061041261091f366004612642565b6001600160a01b031660009081526001602052604090205460ff1690565b34801561094957600080fd5b506103f661095836600461268f565b611f59565b34801561096957600080fd5b506103f661097836600461268f565b611f88565b6109bd6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260186020908152604091829020825160e081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260069091015460c082015290565b6000546001600160a01b03163314610a5c5760405162461bcd60e51b8152600401610a53906127df565b60405180910390fd5b4780610abf5760405162461bcd60e51b815260206004820152602c60248201527f5072697661746553616c653a7769746864726177424e42202d204e6f20424e4260448201526b20746f20776974686472617760a01b6064820152608401610a53565b6000826001600160a01b03168460405160006040518083038185875af1925050503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b5050905080610b755760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a7769746864726177424e42202d205472616e736660448201526932b9103330b4b632b21760b11b6064820152608401610a53565b604051828152339060008051602061295e8339815191529060200160405180910390a250505050565b6000546001600160a01b03163314610bc85760405162461bcd60e51b8152600401610a53906127df565b600955565b6000546001600160a01b03163314610bf75760405162461bcd60e51b8152600401610a53906127df565b610c0081611fb7565b50565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b8152600401610a53906127df565b610c0081612159565b60068181548110610c4657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b8152600401610a53906127df565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906127ff565b905060008111610d605760405162461bcd60e51b815260206004820152602e60248201527f5072697661746553616c653a77697468647261774d414d50202d204e6f204d4160448201526d4d5020746f20776974686472617760901b6064820152608401610a53565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af1158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190612818565b50604051818152339060008051602061295e833981519152906020015b60405180910390a2505050565b6000546001600160a01b03163314610e2b5760405162461bcd60e51b8152600401610a53906127df565b601555565b6000546001600160a01b03163314610e5a5760405162461bcd60e51b8152600401610a53906127df565b601355565b60078181548110610c4657600080fd5b60125460ff16610ef55760405162461bcd60e51b8152602060048201526044602482018190527f5072697661746553616c653a77697468647261775065724d6f6e7468202d204d908201527f414d50206973206e6f7420796574206c6973746564206f6e2050616e63616b656064820152630537761760e41b608482015260a401610a53565b3360009081526004602052604090205460ff16610f735760405162461bcd60e51b815260206004820152603660248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d20556044820152751cd95c881a5cc81b9bdd081dda1a5d195b1a5cdd195960521b6064820152608401610a53565b3360009081526018602052604090206001015442116110055760405162461bcd60e51b815260206004820152604260248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d206960448201527f73206e6f74207468652074696d6520746f207769746864726177206d6f6e74686064820152616c7960f01b608482015260a401610a53565b33600090815260186020526040902060060154600111156110815760405162461bcd60e51b815260206004820152603060248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d204660448201526f6972737420726563656976652054474560801b6064820152608401610a53565b3360009081526018602052604090206006015460051161111c5760405162461bcd60e51b815260206004820152604a60248201527f5072697661746553616c653a77697468647261775065724d6f6e7468202d205960448201527f6f752061726520616c6c20726563656976656420416d6f756e74206f6620507260648201526969766174652053616c6560b01b608482015260a401610a53565b600d5460115433600090815260186020526040812060030154909261114c929091611146916122c7565b9061234f565b905061115781612391565b33600090815260186020526040812060010154611175904290612524565b600e5490915061118f906111894284612524565b90612566565b3360009081526018602052604090206001810191909155600401546111b49083612524565b3360009081526018602052604090206004810191909155600501546111d99083612566565b3360009081526018602052604081206005810192909255600690910180549161120183612850565b9091555050604051828152309060008051602061295e833981519152906020015b60405180910390a25050565b6002546040516370a0823160e01b815230600482015260009182918291829182918291606091829184918291829182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b491906127ff565b9b50479a50601754995060135498506014549750601260009054906101000a900460ff169650600780548060200260200160405190810160405280929190818152602001828054801561133057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611312575b50505050509550600680548060200260200160405190810160405280929190818152602001828054801561138d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161136f575b5050505050945060155493506016549250600e5491506011549050909192939495969798999a9b565b6000546001600160a01b031633146113e05760405162461bcd60e51b8152600401610a53906127df565b8061010081111561144b5760405162461bcd60e51b815260206004820152602f60248201527f57686974656c6973742d61646457686974656c69737465644d756c7469706c6560448201526e3a204c69737420746f6f206c6f6e6760881b6064820152608401610a53565b60005b818110156114975761148584848381811061146b5761146b61286b565b90506020020160208101906114809190612642565b611fb7565b8061148f81612850565b91505061144e565b50505050565b60125460ff166115155760405162461bcd60e51b815260206004820152603f60248201527f5072697661746553616c653a7769746864726177544745202d204d414d50206960448201527f73206e6f7420796574206c6973746564206f6e2050616e63616b6553776170006064820152608401610a53565b33600090815260186020526040902060060154156115905760405162461bcd60e51b815260206004820152603260248201527f5072697661746553616c653a7769746864726177544745202d20596f7520616c60448201527172656164792072656365697665642054474560701b6064820152608401610a53565b3360009081526004602052604090205460ff166116095760405162461bcd60e51b815260206004820152603160248201527f5072697661746553616c653a7769746864726177544745202d205573657220696044820152701cc81b9bdd081dda1a5d195b1a5cdd1959607a1b6064820152608401610a53565b600d54601054336000908152601860205260408120600401549092611633929091611146916122c7565b905061163e81612391565b600e5461164c904290612566565b33600090815260186020526040812060018101929092556004909101546116739083612524565b33600090815260186020526040908190206004810183905560058101859055600160069091015551909150309060008051602061295e833981519152906112229085815260200190565b6000546001600160a01b031633146116e75760405162461bcd60e51b8152600401610a53906127df565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117335760405162461bcd60e51b8152600401610a53906127df565b6012805460ff19166001179055565b60135442116117a65760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206a6f696044820152691b881c1bdbdb081e595d60b21b6064820152608401610a53565b601454421061180b5760405162461bcd60e51b815260206004820152602b60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206a6f6960448201526a6e20706f6f6c206d6f726560a81b6064820152608401610a53565b611828600d54611146600a546015546122c790919063ffffffff16565b3410156118945760405162461bcd60e51b815260206004820152603460248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206265206044820152731d5b99195c881b5a5b97d89d5e57d85b5bdd5b9d60621b6064820152608401610a53565b6118b1600d54611146600a546016546122c790919063ffffffff16565b34111561191c5760405162461bcd60e51b815260206004820152603360248201527f5072697661746553616c653a6a6f696e506f6f6c202d2043616e2774206265206044820152721bdd995c881b585e17d89d5e57d85b5bdd5b9d606a1b6064820152608401610a53565b3360009081526004602052604090205460ff166119925760405162461bcd60e51b815260206004820152602e60248201527f5072697661746553616c653a6a6f696e506f6f6c202d2055736572206973206e60448201526d1bdd081dda1a5d195b1a5cdd195960921b6064820152608401610a53565b6119af600d54611146600a546016546122c790919063ffffffff16565b336000908152601860205260409020600201546119cc9034612566565b1115611a2d5760405162461bcd60e51b815260206004820152602a60248201527f5072697661746553616c653a6a6f696e506f6f6c202d206578636565646564206044820152691b585e08185b5bdd5b9d60b21b6064820152608401610a53565b6000611a4a600c54611146600954346122c790919063ffffffff16565b6002546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abb91906127ff565b11611b3c5760405162461bcd60e51b8152602060048201526044602482018190527f5072697661746553616c653a6a6f696e506f6f6c202d205468697320706f6f6c908201527f20686173206e6f20656e6f756768204d616d70207468616e20616d6f756e74546064820152636f42757960e01b608482015260a401610a53565b33600090815260186020526040812060030154611b599083612566565b3360009081526018602052604081206002015491925090611b7a9034612566565b6040805160e0810182524281526000602080830182815283850186815260608501898152608086018a815260a0870186815260c08801878152338089526018909752988720975188559351600180890191909155925160028801559051600387015551600486015590516005850155935160069093019290925560078054938401815590527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890910180546001600160a01b0319169091179055601754909150611c449034612566565b60175560405134815233907f25fca2339137f6b91fa9be6e01fb2c1e91aeea5c57ed5f286b1bc814b1bf0a7990602001610df4565b6000546001600160a01b03163314611ca35760405162461bcd60e51b8152600401610a53906127df565b601655565b6000546001600160a01b03163314611cd25760405162461bcd60e51b8152600401610a53906127df565b600854611cdf9082612566565b60085550565b6000546001600160a01b03163314611d0f5760405162461bcd60e51b8152600401610a53906127df565b601155565b6000546001600160a01b03163314611d3e5760405162461bcd60e51b8152600401610a53906127df565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314611d8f5760405162461bcd60e51b8152600401610a53906127df565b80610100811115611dfd5760405162461bcd60e51b815260206004820152603260248201527f57686974656c6973742d72656d6f766557686974656c69737465644d756c7469604482015271706c653a204c69737420746f6f206c6f6e6760701b6064820152608401610a53565b60005b8181101561149757611e37848483818110611e1d57611e1d61286b565b9050602002016020810190611e329190612642565b612159565b80611e4181612850565b915050611e00565b6000546001600160a01b03163314611e735760405162461bcd60e51b8152600401610a53906127df565b601455565b6000546001600160a01b03163314611ea25760405162461bcd60e51b8152600401610a53906127df565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314611eed5760405162461bcd60e51b8152600401610a53906127df565b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff191690921790915591519081527f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163910160405180910390a150565b6000546001600160a01b03163314611f835760405162461bcd60e51b8152600401610a53906127df565b601055565b6000546001600160a01b03163314611fb25760405162461bcd60e51b8152600401610a53906127df565b600e55565b6001600160a01b0381166120235760405162461bcd60e51b815260206004820152602d60248201527f57686974654c6973743a5f61646457686974654c697374202d204e6f7420612060448201526c76616c6964206164647265737360981b6064820152608401610a53565b6001600160a01b03811660009081526004602052604090205460ff16156120ab5760405162461bcd60e51b815260206004820152603660248201527f57686974656c6973742d5f61646457686974656c69737465643a206163636f756044820152751b9d08185b1c9958591e481dda1a5d195b1a5cdd195960521b6064820152608401610a53565b6001600160a01b0381166000908152600460205260408120805460ff1916600117905560058054916120dc83612850565b90915550506006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b03841690811790915560405190917fcf1cca3d6456f2268db1b80986d584a1702c8c6acdd26fd41ce29f44a19fc2cd91a250565b6001600160a01b0381166121ca5760405162461bcd60e51b815260206004820152603260248201527f57686974654c6973743a5f72656d6f766557686974656c6973746564202d204e6044820152716f7420612076616c6964206164647265737360701b6064820152608401610a53565b6001600160a01b03811660009081526004602052604090205460ff16151560011461225d5760405162461bcd60e51b815260206004820152603960248201527f57686974656c6973742d5f72656d6f766557686974656c69737465643a20616360448201527f636f756e7420776173206e6f742077686974656c6973746564000000000000006064820152608401610a53565b6001600160a01b0381166000908152600460205260408120805460ff19169055600580549161228b83612881565b90915550506040516001600160a01b038216907fb4b1b6e4ef298ce17f0c4f14828a249dec837a6146d1ceae313c808d47cbe86390600090a250565b6000826122d657506000612349565b60006122e28385612898565b9050826122ef85836128b7565b146123465760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610a53565b90505b92915050565b600061234683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506125c5565b6002546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156123d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fd91906127ff565b111561247d5760025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af1158015612455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124799190612818565b5050565b6002546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156124cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f391906127ff565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401612436565b600061234683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506125fc565b60008061257383856128d9565b9050838110156123465760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610a53565b600081836125e65760405162461bcd60e51b8152600401610a5391906128f1565b5060006125f384866128b7565b95945050505050565b600081848411156126205760405162461bcd60e51b8152600401610a5391906128f1565b5060006125f38486612946565b6001600160a01b0381168114610c0057600080fd5b60006020828403121561265457600080fd5b81356123468161262d565b6000806040838503121561267257600080fd5b8235915060208301356126848161262d565b809150509250929050565b6000602082840312156126a157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156126e15781516001600160a01b0316875295820195908201906001016126bc565b509495945050505050565b60006101808e83528d60208401528c60408401528b60608401528a608084015289151560a08401528060c08401526127268184018a6126a8565b905082810360e084015261273a81896126a8565b915050856101008301528461012083015283610140830152826101608301529d9c50505050505050505050505050565b6000806020838503121561277d57600080fd5b823567ffffffffffffffff8082111561279557600080fd5b818501915085601f8301126127a957600080fd5b8135818111156127b857600080fd5b8660208260051b85010111156127cd57600080fd5b60209290920196919550909350505050565b60208082526006908201526510a7aba722a960d11b604082015260600190565b60006020828403121561281157600080fd5b5051919050565b60006020828403121561282a57600080fd5b8151801515811461234657600080fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128645761286461283a565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816128905761289061283a565b506000190190565b60008160001904831182151516156128b2576128b261283a565b500290565b6000826128d457634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156128ec576128ec61283a565b500190565b600060208083528351808285015260005b8181101561291e57858101830151858201604001528201612902565b81811115612930576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156129585761295861283a565b50039056fe6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885aa26469706673582212205c77ccdafb5af2bbdca2a069167d6d1c97097feed227f5f3b8664c702ecca11064736f6c634300080b0033","devdoc":{"kind":"dev","methods":{"addWhitelisted(address)":{"details":"Add an account to the whitelist,","params":{"user":"The address of the investor"}},"addWhitelistedMultiple(address[])":{"params":{"users":"The accounts to be whitelisted in batch"}},"isWhitelisted(address)":{"params":{"user":"The account to be checked"},"returns":{"_0":"true if the account is whitelisted. Otherwise, false."}},"removeWhitelisted(address)":{"params":{"user":"The address of the investor that needs to be removed"}},"removeWhitelistedMultiple(address[])":{"params":{"users":"The accounts to be whitelisted in batch"}}},"version":1},"userdoc":{"kind":"user","methods":{"addWhitelistedMultiple(address[])":{"notice":"This function allows to whitelist investors in batch with control of number of iterations"},"isWhitelisted(address)":{"notice":"Check if an account is whitelisted or not"},"removeWhitelisted(address)":{"notice":"Remove an account from the whitelist, calling the corresponding internal function"},"removeWhitelistedMultiple(address[])":{"notice":"This function allows to whitelist investors in batch with control of number of iterations"}},"version":1},"storageLayout":{"storage":[{"astId":427,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":431,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"authorizations","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":576,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"MambaContract","offset":0,"slot":"2","type":"t_contract(IBEP20)89"},{"astId":578,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"mambapadAddress","offset":0,"slot":"3","type":"t_address"},{"astId":582,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"_isWhitelisted","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":584,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"totalWhiteListed","offset":0,"slot":"5","type":"t_uint256"},{"astId":587,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"holdersIndex","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":598,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"investors","offset":0,"slot":"7","type":"t_array(t_address)dyn_storage"},{"astId":601,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"totalAmountForPrivateSale","offset":0,"slot":"8","type":"t_uint256"},{"astId":604,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"rateMAMPperBNB","offset":0,"slot":"9","type":"t_uint256"},{"astId":609,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"etherDenominator","offset":0,"slot":"10","type":"t_uint256"},{"astId":614,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"mampDenominator","offset":0,"slot":"11","type":"t_uint256"},{"astId":619,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"rateDenominator","offset":0,"slot":"12","type":"t_uint256"},{"astId":622,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"percDenominator","offset":0,"slot":"13","type":"t_uint256"},{"astId":625,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"cliff","offset":0,"slot":"14","type":"t_uint256"},{"astId":628,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"duration","offset":0,"slot":"15","type":"t_uint256"},{"astId":631,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"TGE","offset":0,"slot":"16","type":"t_uint256"},{"astId":634,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"PercPerMonth","offset":0,"slot":"17","type":"t_uint256"},{"astId":637,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"isListedonPancakeswap","offset":0,"slot":"18","type":"t_bool"},{"astId":640,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"start_time","offset":0,"slot":"19","type":"t_uint256"},{"astId":643,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"end_time","offset":0,"slot":"20","type":"t_uint256"},{"astId":646,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"min_buy_amount_estimate","offset":0,"slot":"21","type":"t_uint256"},{"astId":649,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"max_buy_amount_estimate","offset":0,"slot":"22","type":"t_uint256"},{"astId":652,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"depositedBNB","offset":0,"slot":"23","type":"t_uint256"},{"astId":657,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"investorInfos","offset":0,"slot":"24","type":"t_mapping(t_address,t_struct(InvestorInfo)573_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IBEP20)89":{"encoding":"inplace","label":"contract IBEP20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(InvestorInfo)573_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct PrivateSale.InvestorInfo)","numberOfBytes":"32","value":"t_struct(InvestorInfo)573_storage"},"t_struct(InvestorInfo)573_storage":{"encoding":"inplace","label":"struct PrivateSale.InvestorInfo","members":[{"astId":560,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"joinedDate","offset":0,"slot":"0","type":"t_uint256"},{"astId":562,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"_cliff","offset":0,"slot":"1","type":"t_uint256"},{"astId":564,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"joinedBNBAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":566,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"totalReceivableAmount","offset":0,"slot":"3","type":"t_uint256"},{"astId":568,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"receivableAmount","offset":0,"slot":"4","type":"t_uint256"},{"astId":570,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"currentAmount","offset":0,"slot":"5","type":"t_uint256"},{"astId":572,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"releaseState","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},253:function(e){e.exports=JSON.parse('{"address":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_maxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_maxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"approveMax","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyCooldownEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkSwapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountPercentage","type":"uint256"}],"name":"clearStuckBalance_sender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint8","name":"_interval","type":"uint8"}],"name":"cooldownEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownTimerInterval","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deadBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"distributor","outputs":[{"internalType":"contract DividendDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isDividendExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isNotInSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTimelockExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTxLimitExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_launchblock","type":"uint256"}],"name":"launchStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualSync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256[]","name":"tokens","type":"uint256[]"}],"name":"multiTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"multiTransfer_fixed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pairContract","outputs":[{"internalType":"contract InterfaceLP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"rebase_updatebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"rescueToken","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"contract IDEXRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPeriod","type":"uint256"},{"internalType":"uint256","name":"_minDistribution","type":"uint256"}],"name":"setDistributionCriteria","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gas","type":"uint256"}],"name":"setDistributorSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_treasureFee","type":"uint256"},{"internalType":"uint256","name":"_buyReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_sellReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_feeDenominator","type":"uint256"}],"name":"setFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsDividendExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTimelockExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTxLimitExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"setLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTXPercentage_base1000","type":"uint256"}],"name":"setMaxTxPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxWallPercent_base1000","type":"uint256"}],"name":"setMaxWalletPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_enabled","type":"bool"},{"internalType":"uint256","name":"_percentage_base10000","type":"uint256"}],"name":"setSwapBackSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint256","name":"_deadBlocks","type":"uint256"}],"name":"tradingStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"adr","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasureFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","receipt":{"to":null,"from":"0xF82F63a0a80782DA349d2bFE3f53D23308F82212","contractAddress":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","transactionIndex":4,"gasUsed":"7666165","logsBloom":"0xblockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762","transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","logs":[{"transactionIndex":4,"blockNumber":15581319,"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","address":"0xB7926C0430Afb07AA7DEfDE6DA862aE0Bde767bc","topics":["0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","0x0000000000000000000000008ef2e8f121b6316e10c71df96fe19a5031940b70","0x000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd"],"data":"0x00000000000000000000000035024147e119eed23eb13a2e2605b40efcf69ed900000000000000000000000000000000000000000000000000000000000184dc","logIndex":15,"blockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762"},{"transactionIndex":4,"blockNumber":15581319,"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","address":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x000000000000000000000000f82f63a0a80782da349d2bfe3f53d23308f82212"],"data":"0x000000000000000000000000000000000000000000000000002386f26fc10000","logIndex":16,"blockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762"}],"blockNumber":15581319,"cumulativeGasUsed":"8317207","status":1,"byzantium":true},"args":[],"solcInputHash":"a9285166ced9bb4ce8f79cdf2f241d39","metadata":"{\\"compiler\\":{\\"version\\":\\"0.7.6+commit.7338295f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"_maxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_maxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"approveMax\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"authorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyCooldownEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkSwapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amountPercentage\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"clearStuckBalance_sender\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"_interval\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"cooldownEnabled\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"cooldownTimerInterval\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"deadBlocks\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"distributor\\",\\"outputs\\":[{\\"internalType\\":\\"contract DividendDistributor\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"feeDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getOwner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isAuthorized\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isDividendExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isFeeExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isNotInSwap\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTimelockExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTxLimitExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_launchblock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"launchStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"launchedAt\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"manualSync\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"multiTransfer\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"multiTransfer_fixed\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pair\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pairContract\\",\\"outputs\\":[{\\"internalType\\":\\"contract InterfaceLP\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"}],\\"name\\":\\"rebase_updatebalance\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"rescueToken\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"router\\",\\"outputs\\":[{\\"internalType\\":\\"contract IDEXRouter\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"sellReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minPeriod\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minDistribution\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributionCriteria\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gas\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributorSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_treasureFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_buyReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_sellReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_feeDenominator\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setFees\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsDividendExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsFeeExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTimelockExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTxLimitExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_address\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxTXPercentage_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxTxPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxWallPercent_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxWalletPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_enabled\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_percentage_base10000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setSwapBackSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"tradingOpen\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_deadBlocks\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"tradingStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address payable\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"treasureFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"unauthorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"stateMutability\\":\\"payable\\",\\"type\\":\\"receive\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/Mambapad.sol\\":\\"Mambapad\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/Mambapad.sol\\":{\\"content\\":\\"/**\\\\n *Submitted for verification at BscScan.com on 2022-01-05\\\\n */\\\\n\\\\n// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity ^0.7.4;\\\\n\\\\nlibrary SafeMath {\\\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    uint256 c = a + b;\\\\n    require(c >= a, \'SafeMath: addition overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return sub(a, b, \'SafeMath: subtraction overflow\');\\\\n  }\\\\n\\\\n  function sub(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b <= a, errorMessage);\\\\n    uint256 c = a - b;\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    if (a == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 c = a * b;\\\\n    require(c / a == b, \'SafeMath: multiplication overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return div(a, b, \'SafeMath: division by zero\');\\\\n  }\\\\n\\\\n  function div(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b > 0, errorMessage);\\\\n    uint256 c = a / b;\\\\n    return c;\\\\n  }\\\\n}\\\\n\\\\nlibrary SafeMathInt {\\\\n  int256 private constant MIN_INT256 = int256(1) << 255;\\\\n  int256 private constant MAX_INT256 = ~(int256(1) << 255);\\\\n\\\\n  function mul(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a * b;\\\\n\\\\n    require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\\\\n    require((b == 0) || (c / b == a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(int256 a, int256 b) internal pure returns (int256) {\\\\n    require(b != -1 || a != MIN_INT256);\\\\n\\\\n    return a / b;\\\\n  }\\\\n\\\\n  function sub(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a - b;\\\\n    require((b >= 0 && c <= a) || (b < 0 && c > a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function add(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a + b;\\\\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function abs(int256 a) internal pure returns (int256) {\\\\n    require(a != MIN_INT256);\\\\n    return a < 0 ? -a : a;\\\\n  }\\\\n}\\\\n\\\\n/**\\\\n * BEP20 standard interface.\\\\n */\\\\ninterface IBEP20 {\\\\n  function totalSupply() external view returns (uint256);\\\\n\\\\n  function decimals() external view returns (uint8);\\\\n\\\\n  function symbol() external view returns (string memory);\\\\n\\\\n  function name() external view returns (string memory);\\\\n\\\\n  function getOwner() external view returns (address);\\\\n\\\\n  function balanceOf(address account) external view returns (uint256);\\\\n\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n  function allowance(address _owner, address spender) external view returns (uint256);\\\\n\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external returns (bool);\\\\n\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\\\nabstract contract Auth {\\\\n  address internal owner;\\\\n  mapping(address => bool) internal authorizations;\\\\n\\\\n  constructor(address _owner) {\\\\n    owner = _owner;\\\\n    authorizations[_owner] = true;\\\\n  }\\\\n\\\\n  modifier onlyOwner() {\\\\n    require(isOwner(msg.sender), \'!OWNER\');\\\\n    _;\\\\n  }\\\\n\\\\n  modifier authorized() {\\\\n    require(isAuthorized(msg.sender), \'!AUTHORIZED\');\\\\n    _;\\\\n  }\\\\n\\\\n  function authorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = true;\\\\n  }\\\\n\\\\n  function unauthorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = false;\\\\n  }\\\\n\\\\n  function isOwner(address account) public view returns (bool) {\\\\n    return account == owner;\\\\n  }\\\\n\\\\n  function isAuthorized(address adr) public view returns (bool) {\\\\n    return authorizations[adr];\\\\n  }\\\\n\\\\n  function transferOwnership(address payable adr) public onlyOwner {\\\\n    owner = adr;\\\\n    authorizations[adr] = true;\\\\n    emit OwnershipTransferred(adr);\\\\n  }\\\\n\\\\n  event OwnershipTransferred(address owner);\\\\n}\\\\n\\\\ninterface IDEXFactory {\\\\n  function createPair(address tokenA, address tokenB) external returns (address pair);\\\\n}\\\\n\\\\ninterface InterfaceLP {\\\\n  function sync() external;\\\\n}\\\\n\\\\ninterface IDEXRouter {\\\\n  function factory() external pure returns (address);\\\\n\\\\n  function WETH() external pure returns (address);\\\\n\\\\n  function addLiquidity(\\\\n    address tokenA,\\\\n    address tokenB,\\\\n    uint256 amountADesired,\\\\n    uint256 amountBDesired,\\\\n    uint256 amountAMin,\\\\n    uint256 amountBMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    returns (\\\\n      uint256 amountA,\\\\n      uint256 amountB,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function addLiquidityETH(\\\\n    address token,\\\\n    uint256 amountTokenDesired,\\\\n    uint256 amountTokenMin,\\\\n    uint256 amountETHMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    payable\\\\n    returns (\\\\n      uint256 amountToken,\\\\n      uint256 amountETH,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n\\\\n  function swapExactETHForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external payable;\\\\n\\\\n  function swapExactTokensForETHSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n}\\\\n\\\\ninterface IDividendDistributor {\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external;\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external;\\\\n\\\\n  function deposit() external payable;\\\\n\\\\n  function process(uint256 gas) external;\\\\n}\\\\n\\\\ncontract DividendDistributor is IDividendDistributor {\\\\n  using SafeMath for uint256;\\\\n\\\\n  address _token;\\\\n\\\\n  struct Share {\\\\n    uint256 amount;\\\\n    uint256 totalExcluded;\\\\n    uint256 totalRealised;\\\\n  }\\\\n\\\\n//   IBEP20 RWRD = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\\\\n  IBEP20 RWRD = IBEP20(0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47);\\\\n  //address WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\\\\n  IDEXRouter router;\\\\n\\\\n  address[] shareholders;\\\\n  mapping(address => uint256) shareholderIndexes;\\\\n  mapping(address => uint256) shareholderClaims;\\\\n\\\\n  mapping(address => Share) public shares;\\\\n\\\\n  uint256 public totalShares;\\\\n  uint256 public totalDividends;\\\\n  uint256 public totalDistributed;\\\\n  uint256 public dividendsPerShare;\\\\n  uint256 public dividendsPerShareAccuracyFactor = 10**36;\\\\n\\\\n  uint256 public minPeriod = 45 * 60;\\\\n  uint256 public minDistribution = (7 / 1000) * (10**8);\\\\n\\\\n  uint256 currentIndex;\\\\n\\\\n  bool initialized;\\\\n  modifier initialization() {\\\\n    require(!initialized);\\\\n    _;\\\\n    initialized = true;\\\\n  }\\\\n\\\\n  modifier onlyToken() {\\\\n    require(msg.sender == _token);\\\\n    _;\\\\n  }\\\\n\\\\n  constructor(address _router) {\\\\n    // router = _router != address(0) ? IDEXRouter(_router) : IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\\\n    router = _router != address(0) ? IDEXRouter(_router) : IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\\\n    _token = msg.sender;\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external override onlyToken {\\\\n    minPeriod = _minPeriod;\\\\n    minDistribution = _minDistribution;\\\\n  }\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external override onlyToken {\\\\n    if (shares[shareholder].amount > 0) {\\\\n      distributeDividend(shareholder);\\\\n    }\\\\n\\\\n    if (amount > 0 && shares[shareholder].amount == 0) {\\\\n      addShareholder(shareholder);\\\\n    } else if (amount == 0 && shares[shareholder].amount > 0) {\\\\n      removeShareholder(shareholder);\\\\n    }\\\\n\\\\n    totalShares = totalShares.sub(shares[shareholder].amount).add(amount);\\\\n    shares[shareholder].amount = amount;\\\\n    shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n  }\\\\n\\\\n  function deposit() external payable override onlyToken {\\\\n    uint256 balanceBefore = RWRD.balanceOf(address(this));\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = WBNB;\\\\n    path[1] = address(RWRD);\\\\n\\\\n    router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: msg.value}(\\\\n      0,\\\\n      path,\\\\n      address(this),\\\\n      block.timestamp\\\\n    );\\\\n\\\\n    uint256 amount = RWRD.balanceOf(address(this)).sub(balanceBefore);\\\\n\\\\n    totalDividends = totalDividends.add(amount);\\\\n    dividendsPerShare = dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares));\\\\n  }\\\\n\\\\n  function process(uint256 gas) external override onlyToken {\\\\n    uint256 shareholderCount = shareholders.length;\\\\n\\\\n    if (shareholderCount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 gasUsed = 0;\\\\n    uint256 gasLeft = gasleft();\\\\n\\\\n    uint256 iterations = 0;\\\\n\\\\n    while (gasUsed < gas && iterations < shareholderCount) {\\\\n      if (currentIndex >= shareholderCount) {\\\\n        currentIndex = 0;\\\\n      }\\\\n\\\\n      if (shouldDistribute(shareholders[currentIndex])) {\\\\n        distributeDividend(shareholders[currentIndex]);\\\\n      }\\\\n\\\\n      gasUsed = gasUsed.add(gasLeft.sub(gasleft()));\\\\n      gasLeft = gasleft();\\\\n      currentIndex++;\\\\n      iterations++;\\\\n    }\\\\n  }\\\\n\\\\n  function shouldDistribute(address shareholder) internal view returns (bool) {\\\\n    return\\\\n      shareholderClaims[shareholder] + minPeriod < block.timestamp && getUnpaidEarnings(shareholder) > minDistribution;\\\\n  }\\\\n\\\\n  function distributeDividend(address shareholder) internal {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 amount = getUnpaidEarnings(shareholder);\\\\n    if (amount > 0) {\\\\n      totalDistributed = totalDistributed.add(amount);\\\\n      RWRD.transfer(shareholder, amount);\\\\n      shareholderClaims[shareholder] = block.timestamp;\\\\n      shares[shareholder].totalRealised = shares[shareholder].totalRealised.add(amount);\\\\n      shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n    }\\\\n  }\\\\n\\\\n  function claimDividend() external {\\\\n    distributeDividend(msg.sender);\\\\n  }\\\\n\\\\n  function getUnpaidEarnings(address shareholder) public view returns (uint256) {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 shareholderTotalDividends = getCumulativeDividends(shares[shareholder].amount);\\\\n    uint256 shareholderTotalExcluded = shares[shareholder].totalExcluded;\\\\n\\\\n    if (shareholderTotalDividends <= shareholderTotalExcluded) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    return shareholderTotalDividends.sub(shareholderTotalExcluded);\\\\n  }\\\\n\\\\n  function getCumulativeDividends(uint256 share) internal view returns (uint256) {\\\\n    return share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor);\\\\n  }\\\\n\\\\n  function addShareholder(address shareholder) internal {\\\\n    shareholderIndexes[shareholder] = shareholders.length;\\\\n    shareholders.push(shareholder);\\\\n  }\\\\n\\\\n  function removeShareholder(address shareholder) internal {\\\\n    shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length - 1];\\\\n    shareholderIndexes[shareholders[shareholders.length - 1]] = shareholderIndexes[shareholder];\\\\n    shareholders.pop();\\\\n  }\\\\n}\\\\n\\\\ncontract Mambapad is IBEP20, Auth {\\\\n  using SafeMath for uint256;\\\\n  using SafeMathInt for int256;\\\\n\\\\n//   address WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\\\\n  address DEAD = 0x000000000000000000000000000000000000dEaD;\\\\n  address ZERO = 0x0000000000000000000000000000000000000000;\\\\n\\\\n  string constant _name = \'Mambapad\';\\\\n  string constant _symbol = \'MAMP\';\\\\n  uint8 constant _decimals = 8;\\\\n\\\\n  mapping(address => uint256) _rBalance;\\\\n  mapping(address => mapping(address => uint256)) _allowances;\\\\n\\\\n  mapping(address => bool) public isFeeExempt;\\\\n  mapping(address => bool) public isTxLimitExempt;\\\\n  mapping(address => bool) public isTimelockExempt;\\\\n  mapping(address => bool) public isDividendExempt;\\\\n\\\\n  uint256 public treasureFee = 3; // for marketing & development & updating\\\\n  uint256 public buyReflectionFee = 3;\\\\n  uint256 public sellReflectionFee = 6;\\\\n  uint256 public feeDenominator = 100;\\\\n\\\\n  uint256 private totalReflectionFeeAmount;\\\\n  uint256 private totalFeeAmount;\\\\n\\\\n  uint256 public deadBlocks = 2;\\\\n  uint256 public launchedAt = 0;\\\\n\\\\n  IDEXRouter public router;\\\\n  address public pair;\\\\n  InterfaceLP public pairContract;\\\\n\\\\n  bool public tradingOpen = false;\\\\n\\\\n  DividendDistributor public distributor;\\\\n  uint256 distributorGas = 500000;\\\\n\\\\n  bool public buyCooldownEnabled = false;\\\\n  uint8 public cooldownTimerInterval = 5;\\\\n  mapping(address => uint256) private cooldownTimer;\\\\n\\\\n  bool public swapEnabled = false;\\\\n  bool inSwap;\\\\n  modifier swapping() {\\\\n    inSwap = true;\\\\n    _;\\\\n    inSwap = false;\\\\n  }\\\\n\\\\n  // event CaliforniaCheckin(address guest, uint256 rentPaid);\\\\n\\\\n  uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 10**8 * 10**_decimals;\\\\n  uint256 public swapThreshold = (rSupply * 10) / 50000;\\\\n\\\\n  uint256 public rate;\\\\n  uint256 public _totalSupply;\\\\n  uint256 private constant MAX_UINT256 = ~uint256(0);\\\\n  uint256 private constant MAX_SUPPLY = ~uint128(0);\\\\n  uint256 private constant rSupply = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\\\\n\\\\n  // Max wallet & Transaction\\\\n  uint256 public _maxTxAmount = rSupply.div(100).mul(2);\\\\n  uint256 public _maxWalletToken = rSupply.div(100).mul(3);\\\\n\\\\n  constructor() Auth(msg.sender) {\\\\n    // router = IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\\\n    router = IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\\\n    pair = IDEXFactory(router.factory()).createPair(WBNB, address(this));\\\\n    _allowances[address(this)][address(router)] = uint256(-1);\\\\n\\\\n    pairContract = InterfaceLP(pair);\\\\n    _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\\\\n    rate = rSupply.div(_totalSupply);\\\\n\\\\n    distributor = new DividendDistributor(address(router));\\\\n\\\\n    isFeeExempt[msg.sender] = true;\\\\n    isTxLimitExempt[msg.sender] = true;\\\\n\\\\n    isTimelockExempt[msg.sender] = true;\\\\n    isTimelockExempt[DEAD] = true;\\\\n    isTimelockExempt[address(this)] = true;\\\\n\\\\n    isDividendExempt[pair] = true;\\\\n    isDividendExempt[address(this)] = true;\\\\n    isDividendExempt[DEAD] = true;\\\\n\\\\n    _rBalance[msg.sender] = rSupply;\\\\n    emit Transfer(address(0), msg.sender, _totalSupply);\\\\n  }\\\\n\\\\n  receive() external payable {}\\\\n\\\\n  function totalSupply() external view override returns (uint256) {\\\\n    return _totalSupply;\\\\n  }\\\\n\\\\n  function decimals() external pure override returns (uint8) {\\\\n    return _decimals;\\\\n  }\\\\n\\\\n  function symbol() external pure override returns (string memory) {\\\\n    return _symbol;\\\\n  }\\\\n\\\\n  function name() external pure override returns (string memory) {\\\\n    return _name;\\\\n  }\\\\n\\\\n  function getOwner() external view override returns (address) {\\\\n    return owner;\\\\n  }\\\\n\\\\n  function balanceOf(address account) public view override returns (uint256) {\\\\n    return _rBalance[account].div(rate);\\\\n  }\\\\n\\\\n  function allowance(address holder, address spender) external view override returns (uint256) {\\\\n    return _allowances[holder][spender];\\\\n  }\\\\n\\\\n  function approve(address spender, uint256 amount) public override returns (bool) {\\\\n    _allowances[msg.sender][spender] = amount;\\\\n    emit Approval(msg.sender, spender, amount);\\\\n    return true;\\\\n  }\\\\n\\\\n  function approveMax(address spender) external returns (bool) {\\\\n    return approve(spender, uint256(-1));\\\\n  }\\\\n\\\\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\\\\n    return _transferFrom(msg.sender, recipient, amount);\\\\n  }\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external override returns (bool) {\\\\n    if (_allowances[sender][msg.sender] != uint256(-1)) {\\\\n      _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \'Insufficient Allowance\');\\\\n    }\\\\n\\\\n    return _transferFrom(sender, recipient, amount);\\\\n  }\\\\n\\\\n  function _transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    if (inSwap) {\\\\n      return _basicTransfer(sender, recipient, amount);\\\\n    }\\\\n\\\\n    if (!authorizations[sender] && !authorizations[recipient]) {\\\\n      require(tradingOpen, \'Trading not open yet\');\\\\n    }\\\\n\\\\n    uint256 rAmount = amount.mul(rate);\\\\n\\\\n    if (!authorizations[sender] && recipient != address(this) && recipient != address(DEAD) && recipient != pair) {\\\\n      uint256 heldTokens = balanceOf(recipient);\\\\n      require(\\\\n        (heldTokens + rAmount) <= _maxWalletToken,\\\\n        \'Total Holding is currently limited, you can not buy that much.\'\\\\n      );\\\\n    }\\\\n\\\\n    if (sender == pair && buyCooldownEnabled && !isTimelockExempt[recipient]) {\\\\n      require(cooldownTimer[recipient] < block.timestamp, \'buy Cooldown exists\');\\\\n      cooldownTimer[recipient] = block.timestamp + cooldownTimerInterval;\\\\n    }\\\\n\\\\n    // Checks max transaction limit\\\\n    checkTxLimit(sender, rAmount);\\\\n\\\\n    if (shouldSwapBack()) {\\\\n      swapBack();\\\\n    }\\\\n\\\\n    //Exchange tokens\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n\\\\n    uint256 amountReceived = (!shouldTakeFee(sender) || !shouldTakeFee(recipient))\\\\n      ? rAmount\\\\n      : takeFee(sender, rAmount, (recipient == pair));\\\\n    _rBalance[recipient] = _rBalance[recipient].add(amountReceived);\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[sender]) {\\\\n      try distributor.setShare(sender, balanceOf(sender)) {} catch {}\\\\n    }\\\\n\\\\n    if (!isDividendExempt[recipient]) {\\\\n      try distributor.setShare(recipient, balanceOf(recipient)) {} catch {}\\\\n    }\\\\n\\\\n    try distributor.process(distributorGas) {} catch {}\\\\n\\\\n    emit Transfer(sender, recipient, amountReceived.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  // Changed\\\\n\\\\n  function _basicTransfer(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    uint256 rAmount = amount.mul(rate);\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n    _rBalance[recipient] = _rBalance[recipient].add(rAmount);\\\\n    emit Transfer(sender, recipient, rAmount.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  function checkTxLimit(address sender, uint256 rAmount) internal view {\\\\n    require(rAmount <= _maxTxAmount || isTxLimitExempt[sender], \'TX Limit Exceeded\');\\\\n  }\\\\n\\\\n  function shouldTakeFee(address sender) internal view returns (bool) {\\\\n    return !isFeeExempt[sender];\\\\n  }\\\\n\\\\n  function takeFee(\\\\n    address sender,\\\\n    uint256 rAmount,\\\\n    bool isSell\\\\n  ) internal returns (uint256) {\\\\n    uint256 reflectionFee = buyReflectionFee;\\\\n    if (isSell) {\\\\n      reflectionFee = sellReflectionFee;\\\\n    }\\\\n\\\\n    uint256 totalFee = reflectionFee.add(treasureFee);\\\\n\\\\n    uint256 feeAmount = rAmount.div(feeDenominator).mul(totalFee);\\\\n\\\\n    if (!isSell && (launchedAt + deadBlocks) > block.number) {\\\\n      feeAmount = rAmount.div(100).mul(99);\\\\n    }\\\\n\\\\n    totalFeeAmount = totalFeeAmount.add(feeAmount);\\\\n    totalReflectionFeeAmount = totalReflectionFeeAmount.add(feeAmount.div(totalFee).mul(reflectionFee));\\\\n\\\\n    _rBalance[address(this)] = _rBalance[address(this)].add(feeAmount);\\\\n    emit Transfer(sender, address(this), feeAmount.div(rate));\\\\n\\\\n    return rAmount.sub(feeAmount);\\\\n  }\\\\n\\\\n  function shouldSwapBack() internal view returns (bool) {\\\\n    return msg.sender != pair && !inSwap && swapEnabled && _rBalance[address(this)] >= swapThreshold;\\\\n  }\\\\n\\\\n  function clearStuckBalance_sender(uint256 amountPercentage) external authorized {\\\\n    uint256 amountBNB = address(this).balance;\\\\n    payable(msg.sender).transfer((amountBNB * amountPercentage) / 100);\\\\n  }\\\\n\\\\n  // switch Trading\\\\n\\\\n  function tradingStatus(bool _status, uint256 _deadBlocks) public onlyOwner {\\\\n    tradingOpen = _status;\\\\n    if (tradingOpen && launchedAt == 0) {\\\\n      launchedAt = block.number;\\\\n      deadBlocks = _deadBlocks;\\\\n    }\\\\n  }\\\\n\\\\n  function launchStatus(uint256 _launchblock) public onlyOwner {\\\\n    launchedAt = _launchblock;\\\\n  }\\\\n\\\\n  function cooldownEnabled(bool _status, uint8 _interval) public onlyOwner {\\\\n    buyCooldownEnabled = _status;\\\\n    cooldownTimerInterval = _interval;\\\\n  }\\\\n\\\\n  // OK, check 3\\\\n  function swapBack() internal swapping {\\\\n    uint256 tokensToSell = swapThreshold.div(rate);\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = address(this);\\\\n    path[1] = WBNB;\\\\n\\\\n    uint256 balanceBefore = address(this).balance;\\\\n\\\\n    router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokensToSell, 0, path, address(this), block.timestamp);\\\\n\\\\n    uint256 amountBNB = address(this).balance.sub(balanceBefore);\\\\n\\\\n    if (totalFeeAmount != 0 && totalReflectionFeeAmount != 0) {\\\\n      uint256 amountBNBReflection = amountBNB.mul(totalReflectionFeeAmount).div(totalFeeAmount);\\\\n      try distributor.deposit{value: amountBNBReflection}() {} catch {}\\\\n      totalFeeAmount = 0;\\\\n      totalReflectionFeeAmount = 0;\\\\n    }\\\\n  }\\\\n\\\\n  function setIsDividendExempt(address holder, bool exempt) external authorized {\\\\n    require(holder != address(this) && holder != pair);\\\\n    isDividendExempt[holder] = exempt;\\\\n    if (exempt) {\\\\n      distributor.setShare(holder, 0);\\\\n    } else {\\\\n      distributor.setShare(holder, balanceOf(holder));\\\\n    }\\\\n  }\\\\n\\\\n  function setIsFeeExempt(address holder, bool exempt) external authorized {\\\\n    isFeeExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTxLimitExempt(address holder, bool exempt) external authorized {\\\\n    isTxLimitExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTimelockExempt(address holder, bool exempt) external authorized {\\\\n    isTimelockExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setFees(\\\\n    uint256 _treasureFee,\\\\n    uint256 _buyReflectionFee,\\\\n    uint256 _sellReflectionFee,\\\\n    uint256 _feeDenominator\\\\n  ) external authorized {\\\\n    treasureFee = _treasureFee;\\\\n    buyReflectionFee = _buyReflectionFee;\\\\n    sellReflectionFee = _sellReflectionFee;\\\\n    feeDenominator = _feeDenominator;\\\\n    uint256 totalFee = _treasureFee.add(sellReflectionFee);\\\\n    if (buyReflectionFee > sellReflectionFee) {\\\\n      totalFee.sub(sellReflectionFee).add(buyReflectionFee);\\\\n    }\\\\n    require(totalFee < feeDenominator / 3, \'Fees cannot be more than 33%\');\\\\n  }\\\\n\\\\n  function setSwapBackSettings(bool _enabled, uint256 _percentage_base10000) external authorized {\\\\n    swapEnabled = _enabled;\\\\n    swapThreshold = rSupply.div(10000).mul(_percentage_base10000);\\\\n  }\\\\n\\\\n  function manualSync() external {\\\\n    InterfaceLP(pair).sync();\\\\n  }\\\\n\\\\n  function setLP(address _address) external onlyOwner {\\\\n    pairContract = InterfaceLP(_address);\\\\n    isFeeExempt[_address];\\\\n  }\\\\n\\\\n  function isNotInSwap() external view returns (bool) {\\\\n    return !inSwap;\\\\n  }\\\\n\\\\n  function checkSwapThreshold() external view returns (uint256) {\\\\n    return swapThreshold.div(rate);\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external authorized {\\\\n    distributor.setDistributionCriteria(_minPeriod, _minDistribution);\\\\n  }\\\\n\\\\n  function setDistributorSettings(uint256 gas) external authorized {\\\\n    require(gas < 900000);\\\\n    distributorGas = gas;\\\\n  }\\\\n\\\\n  function rescueToken(address tokenAddress, uint256 tokens) public onlyOwner returns (bool success) {\\\\n    return IBEP20(tokenAddress).transfer(msg.sender, tokens);\\\\n  }\\\\n\\\\n  function checkMaxWalletToken() external view returns (uint256) {\\\\n    return _maxWalletToken.div(rate);\\\\n  }\\\\n\\\\n  function checkMaxTxAmount() external view returns (uint256) {\\\\n    return _maxTxAmount.div(rate);\\\\n  }\\\\n\\\\n  function setMaxWalletPercent_base1000(uint256 maxWallPercent_base1000) external onlyOwner {\\\\n    _maxWalletToken = rSupply.div(1000).mul(maxWallPercent_base1000);\\\\n  }\\\\n\\\\n  function setMaxTxPercent_base1000(uint256 maxTXPercentage_base1000) external onlyOwner {\\\\n    _maxTxAmount = rSupply.div(1000).mul(maxTXPercentage_base1000);\\\\n  }\\\\n\\\\n  /* Airdrop Begins */\\\\n\\\\n  function multiTransfer(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256[] calldata tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 801, \'GAS Error: max airdrop limit is 500 addresses\'); // to prevent overflow\\\\n    require(addresses.length == tokens.length, \'Mismatch between Address and token count\');\\\\n\\\\n    uint256 SCCC = 0;\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      SCCC = SCCC + tokens[i];\\\\n    }\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens[i]);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function multiTransfer_fixed(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256 tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 2001, \'GAS Error: max airdrop limit is 2000 addresses\'); // to prevent overflow\\\\n\\\\n    uint256 SCCC = tokens * addresses.length;\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function rebase_updatebalance(address[] calldata addresses) external onlyOwner {\\\\n    require(addresses.length < 5001, \'GAS Error: max address allowed is 5000\'); // to prevent out of gas & overflow error\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x08d2f5f09dbe58856c5dc28a32a73ce0625267199a9b40550a08b2e7c77b2a82\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60806040526002805473ae13d989dac2f0debff460ac112a837c89baa7cd6001600160a01b03199182161782556003805461dead90831617815560048054909216909155600b819055600c556006600d556064600e5560115560006012556015805460ff60a01b191690556207a1206017556018805461ffff1916610500179055601a805460ff1916905561c350668e63c1efd3ffff1904601b55620000df6002620000cb6064662386f26fc100006000195b06600019036200041360201b6200249c1790919060201c565b6200046660201b620024de1790919060201c565b601e55620000ff6003620000cb6064662386f26fc10000600019620000b2565b601f553480156200010f57600080fd5b50600080546001600160a01b0319908116339081178355825260016020818152604093849020805460ff191690921790915560138054909216739ac64cc6e4415144c455bd8e4837fea55603e5c31791829055825163c45a015560e01b815292516001600160a01b03929092169263c45a01559260048083019392829003018186803b1580156200019f57600080fd5b505afa158015620001b4573d6000803e3d6000fd5b505050506040513d6020811015620001cb57600080fd5b5051600254604080516364e329cb60e11b81526001600160a01b0392831660048201523060248201529051919092169163c9c653969160448083019260209291908290030181600087803b1580156200022357600080fd5b505af115801562000238573d6000803e3d6000fd5b505050506040513d60208110156200024f57600080fd5b5051601480546001600160a01b03199081166001600160a01b039384161782553060009081526006602090815260408083206013548716845290915290206000199081905591546015805491909416911617909155662386f26fc10000601d819055620002be918190620000b2565b601c556013546040516001600160a01b0390911690620002de906200056b565b6001600160a01b03909116815260405190819003602001906000f0801580156200030c573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03928316179055336000818152600760209081526040808320805460ff1990811660019081179092556008845282852080548216831790556009845282852080548216831790556003805488168652838620805483168417905530808752848720805484168517905560145489168752600a865284872080548416851790558652838620805483168417905554909616845281842080549096161790945582825260058152838220660e3d2cfe61ffff199055601d5484519081529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a362000579565b60006200045d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620004c460201b60201c565b90505b92915050565b600082620004775750600062000460565b828202828482816200048557fe5b04146200045d5760405162461bcd60e51b8152600401808060200182810382526021815260200180620047186021913960400191505060405180910390fd5b60008183620005545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000518578181015183820152602001620004fe565b50505050905090810190601f168015620005465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200056157fe5b0495945050505050565b610ebd806200385b83390190565b6132d280620005896000396000f3fe6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f51565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fbe565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611025565b34801561051357600080fd5b506103dd61102b565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611031565b34801561060357600080fd5b506103dd61134b565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611351565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611413565b34801561068d57600080fd5b506103dd611497565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b508035906020013561149d565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff1661154d565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115b6565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611622565b34801561076d57600080fd5b50610776611636565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163b565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118bf565b34801561085c57600080fd5b506103dd611986565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b031661198c565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a1565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119b6565b34801561090157600080fd5b5061090a611a36565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a45565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5a565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611acd565b3480156109d357600080fd5b506103dd611adb565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae1565b348015610a6357600080fd5b506103dd611c46565b348015610a7857600080fd5b506104de611c64565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c6d565b348015610ac857600080fd5b506103dd611ce0565b348015610add57600080fd5b506104de611cf9565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d02565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dfb565b348015610b6157600080fd5b50610776611e23565b348015610b7657600080fd5b506104a3611e31565b348015610b8b57600080fd5b506103dd611e9b565b348015610ba057600080fd5b506103dd611ea1565b348015610bb557600080fd5b506104de611ea7565b348015610bca57600080fd5b5061090a611eb6565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec5565b348015610c1257600080fd5b50610404611eda565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611ef8565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f40565b348015610c7b57600080fd5b5061090a611f9c565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fab565b348015610cc957600080fd5b506103dd611fb8565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd1565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b503561203b565b348015610d3b57600080fd5b506103dd61209e565b348015610d5057600080fd5b506103dd6120a4565b348015610d6557600080fd5b5061090a6120aa565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120b9565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e4565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b031661215b565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121bf565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612270565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123e6565b348015610ec357600080fd5b5061090a612459565b348015610ed857600080fd5b506103dd612468565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b031661246e565b348015610f2057600080fd5b506104de61248c565b601b5481565b60408051808201909152600881526713585b58985c185960c21b602082015290565b610f5a33611622565b610f94576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fb881610fb26103e8662386f26fc100006000195b06199061249c565b906124de565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103a33611622565b611074576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b45760405162461bcd60e51b815260040180806020018281038252602d81526020018061324a602d913960400191505060405180910390fd5b8281146110f25760405162461bcd60e51b81526004018080602001828103825260288152602001806131956028913960400191505060405180910390fd5b6000805b848110156111205783838281811061110a57fe5b60200291909101359290920191506001016110f6565b508061112b87611dfb565b101561117e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112ae576111c18787878481811061119957fe5b905060200201356001600160a01b03168686858181106111b557fe5b90506020020135612537565b50600a60008787848181106111d257fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112a6576016546001600160a01b03166314b6ca9687878481811061121957fe5b905060200201356001600160a01b031661124d89898681811061123857fe5b905060200201356001600160a01b0316611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129357600080fd5b505af19250505080156112a4575060015b505b600101611181565b506001600160a01b0386166000908152600a602052604090205460ff16611343576016546001600160a01b03166314b6ca96876112ea81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133057600080fd5b505af1925050508015611341575060015b505b505050505050565b600c5481565b6001600160a01b0383166000908152600660209081526040808320338452909152812054600019146113fe576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113d9918490612653565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6114098484846126ea565b90505b9392505050565b61141c33611622565b611456576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114845750601254155b15611493574360125560118190555b5050565b601c5481565b6114a63361246e565b6114e5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153957600080fd5b505af1158015611343573d6000803e3d6000fd5b61155633611622565b611590576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115bf33611622565b6115f9576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164433611622565b61167e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116be5760405162461bcd60e51b815260040180806020018281038252602e8152602001806131bd602e913960400191505060405180910390fd5b808202806116cb86611dfb565b101561171e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b838110156118275761174f8686868481811061173957fe5b905060200201356001600160a01b031685612537565b50600a600086868481811061176057fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff1661181f576016546001600160a01b03166314b6ca968686848181106117a757fe5b905060200201356001600160a01b03166117c688888681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561180c57600080fd5b505af192505050801561181d575060015b505b600101611721565b506001600160a01b0385166000908152600a602052604090205460ff166118b8576016546001600160a01b03166314b6ca968661186381611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118a957600080fd5b505af192505050801561134357505b5050505050565b60006118ca33611622565b611904576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195357600080fd5b505af1158015611967573d6000803e3d6000fd5b505050506040513d602081101561197d57600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119bf3361246e565b6119fe576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a31573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a633361246e565b611aa2576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061101f82600019610fbe565b600d5481565b611aea33611622565b611b24576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b645760405162461bcd60e51b81526004018080602001828103825260268152602001806132776026913960400191505060405180910390fd5b60005b81811015611a3157600a6000848484818110611b7f57fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c3e576016546001600160a01b03166314b6ca96848484818110611bc657fe5b905060200201356001600160a01b0316611be586868681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2b57600080fd5b505af1925050508015611c3c575060015b505b600101611b67565b6000611c5f601c54601e5461249c90919063ffffffff16565b905090565b60185460ff1681565b611c763361246e565b611cb5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c5f601c54601b5461249c90919063ffffffff16565b601a5460ff1681565b611d0b3361246e565b611d4a576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6a8584612c54565b9050600d54600c541115611d9b57611d99600c54611d93600d5484612cae90919063ffffffff16565b90612c54565b505b6003600e5481611da757fe5b0481106118b8576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161101f919061249c565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8157600080fd5b505af1158015611e95573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b60408051808201909152600481526304d414d560e41b602082015290565b611f0133611622565b611f3b576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f493361246e565b611f88576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9757600080fd5b601755565b6014546001600160a01b031681565b600061140c3384846126ea565b6000611c5f601c54601f5461249c90919063ffffffff16565b611fda33611622565b612014576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204433611622565b61207e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209881610fb26103e8662386f26fc10000600019610faa565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120ed3361246e565b61212c576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215481610fb2612710662386f26fc10000600019610faa565b601b555050565b61216433611622565b61219e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121c833611622565b612202576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b6122793361246e565b6122b8576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122df57506014546001600160a01b03838116911614155b6122e857600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff191682158015919091179091556123855760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236857600080fd5b505af115801561237c573d6000803e3d6000fd5b50505050611493565b6016546001600160a01b03166314b6ca96836123a081611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153957600080fd5b6123ef3361246e565b61242e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061140c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf0565b6000826124ed5750600061101f565b828202828482816124fa57fe5b041461140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806131eb6021913960400191505060405180910390fd5b60008061254f601c54846124de90919063ffffffff16565b90506125b78160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126539092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125e69082612c54565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263790859061249c565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126a757818101518382015260200161268f565b50505050905090810190601f1680156126d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff161561270f57612708848484612537565b905061140c565b6001600160a01b03841660009081526001602052604090205460ff1615801561275157506001600160a01b03831660009081526001602052604090205460ff16155b156127ab57601554600160a01b900460ff166127ab576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c2601c54846124de90919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127f757506001600160a01b0384163014155b801561281157506003546001600160a01b03858116911614155b801561282b57506014546001600160a01b03858116911614155b1561288257600061283b85611dfb565b9050601f5482820111156128805760405162461bcd60e51b815260040180806020018281038252603e81526020018061320c603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a1575060185460ff165b80156128c657506001600160a01b03841660009081526009602052604090205460ff16155b15612956576001600160a01b038416600090815260196020526040902054421161292d576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129608582612d55565b612968612dc3565b1561297557612975612e17565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129c7918390612653565b6001600160a01b0386166000908152600560205260408120919091556129ec86613048565b15806129fe57506129fc85613048565b155b612a2557601454612a2090879084906001600160a01b03898116911614613067565b612a27565b815b6001600160a01b038616600090815260056020526040902054909150612a4d9082612c54565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af4576016546001600160a01b03166314b6ca9687612a9b81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae157600080fd5b505af1925050508015612af2575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b88576016546001600160a01b03166314b6ca9686612b2f81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7557600080fd5b505af1925050508015612b86575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612bdb57600080fd5b505af1925050508015612bec575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c37601c548561249c90919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b60008282018381101561140c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061140c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612653565b60008183612d3f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126a757818101518382015260200161268f565b506000838581612d4b57fe5b0495945050505050565b601e5481111580612d7e57506001600160a01b03821660009081526008602052604090205460ff165b611493576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612de95750601a54610100900460ff16155b8015612df75750601a5460ff165b8015611c5f575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e39919061249c565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e6d57fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9857fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f32578181015183820152602001612f1a565b505050509050019650505050505050600060405180830381600087803b158015612f5b57600080fd5b505af1158015612f6f573d6000803e3d6000fd5b505050506000612f888247612cae90919063ffffffff16565b9050601054600014158015612f9e5750600f5415155b15613037576000612fc6601054612fc0600f54856124de90919063ffffffff16565b9061249c565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301857600080fd5b505af19350505050801561302a575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c5460009082156130785750600d545b600061308f600b5483612c5490919063ffffffff16565b905060006130ac82610fb2600e548961249c90919063ffffffff16565b9050841580156130c157504360115460125401115b156130d9576130d66063610fb288606461249c565b90505b6010546130e69082612c54565b6010556131036130fa84610fb2848661249c565b600f5490612c54565b600f55306000908152600560205260409020546131209082612c54565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061316e90859061249c565b60408051918252519081900360200190a36131898682612cae565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212207ea858363a82299eb2f880e204366ae9651cdd893eafc422d640c17f990f0a9e64736f6c634300070600336080604052600180546001600160a01b0319908116738301f2213c0eed49a7e28ae4c3e91722919b8b47179091556002805490911673ae13d989dac2f0debff460ac112a837c89baa7cd1790556ec097ce7bc90715b34b9f1000000000600c55610a8c600d55620aae60600e5534801561007857600080fd5b50604051610ebd380380610ebd8339818101604052602081101561009b57600080fd5b50516001600160a01b0381166100c557739ac64cc6e4415144c455bd8e4837fea55603e5c36100c7565b805b600380546001600160a01b03929092166001600160a01b0319928316179055600080549091163317905550610dbc806101016000396000f3fe6080604052600436106100dd5760003560e01c8063ce7c2ac21161007f578063efca2eed11610059578063efca2eed14610254578063f0fc6bca14610269578063ffb2c4791461027e578063ffd49c84146102a8576100dd565b8063ce7c2ac2146101e6578063d0e30db014610237578063e2d2e2191461023f576100dd565b80632d48e896116100bb5780632d48e896146101775780633a98ef39146101a75780634fab0ae8146101bc578063997664d7146101d1576100dd565b806311ce023d146100e257806314b6ca961461010957806328fd319814610144575b600080fd5b3480156100ee57600080fd5b506100f76102bd565b60408051918252519081900360200190f35b34801561011557600080fd5b506101426004803603604081101561012c57600080fd5b506001600160a01b0381351690602001356102c3565b005b34801561015057600080fd5b506100f76004803603602081101561016757600080fd5b50356001600160a01b03166103e8565b34801561018357600080fd5b506101426004803603604081101561019a57600080fd5b5080359060200135610474565b3480156101b357600080fd5b506100f7610496565b3480156101c857600080fd5b506100f761049c565b3480156101dd57600080fd5b506100f76104a2565b3480156101f257600080fd5b506102196004803603602081101561020957600080fd5b50356001600160a01b03166104a8565b60408051938452602084019290925282820152519081900360600190f35b6101426104c9565b34801561024b57600080fd5b506100f761075b565b34801561026057600080fd5b506100f7610761565b34801561027557600080fd5b50610142610767565b34801561028a57600080fd5b50610142600480360360208110156102a157600080fd5b5035610772565b3480156102b457600080fd5b506100f7610854565b600c5481565b6000546001600160a01b031633146102da57600080fd5b6001600160a01b03821660009081526007602052604090205415610301576103018261085a565b60008111801561032757506001600160a01b038216600090815260076020526040902054155b1561033a5761033582610982565b61036d565b8015801561035f57506001600160a01b03821660009081526007602052604090205415155b1561036d5761036d826109e3565b6001600160a01b03821660009081526007602052604090205460085461039e91839161039891610ad0565b90610b1b565b6008556001600160a01b03821660009081526007602052604090208190556103c581610b75565b6001600160a01b0390921660009081526007602052604090206001019190915550565b6001600160a01b03811660009081526007602052604081205461040d5750600061046f565b6001600160a01b03821660009081526007602052604081205461042f90610b75565b6001600160a01b0384166000908152600760205260409020600101549091508082116104605760009250505061046f565b61046a8282610ad0565b925050505b919050565b6000546001600160a01b0316331461048b57600080fd5b600d91909155600e55565b60085481565b600e5481565b60095481565b60076020526000908152604090208054600182015460029092015490919083565b6000546001600160a01b031633146104e057600080fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b50516040805160028082526060820183529293506000929091602083019080368337505060025482519293506001600160a01b03169183915060009061059757fe5b6001600160a01b03928316602091820292909201015260018054835192169183919081106105c157fe5b6001600160a01b0392831660209182029290920181019190915260035460405163b6f9de9560e01b815260006004820181815230604484018190524260648501819052608060248601908152895160848701528951969098169763b6f9de9597349795968b969495939460a49091019187810191028083838b5b8381101561065357818101518382015260200161063b565b50505050905001955050505050506000604051808303818588803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b5050600154604080516370a0823160e01b815230600482015290516000955061071994508793506001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106e757600080fd5b505afa1580156106fb573d6000803e3d6000fd5b505050506040513d602081101561071157600080fd5b505190610ad0565b6009549091506107299082610b1b565b600955600854600c546107539161074a916107449085610b92565b90610beb565b600b5490610b1b565b600b55505050565b600b5481565b600a5481565b6107703361085a565b565b6000546001600160a01b0316331461078957600080fd5b600454806107975750610851565b6000805a905060005b84831080156107ae57508381105b1561084c5783600f54106107c2576000600f555b6107ee6004600f54815481106107d457fe5b6000918252602090912001546001600160a01b0316610c2d565b1561081f5761081f6004600f548154811061080557fe5b6000918252602090912001546001600160a01b031661085a565b61083461082d5a8490610ad0565b8490610b1b565b92505a600f80546001908101909155909250016107a0565b505050505b50565b600d5481565b6001600160a01b03811660009081526007602052604090205461087c57610851565b6000610887826103e8565b9050801561097e57600a5461089c9082610b1b565b600a556001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b505050506040513d602081101561091f57600080fd5b50506001600160a01b038216600090815260066020908152604080832042905560079091529020600201546109549082610b1b565b6001600160a01b03831660009081526007602052604090206002810191909155546103c590610b75565b5050565b600480546001600160a01b039092166000818152600560205260408120849055600184018355919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b0319169091179055565b6004805460001981019081106109f557fe5b60009182526020808320909101546001600160a01b0384811684526005909252604090922054600480549290931692918110610a2d57fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559183168152600591829052604081205460048054919392916000198101908110610a7b57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556004805480610aab57fe5b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000610b1283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c69565b90505b92915050565b600082820183811015610b12576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610b15600c54610744600b5485610b9290919063ffffffff16565b600082610ba157506000610b15565b82820282848281610bae57fe5b0414610b125760405162461bcd60e51b8152600401808060200182810382526021815260200180610d666021913960400191505060405180910390fd5b6000610b1283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d00565b600d546001600160a01b0382166000908152600660205260408120549091429101108015610b155750600e54610c62836103e8565b1192915050565b60008184841115610cf85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cbd578181015183820152602001610ca5565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d4f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cbd578181015183820152602001610ca5565b506000838581610d5b57fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220cdcae73dbeb71516a5cb20daf65ff9ea98155c9d5901fc65b10a700909db3bae64736f6c63430007060033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","deployedBytecode":"0x6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f51565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fbe565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611025565b34801561051357600080fd5b506103dd61102b565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611031565b34801561060357600080fd5b506103dd61134b565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611351565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611413565b34801561068d57600080fd5b506103dd611497565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b508035906020013561149d565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff1661154d565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115b6565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611622565b34801561076d57600080fd5b50610776611636565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163b565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118bf565b34801561085c57600080fd5b506103dd611986565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b031661198c565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a1565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119b6565b34801561090157600080fd5b5061090a611a36565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a45565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5a565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611acd565b3480156109d357600080fd5b506103dd611adb565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae1565b348015610a6357600080fd5b506103dd611c46565b348015610a7857600080fd5b506104de611c64565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c6d565b348015610ac857600080fd5b506103dd611ce0565b348015610add57600080fd5b506104de611cf9565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d02565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dfb565b348015610b6157600080fd5b50610776611e23565b348015610b7657600080fd5b506104a3611e31565b348015610b8b57600080fd5b506103dd611e9b565b348015610ba057600080fd5b506103dd611ea1565b348015610bb557600080fd5b506104de611ea7565b348015610bca57600080fd5b5061090a611eb6565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec5565b348015610c1257600080fd5b50610404611eda565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611ef8565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f40565b348015610c7b57600080fd5b5061090a611f9c565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fab565b348015610cc957600080fd5b506103dd611fb8565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd1565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b503561203b565b348015610d3b57600080fd5b506103dd61209e565b348015610d5057600080fd5b506103dd6120a4565b348015610d6557600080fd5b5061090a6120aa565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120b9565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e4565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b031661215b565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121bf565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612270565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123e6565b348015610ec357600080fd5b5061090a612459565b348015610ed857600080fd5b506103dd612468565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b031661246e565b348015610f2057600080fd5b506104de61248c565b601b5481565b60408051808201909152600881526713585b58985c185960c21b602082015290565b610f5a33611622565b610f94576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fb881610fb26103e8662386f26fc100006000195b06199061249c565b906124de565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103a33611622565b611074576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b45760405162461bcd60e51b815260040180806020018281038252602d81526020018061324a602d913960400191505060405180910390fd5b8281146110f25760405162461bcd60e51b81526004018080602001828103825260288152602001806131956028913960400191505060405180910390fd5b6000805b848110156111205783838281811061110a57fe5b60200291909101359290920191506001016110f6565b508061112b87611dfb565b101561117e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112ae576111c18787878481811061119957fe5b905060200201356001600160a01b03168686858181106111b557fe5b90506020020135612537565b50600a60008787848181106111d257fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112a6576016546001600160a01b03166314b6ca9687878481811061121957fe5b905060200201356001600160a01b031661124d89898681811061123857fe5b905060200201356001600160a01b0316611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129357600080fd5b505af19250505080156112a4575060015b505b600101611181565b506001600160a01b0386166000908152600a602052604090205460ff16611343576016546001600160a01b03166314b6ca96876112ea81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133057600080fd5b505af1925050508015611341575060015b505b505050505050565b600c5481565b6001600160a01b0383166000908152600660209081526040808320338452909152812054600019146113fe576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113d9918490612653565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6114098484846126ea565b90505b9392505050565b61141c33611622565b611456576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114845750601254155b15611493574360125560118190555b5050565b601c5481565b6114a63361246e565b6114e5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153957600080fd5b505af1158015611343573d6000803e3d6000fd5b61155633611622565b611590576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115bf33611622565b6115f9576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164433611622565b61167e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116be5760405162461bcd60e51b815260040180806020018281038252602e8152602001806131bd602e913960400191505060405180910390fd5b808202806116cb86611dfb565b101561171e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b838110156118275761174f8686868481811061173957fe5b905060200201356001600160a01b031685612537565b50600a600086868481811061176057fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff1661181f576016546001600160a01b03166314b6ca968686848181106117a757fe5b905060200201356001600160a01b03166117c688888681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561180c57600080fd5b505af192505050801561181d575060015b505b600101611721565b506001600160a01b0385166000908152600a602052604090205460ff166118b8576016546001600160a01b03166314b6ca968661186381611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118a957600080fd5b505af192505050801561134357505b5050505050565b60006118ca33611622565b611904576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195357600080fd5b505af1158015611967573d6000803e3d6000fd5b505050506040513d602081101561197d57600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119bf3361246e565b6119fe576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a31573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a633361246e565b611aa2576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061101f82600019610fbe565b600d5481565b611aea33611622565b611b24576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b645760405162461bcd60e51b81526004018080602001828103825260268152602001806132776026913960400191505060405180910390fd5b60005b81811015611a3157600a6000848484818110611b7f57fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c3e576016546001600160a01b03166314b6ca96848484818110611bc657fe5b905060200201356001600160a01b0316611be586868681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2b57600080fd5b505af1925050508015611c3c575060015b505b600101611b67565b6000611c5f601c54601e5461249c90919063ffffffff16565b905090565b60185460ff1681565b611c763361246e565b611cb5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c5f601c54601b5461249c90919063ffffffff16565b601a5460ff1681565b611d0b3361246e565b611d4a576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6a8584612c54565b9050600d54600c541115611d9b57611d99600c54611d93600d5484612cae90919063ffffffff16565b90612c54565b505b6003600e5481611da757fe5b0481106118b8576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161101f919061249c565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8157600080fd5b505af1158015611e95573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b60408051808201909152600481526304d414d560e41b602082015290565b611f0133611622565b611f3b576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f493361246e565b611f88576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9757600080fd5b601755565b6014546001600160a01b031681565b600061140c3384846126ea565b6000611c5f601c54601f5461249c90919063ffffffff16565b611fda33611622565b612014576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204433611622565b61207e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209881610fb26103e8662386f26fc10000600019610faa565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120ed3361246e565b61212c576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215481610fb2612710662386f26fc10000600019610faa565b601b555050565b61216433611622565b61219e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121c833611622565b612202576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b6122793361246e565b6122b8576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122df57506014546001600160a01b03838116911614155b6122e857600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff191682158015919091179091556123855760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236857600080fd5b505af115801561237c573d6000803e3d6000fd5b50505050611493565b6016546001600160a01b03166314b6ca96836123a081611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153957600080fd5b6123ef3361246e565b61242e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061140c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf0565b6000826124ed5750600061101f565b828202828482816124fa57fe5b041461140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806131eb6021913960400191505060405180910390fd5b60008061254f601c54846124de90919063ffffffff16565b90506125b78160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126539092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125e69082612c54565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263790859061249c565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126a757818101518382015260200161268f565b50505050905090810190601f1680156126d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff161561270f57612708848484612537565b905061140c565b6001600160a01b03841660009081526001602052604090205460ff1615801561275157506001600160a01b03831660009081526001602052604090205460ff16155b156127ab57601554600160a01b900460ff166127ab576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c2601c54846124de90919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127f757506001600160a01b0384163014155b801561281157506003546001600160a01b03858116911614155b801561282b57506014546001600160a01b03858116911614155b1561288257600061283b85611dfb565b9050601f5482820111156128805760405162461bcd60e51b815260040180806020018281038252603e81526020018061320c603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a1575060185460ff165b80156128c657506001600160a01b03841660009081526009602052604090205460ff16155b15612956576001600160a01b038416600090815260196020526040902054421161292d576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129608582612d55565b612968612dc3565b1561297557612975612e17565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129c7918390612653565b6001600160a01b0386166000908152600560205260408120919091556129ec86613048565b15806129fe57506129fc85613048565b155b612a2557601454612a2090879084906001600160a01b03898116911614613067565b612a27565b815b6001600160a01b038616600090815260056020526040902054909150612a4d9082612c54565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af4576016546001600160a01b03166314b6ca9687612a9b81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae157600080fd5b505af1925050508015612af2575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b88576016546001600160a01b03166314b6ca9686612b2f81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7557600080fd5b505af1925050508015612b86575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612bdb57600080fd5b505af1925050508015612bec575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c37601c548561249c90919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b60008282018381101561140c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061140c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612653565b60008183612d3f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126a757818101518382015260200161268f565b506000838581612d4b57fe5b0495945050505050565b601e5481111580612d7e57506001600160a01b03821660009081526008602052604090205460ff165b611493576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612de95750601a54610100900460ff16155b8015612df75750601a5460ff165b8015611c5f575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e39919061249c565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e6d57fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9857fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f32578181015183820152602001612f1a565b505050509050019650505050505050600060405180830381600087803b158015612f5b57600080fd5b505af1158015612f6f573d6000803e3d6000fd5b505050506000612f888247612cae90919063ffffffff16565b9050601054600014158015612f9e5750600f5415155b15613037576000612fc6601054612fc0600f54856124de90919063ffffffff16565b9061249c565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301857600080fd5b505af19350505050801561302a575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c5460009082156130785750600d545b600061308f600b5483612c5490919063ffffffff16565b905060006130ac82610fb2600e548961249c90919063ffffffff16565b9050841580156130c157504360115460125401115b156130d9576130d66063610fb288606461249c565b90505b6010546130e69082612c54565b6010556131036130fa84610fb2848661249c565b600f5490612c54565b600f55306000908152600560205260409020546131209082612c54565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061316e90859061249c565b60408051918252519081900360200190a36131898682612cae565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212207ea858363a82299eb2f880e204366ae9651cdd893eafc422d640c17f990f0a9e64736f6c63430007060033","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":427,"contract":"contracts/Mambapad.sol:Mambapad","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":431,"contract":"contracts/Mambapad.sol:Mambapad","label":"authorizations","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1327,"contract":"contracts/Mambapad.sol:Mambapad","label":"WBNB","offset":0,"slot":"2","type":"t_address"},{"astId":1330,"contract":"contracts/Mambapad.sol:Mambapad","label":"DEAD","offset":0,"slot":"3","type":"t_address"},{"astId":1333,"contract":"contracts/Mambapad.sol:Mambapad","label":"ZERO","offset":0,"slot":"4","type":"t_address"},{"astId":1346,"contract":"contracts/Mambapad.sol:Mambapad","label":"_rBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":1352,"contract":"contracts/Mambapad.sol:Mambapad","label":"_allowances","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1356,"contract":"contracts/Mambapad.sol:Mambapad","label":"isFeeExempt","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":1360,"contract":"contracts/Mambapad.sol:Mambapad","label":"isTxLimitExempt","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":1364,"contract":"contracts/Mambapad.sol:Mambapad","label":"isTimelockExempt","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"},{"astId":1368,"contract":"contracts/Mambapad.sol:Mambapad","label":"isDividendExempt","offset":0,"slot":"10","type":"t_mapping(t_address,t_bool)"},{"astId":1371,"contract":"contracts/Mambapad.sol:Mambapad","label":"treasureFee","offset":0,"slot":"11","type":"t_uint256"},{"astId":1374,"contract":"contracts/Mambapad.sol:Mambapad","label":"buyReflectionFee","offset":0,"slot":"12","type":"t_uint256"},{"astId":1377,"contract":"contracts/Mambapad.sol:Mambapad","label":"sellReflectionFee","offset":0,"slot":"13","type":"t_uint256"},{"astId":1380,"contract":"contracts/Mambapad.sol:Mambapad","label":"feeDenominator","offset":0,"slot":"14","type":"t_uint256"},{"astId":1382,"contract":"contracts/Mambapad.sol:Mambapad","label":"totalReflectionFeeAmount","offset":0,"slot":"15","type":"t_uint256"},{"astId":1384,"contract":"contracts/Mambapad.sol:Mambapad","label":"totalFeeAmount","offset":0,"slot":"16","type":"t_uint256"},{"astId":1387,"contract":"contracts/Mambapad.sol:Mambapad","label":"deadBlocks","offset":0,"slot":"17","type":"t_uint256"},{"astId":1390,"contract":"contracts/Mambapad.sol:Mambapad","label":"launchedAt","offset":0,"slot":"18","type":"t_uint256"},{"astId":1392,"contract":"contracts/Mambapad.sol:Mambapad","label":"router","offset":0,"slot":"19","type":"t_contract(IDEXRouter)661"},{"astId":1394,"contract":"contracts/Mambapad.sol:Mambapad","label":"pair","offset":0,"slot":"20","type":"t_address"},{"astId":1396,"contract":"contracts/Mambapad.sol:Mambapad","label":"pairContract","offset":0,"slot":"21","type":"t_contract(InterfaceLP)564"},{"astId":1399,"contract":"contracts/Mambapad.sol:Mambapad","label":"tradingOpen","offset":20,"slot":"21","type":"t_bool"},{"astId":1401,"contract":"contracts/Mambapad.sol:Mambapad","label":"distributor","offset":0,"slot":"22","type":"t_contract(DividendDistributor)1314"},{"astId":1404,"contract":"contracts/Mambapad.sol:Mambapad","label":"distributorGas","offset":0,"slot":"23","type":"t_uint256"},{"astId":1407,"contract":"contracts/Mambapad.sol:Mambapad","label":"buyCooldownEnabled","offset":0,"slot":"24","type":"t_bool"},{"astId":1410,"contract":"contracts/Mambapad.sol:Mambapad","label":"cooldownTimerInterval","offset":1,"slot":"24","type":"t_uint8"},{"astId":1414,"contract":"contracts/Mambapad.sol:Mambapad","label":"cooldownTimer","offset":0,"slot":"25","type":"t_mapping(t_address,t_uint256)"},{"astId":1417,"contract":"contracts/Mambapad.sol:Mambapad","label":"swapEnabled","offset":0,"slot":"26","type":"t_bool"},{"astId":1419,"contract":"contracts/Mambapad.sol:Mambapad","label":"inSwap","offset":1,"slot":"26","type":"t_bool"},{"astId":1448,"contract":"contracts/Mambapad.sol:Mambapad","label":"swapThreshold","offset":0,"slot":"27","type":"t_uint256"},{"astId":1450,"contract":"contracts/Mambapad.sol:Mambapad","label":"rate","offset":0,"slot":"28","type":"t_uint256"},{"astId":1452,"contract":"contracts/Mambapad.sol:Mambapad","label":"_totalSupply","offset":0,"slot":"29","type":"t_uint256"},{"astId":1483,"contract":"contracts/Mambapad.sol:Mambapad","label":"_maxTxAmount","offset":0,"slot":"30","type":"t_uint256"},{"astId":1492,"contract":"contracts/Mambapad.sol:Mambapad","label":"_maxWalletToken","offset":0,"slot":"31","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(DividendDistributor)1314":{"encoding":"inplace","label":"contract DividendDistributor","numberOfBytes":"20"},"t_contract(IDEXRouter)661":{"encoding":"inplace","label":"contract IDEXRouter","numberOfBytes":"20"},"t_contract(InterfaceLP)564":{"encoding":"inplace","label":"contract InterfaceLP","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},265:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return re}));var a=n(2),b=n.n(a),i=n(188),r=n(196),d=n(193),s=n(37),o=n(233),f=n(52),c=n(64),u=n(204);function l(){var e=function(e,t){var n,a=Object(f.c)(),b=a.account,i=a.library;return n=b?null===i||void 0===i?void 0:i.getSigner(b):Object(u.a)(),new c.b(e,t,n)}(o.address,o.abi).functions;return{isOwner:e.isOwner,setStartTime:e.setStartTime,setEndTime:e.setEndTime,getInfo:e.getInfo,getInvestorInfo:e.getInvestorInfo,joinPool:e.joinPool,withdrawTGE:e.withdrawTGE,withdrawPerMonth:e.withdrawPerMonth}}var p=n(258),m=n(259),y=n(112),h=n(11);var v=n(5),T=n.n(v),x=n(31),w=n(234),j=n.n(w),g=n(230),_=n(231),M=n(232),O=n(266),S=n(260),I=n(53),A=n(73),P=n(217),B=n.n(P),k=function(e){var t=e.value;return Object(h.jsx)(h.Fragment,{children:Object(h.jsx)("div",{style:{color:"#ffa600"},children:Object(h.jsxs)("div",{style:{width:"fit-content"},children:["BNB: $",Object(h.jsx)(B.a,{start:t-.1,end:t,decimals:5})]})})})},D=n(201),E=n(254),N=function(e){e.size;return Object(h.jsxs)("div",{className:"social-links2",children:[Object(h.jsx)("a",{href:"https://twitter.com/mambapad_bsc",children:Object(h.jsx)(m.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://t.me/mambapad_official",children:Object(h.jsx)(y.e,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://t.me/mambapad_ann",children:Object(h.jsx)(y.e,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://medium.com/@mambapad",children:Object(h.jsx)(m.b,{className:"social-link"})}),Object(h.jsx)("a",{href:"mailto:support@mambapad.com",children:Object(h.jsx)(E.a,{className:"social-link"})})]})},C=n(198),F=n(49),R=(n(61),n(70),n(180),n(63)),W=Object(R.a)();new I.a.providers.JsonRpcProvider(W),n(253);var L=n(99),z=n(100),q=(n(101),z.c);function G(){var e=Object(z.b)();return{isAppLoading:q(L.b),dispatchLoading:function(){return e(Object(L.c)())},dispatchNotLoading:function(){return e(Object(L.d)())}}}var U=n(98),X=function(){var e=Object(a.useContext)(U.a);return{fastRefresh:e.fast,slowRefresh:e.slow}};function H(e){var t=e.pool,n=X().fastRefresh,b=l(),i=b.joinPool,r=b.getInfo,d=(b.getInvestorInfo,function(){var e=Object(f.c)(),t=e.account,n=e.library;return{account:t,getBalanceBNB:function(){var e=Object(x.a)(T.a.mark((function e(){var a;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null===n||void 0===n?void 0:n.getBalance(t);case 2:return a=e.sent,e.abrupt("return",a&&Object(F.b)(a));case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()}}()),o=d.account,c=d.getBalanceBNB,u=G(),p=(u.dispatchLoading,u.dispatchNotLoading,Object(a.useState)()),m=Object(s.a)(p,2),y=m[0],v=m[1],w=Object(a.useState)(0),P=Object(s.a)(w,2),B=P[0],E=P[1],R=Object(a.useState)(0),W=Object(s.a)(R,2),L=W[0],z=W[1],q=Object(a.useState)(""),U=Object(s.a)(q,2),H=U[0],J=U[1],Y=Object(a.useState)(!1),Z=Object(s.a)(Y,2),V=(Z[0],Z[1]),$=Object(a.useState)(""),K=Object(s.a)($,2),Q=K[0],ee=K[1],te=Object(a.useState)(""),ne=Object(s.a)(te,2),ae=ne[0],be=ne[1],ie=Object(a.useState)(""),re=Object(s.a)(ie,2),de=re[0],se=re[1],oe=Object(a.useState)([]),fe=Object(s.a)(oe,2),ce=(fe[0],fe[1],Object(a.useState)("")),ue=Object(s.a)(ce,2),le=(ue[0],ue[1],Object(a.useState)("")),pe=Object(s.a)(le,2),me=(pe[0],pe[1],Object(a.useState)("")),ye=Object(s.a)(me,2),he=ye[0],ve=ye[1],Te=Object(a.useState)(""),xe=Object(s.a)(Te,2),we=xe[0],je=xe[1],ge=Object(a.useState)(!1),_e=Object(s.a)(ge,2),Me=_e[0],Oe=_e[1],Se=Object(a.useState)(!1),Ie=Object(s.a)(Se,2),Ae=Ie[0],Pe=Ie[1],Be=Object(a.useState)(0),ke=Object(s.a)(Be,2),De=ke[0],Ee=ke[1],Ne=new Date(Q).toUTCString(),Ce=(new Date(ae).toUTCString(),Q-Date.now());Object(a.useEffect)((function(){(function(){var e=Object(x.a)(T.a.mark((function e(){var t;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("fetchhhhhhhhh"),c().then(J),e.next=4,r();case 4:(t=e.sent)&&(se(t),de.startingTime&&ee(1*de.startingTime.toString()*1e3),de.endingTime&&be(1*de.endingTime.toString()*1e3),de.mampAmountofContract&&ve(I.a.utils.formatUnits(de.mampAmountofContract.toString(),"0")),de.bnbAmountDepositedinContract&&je(I.a.utils.formatEther(de.bnbAmountDepositedinContract)),Ee(we/100*100));case 6:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}})()()}),[o,n]),Object(a.useEffect)((function(){console.log("priceeeeeeeeee");j.a.get("https://api.covalenthq.com/v1/pricing/historical_by_addresses_v2/1/USD/0xb8c77482e45f1f44de1745f52c74426c631bdd52/?quote-currency=USD&format=JSON&key=ckey_docs").then((function(e){e.data&&e.data.data.prices[0].prices[0].price&&v(e.data.data.prices[0].prices[0].price)})).catch((function(e){console.error("axios fetch error:",e.data)}))}),[y]);var Fe=function(){var e=Object(x.a)(T.a.mark((function e(){var t,n;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o){e.next=3;break}return Object(A.c)("Connect wallet"),e.abrupt("return");case 3:if("undefined"!==B){e.next=6;break}return Object(A.c)("Insert Amount"),e.abrupt("return");case 6:if(t=I.a.utils.parseUnits(B.toString(),"18"),n=1e4*Math.pow(10,8),Me){e.next=11;break}return Object(A.c)("You Should Wait Until Open Pool..."),e.abrupt("return");case 11:if(!(n>he)){e.next=14;break}return Object(A.c)("Sorry.. Not Enough MAMP IN POOL NOW.."),e.abrupt("return");case 14:if(0!==B&&"string"!==typeof B){e.next=17;break}return Object(A.c)("Please Insert Amount of BNB"),e.abrupt("return");case 17:if(!(B>2.4||B<.1)){e.next=20;break}return Object(A.c)("Min Amount: 0.1 BNB. Max Amount: 2.4 BNB"),e.abrupt("return");case 20:if(!(H<B)){e.next=23;break}return Object(A.c)("Sorry. Your Fund is not Enough... Check Wallet."),e.abrupt("return");case 23:return e.prev=23,console.log(t),e.next=27,i({value:t});case 27:Object(A.c)("successfully joined"),console.log("success"),e.next=34;break;case 31:e.prev=31,e.t0=e.catch(23),e.t0&&(console.log(e.t0),e.t0.data&&e.t0.data.message&&Object(A.c)(e.t0.data.message));case 34:case"end":return e.stop()}}),e,null,[[23,31]])})));return function(){return e.apply(this,arguments)}}();return setTimeout((function(){V(!0)}),Ce),Object(a.useEffect)((function(){console.log("timeeeeeeeeeeee"),localStorage.setItem("start_epoch_time",Q),localStorage.setItem("end_epoch_time",ae),Ce>0&&(Oe(!1),Pe(!1)),Q<Date.now()&&ae>Date.now()&&(Oe(!0),Pe(!1)),ae<Date.now()&&(Oe(!1),Pe(!0))}),[Ce]),Object(h.jsx)(h.Fragment,{children:Object(h.jsxs)("section",{className:"pool-card",children:[Object(h.jsxs)("div",{className:"pool-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"pool profile"})}),Object(h.jsxs)("div",{className:"pool-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsx)(D.a,{})]}),Object(h.jsx)("p",{style:{color:"orange"}})]}),Object(h.jsx)(N,{}),Object(h.jsx)("div",{className:"pool-card-body",children:Object(h.jsxs)("section",{children:[Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["MAMP AMOUNT:","  ",Object(h.jsx)("span",{style:{fontSize:"30px"},children:I.a.utils.formatUnits(1*he,"8")})," ","MAMP"," "]}),Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["BNB AMOUNT:"," ",Object(h.jsx)("span",{style:{fontSize:"30px"},children:we})," BNB"," "]}),Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["START: ",Object(h.jsx)("span",{style:{fontSize:"24px"},children:Ne})]}),!Me&&!Ae&&Object(h.jsxs)("h4",{style:{textAlign:"center"},children:[Object(h.jsx)("span",{children:"Pool will open after    "}),Object(h.jsx)("span",{style:{fontSize:"40px"},children:Object(h.jsx)(C.a,{date:1*localStorage.getItem("start_epoch_time"),fontSize:20,daysInHours:!0})})]}),Object(h.jsx)(k,{value:y}),Object(h.jsxs)(g.a,{style:{margin:"0px 0px 20px 0px",gap:10,alignItems:"center"},children:[Object(h.jsx)(_.a,{style:{padding:0,flex:1},children:Object(h.jsxs)(M.a,{className:"allocation-table",bordered:!0,hover:!0,variant:"dark",children:[Object(h.jsx)("thead",{children:Object(h.jsx)("tr",{children:Object(h.jsx)("th",{colSpan:"2",children:"ALLOCATION(BNB)"})})}),Object(h.jsxs)("tbody",{children:[Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"MIN"}),Object(h.jsx)("td",{children:t.min_allocation})]}),Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"MAX"}),Object(h.jsx)("td",{children:t.max_allocation})]})]}),Object(h.jsx)("thead",{children:Object(h.jsx)("tr",{children:Object(h.jsx)("th",{colSpan:"2",children:"PRICE(BMB/MAMP)"})})}),Object(h.jsxs)("tbody",{children:[Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"IDO"}),Object(h.jsx)("td",{children:t.ido_price})]}),Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"LISTING"}),Object(h.jsx)("td",{children:t.listing_price})]})]})]})}),Object(h.jsxs)(_.a,{style:{padding:0,flex:1},children:[Object(h.jsx)("h3",{style:{marginBottom:3,fontSize:14},children:"AMOUNT(BNB)"}),Object(h.jsx)(O.a.Control,{style:{marginBottom:"20px"},required:!0,value:B,type:"number",placeholder:"BNB",onChange:function(e){if(""===e.target.value)E(""),z("");else{var n=1*e.target.value;E(n),z(n/t.ido_price)}}}),Object(h.jsx)("div",{className:"join-button",children:Object(h.jsx)("button",{className:"poolcard-button",onClick:Fe,children:"JOIN POOL"})}),Object(h.jsx)("h3",{style:{marginBottom:3,marginTop:70,fontSize:14},children:"AMOUNT(MAMP)"}),Object(h.jsx)(O.a.Control,{type:"number",value:L,placeholder:"MAMP",onChange:function(e){if(""===e.target.value)E(""),z("");else{var n=1*e.target.value;z(n),E(n*t.ido_price)}}})]})]}),Object(h.jsx)(S.a,{animated:!0,now:De,variant:"secondary",label:"".concat(De,"%"),style:{background:"orange"}}),Object(h.jsxs)(g.a,{style:{marginTop:"30px"},children:[Me&&Object(h.jsx)("h3",{style:{marginBottom:0,fontSize:"24px"},children:"WILL LIVE FOR"}),Me&&Object(h.jsx)("div",{style:{fontSize:"2em"},children:Object(h.jsx)(C.a,{date:1*localStorage.getItem("end_epoch_time"),autoStart:function(){},onComplete:function(){}})}),Ae&&Object(h.jsx)("h3",{style:{marginBottom:0,fontSize:"44px"},children:"CLOSED!!"})]})]})})]})})}var J=n(186),Y=n(199),Z=function(){var e=Object(a.useState)(Date.now()),t=Object(s.a)(e,2);t[0],t[1];return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-open",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",style:{marginTop:40},children:"ACTIVE POOLS"}),Object(h.jsx)("img",{src:Y.a,alt:"leftsidebigmamba",className:"activepool-mamba"}),Object(h.jsx)("section",{className:"container open-projects",children:Object(h.jsx)(H,{pool:J.d})})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})},V=n(6),$=n(7),K=n(9),Q=n(8);function ee(e){var t=e.project,n=Object(a.useState)(!1),i=Object(s.a)(n,2),r=i[0],d=i[1],o=1*new Date(t.startTime),f=new Date(1*t.startTime).toUTCString(),c=o-Date.now();return setTimeout((function(){d(!0)}),c),Object(a.useEffect)((function(){console.log("starttime",f,o),localStorage.setItem("start_epoch_time_comingpool",o)}),[o]),Object(h.jsx)(b.a.Fragment,{children:r?Object(h.jsx)(h.Fragment,{}):Object(h.jsxs)("section",{className:"coming-card",children:[Object(h.jsxs)("div",{className:"coming-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"project profile"})}),Object(h.jsxs)("div",{className:"coming-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsx)("strong",{children:t.subname}),Object(h.jsx)(D.a,{})]})]}),Object(h.jsx)(N,{}),Object(h.jsx)("div",{className:"coming-card-body",children:t.message}),Object(h.jsxs)("div",{className:"coming-card-info",children:[Object(h.jsx)("p",{children:"min: 0.1 BNB"}),Object(h.jsx)("p",{children:"max: 2.4 BNB"})]}),Object(h.jsxs)("div",{className:"coming-card-footer",children:[Object(h.jsxs)("p",{children:["START at: ",f]}),Object(h.jsxs)("h4",{style:{marginBottom:0,textAlign:"center"},children:["Pool will open after    ",Object(h.jsx)("span",{style:{fontSize:"40px"},children:Object(h.jsx)(C.a,{date:1*localStorage.getItem("start_epoch_time_comingpool"),fontSize:30,daysInHours:!0})})]})]})]})})}var te=n(205),ne=function(e){Object(K.a)(n,e);var t=Object(Q.a)(n);function n(){return Object(V.a)(this,n),t.apply(this,arguments)}return Object($.a)(n,[{key:"render",value:function(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-coming ",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PROJECTS COMING SOON"}),Object(h.jsx)("section",{className:"coming-projects",children:Object(h.jsx)(ee,{project:J.c})}),Object(h.jsx)("img",{src:te.a,alt:"rightmamba",className:"coming-projects-mamba"})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})}}]),n}(a.Component);function ae(e){var t=e.project,n=new Date(16432416e5).toUTCString();return Object(h.jsxs)("section",{className:"closed-card",children:[Object(h.jsxs)("div",{className:"closed-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"project profile"})}),Object(h.jsxs)("div",{className:"closed-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsxs)("div",{className:"social-links",children:[Object(h.jsx)("a",{href:"https://www.google.com",children:Object(h.jsx)(p.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.twitter.com",children:Object(h.jsx)(m.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.medium.com",children:Object(h.jsx)(m.b,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.telegram.com",children:Object(h.jsx)(y.e,{className:"social-link"})})]})]})]}),Object(h.jsx)("div",{className:"closed-card-body",children:t.message}),Object(h.jsxs)("div",{className:"closed-card-footer",children:[Object(h.jsx)("strong",{children:"This Pool was closed at "}),Object(h.jsx)("strong",{children:n})]})]})}var be=n(197),ie=function(e){Object(K.a)(n,e);var t=Object(Q.a)(n);function n(){return Object(V.a)(this,n),t.apply(this,arguments)}return Object($.a)(n,[{key:"render",value:function(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-closed",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PROJECTS CLOSED"}),Object(h.jsx)("img",{src:be.a,alt:"leftmamba",className:"closed-projects-mamba"}),Object(h.jsx)("section",{className:"closed-projects",children:J.e.map((function(e,t){return"Closed"===e.status&&Object(h.jsx)(ae,{project:e},t)}))})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})}}]),n}(a.Component);function re(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(i.a,{}),Object(h.jsx)(d.default,{}),Object(h.jsx)(Z,{}),Object(h.jsx)(ne,{}),Object(h.jsx)(ie,{}),Object(h.jsx)(r.a,{})]})}}}]);
//# sourceMappingURL=8.a7bfbbb9.chunk.js.map