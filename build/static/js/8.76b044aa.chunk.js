(this.webpackJsonpmambapad=this.webpackJsonpmambapad||[]).push([[8,14],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return b}));n(2);var a=n(11);function b(){return Object(a.jsx)("div",{className:"background"})}},191:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_mamba.f5e60ba8.svg"},192:function(e,t,n){"use strict";t.a=n.p+"static/media/leftside_Big_mamba.53a4f4c2.svg"},195:function(e,t,n){"use strict";n(2);var a=n(227),b=n(111),i=n(11);t.a=function(e){e.size;return Object(i.jsxs)("div",{className:"social-links",children:[Object(i.jsx)("a",{href:"https://twitter.com/mambapad_ido",children:Object(i.jsx)(a.a,{className:"social-link"})}),Object(i.jsx)("a",{href:"https://medium.com/@mambapad",children:Object(i.jsx)(a.b,{className:"social-link"})}),Object(i.jsx)("a",{href:"https://t.me/mambapad_official",children:Object(i.jsx)(b.e,{className:"social-link"})}),Object(i.jsx)("a",{href:"https://t.me/mambapad_ann",children:Object(i.jsx)(b.e,{className:"social-link"})})]})}},197:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(45),b=n.n(a),i=n(53),r=n(62),d=(new b.a(10),function(e){return e||new i.a.providers.StaticJsonRpcProvider(Object(r.a)())})},198:function(e,t,n){"use strict";t.a=n.p+"static/media/rightsidemamba.244d89fd.svg"},218:function(e){e.exports=JSON.parse('{"address":"0xAB4dCFb55217541d9e7efF0f6B3bC77231E70b61","abi":[{"inputs":[{"internalType":"address","name":"_mambapad","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"joinedPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"withdrawn","type":"event"},{"inputs":[],"name":"MambaContract","outputs":[{"internalType":"contract IBEP20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_addingAmount","type":"uint256"}],"name":"addTotalAmountForPrivateSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"contributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositedBNB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end_time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"etherDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalanceofContract","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractMampBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contributor","type":"address"}],"name":"getContribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDepositedBNB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInfo","outputs":[{"internalType":"uint256","name":"mampAmountofContract","type":"uint256"},{"internalType":"uint256","name":"bnbAmountDepositedinContract","type":"uint256"},{"internalType":"uint256","name":"startingTime","type":"uint256"},{"internalType":"uint256","name":"endingTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStartTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"joinPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"mampDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"max_buy_amount_estimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"min_buy_amount_estimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rateMAMPperBNB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"setEndTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"}],"name":"setStartTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start_time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAmountForPrivateSale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"adr","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawBNB","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawMAMP","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x4ef94557d7259f41cbd92b8e591a663a0f8a05437688450d7013f8ce55ef78fd","receipt":{"to":null,"from":"0xF82F63a0a80782DA349d2bFE3f53D23308F82212","contractAddress":"0xAB4dCFb55217541d9e7efF0f6B3bC77231E70b61","transactionIndex":99,"gasUsed":"1454705","logsBloom":"0xblockHash":"0x5a8e85b905fe362253c58cca3c066cfd039e0166e3bdc8370fa9397412bcc8ca","transactionHash":"0x4ef94557d7259f41cbd92b8e591a663a0f8a05437688450d7013f8ce55ef78fd","logs":[{"transactionIndex":99,"blockNumber":14846813,"transactionHash":"0x4ef94557d7259f41cbd92b8e591a663a0f8a05437688450d7013f8ce55ef78fd","address":"0xf43e84e5461005ecAcB49693Fa6Dbf5C9eCa8c10","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x000000000000000000000000ab4dcfb55217541d9e7eff0f6b3bc77231e70b61","0x000000000000000000000000f43e84e5461005ecacb49693fa6dbf5c9eca8c10"],"data":"0x0000000000000000000000000000000000000000000000000000000000989680","logIndex":1013,"blockHash":"0x5a8e85b905fe362253c58cca3c066cfd039e0166e3bdc8370fa9397412bcc8ca"}],"blockNumber":14846813,"cumulativeGasUsed":"32858517","status":1,"byzantium":true},"args":["0xf43e84e5461005ecAcB49693Fa6Dbf5C9eCa8c10"],"solcInputHash":"c9dd35196df90ca17f958eb0d739c6f9","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.0+commit.c7dfd78e\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_mambapad\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"joinedPool\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"rewardAmount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdrawn\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"MambaContract\\",\\"outputs\\":[{\\"internalType\\":\\"contract IBEP20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_addingAmount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"addTotalAmountForPrivateSale\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"authorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"contributions\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"depositedBNB\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"end_time\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"etherDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getBalanceofContract\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getContractMampBalance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_contributor\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getContribution\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getDepositedBNB\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getEndTime\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getInfo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"mampAmountofContract\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"bnbAmountDepositedinContract\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"startingTime\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"endingTime\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getStartTime\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isAuthorized\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"joinPool\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"payable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"mampDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"max_buy_amount_estimate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"min_buy_amount_estimate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rateMAMPperBNB\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_endTime\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setEndTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_startTime\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setStartTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"start_time\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalAmountForPrivateSale\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address payable\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"unauthorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"}],\\"name\\":\\"withdrawBNB\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"}],\\"name\\":\\"withdrawMAMP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/PrivateSale.sol\\":\\"PrivateSale\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/PrivateSale.sol\\":{\\"content\\":\\"/**\\\\r\\\\n *Submitted for verification at BscScan.com on 2022-01-18\\\\r\\\\n */\\\\r\\\\n\\\\r\\\\n// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity ^0.8.0;\\\\r\\\\n\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    uint256 c = a + b;\\\\r\\\\n    require(c >= a, \'SafeMath: addition overflow\');\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    return sub(a, b, \'SafeMath: subtraction overflow\');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(\\\\r\\\\n    uint256 a,\\\\r\\\\n    uint256 b,\\\\r\\\\n    string memory errorMessage\\\\r\\\\n  ) internal pure returns (uint256) {\\\\r\\\\n    require(b <= a, errorMessage);\\\\r\\\\n    uint256 c = a - b;\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    if (a == 0) {\\\\r\\\\n      return 0;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    uint256 c = a * b;\\\\r\\\\n    require(c / a == b, \'SafeMath: multiplication overflow\');\\\\r\\\\n\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n    return div(a, b, \'SafeMath: division by zero\');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(\\\\r\\\\n    uint256 a,\\\\r\\\\n    uint256 b,\\\\r\\\\n    string memory errorMessage\\\\r\\\\n  ) internal pure returns (uint256) {\\\\r\\\\n    require(b > 0, errorMessage);\\\\r\\\\n    uint256 c = a / b;\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nlibrary SafeMathInt {\\\\r\\\\n  int256 private constant MIN_INT256 = int256(1) << 255;\\\\r\\\\n  int256 private constant MAX_INT256 = ~(int256(1) << 255);\\\\r\\\\n\\\\r\\\\n  function mul(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a * b;\\\\r\\\\n\\\\r\\\\n    require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\\\\r\\\\n    require((b == 0) || (c / b == a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function div(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    require(b != -1 || a != MIN_INT256);\\\\r\\\\n\\\\r\\\\n    return a / b;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function sub(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a - b;\\\\r\\\\n    require((b >= 0 && c <= a) || (b < 0 && c > a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function add(int256 a, int256 b) internal pure returns (int256) {\\\\r\\\\n    int256 c = a + b;\\\\r\\\\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\\\\r\\\\n    return c;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function abs(int256 a) internal pure returns (int256) {\\\\r\\\\n    require(a != MIN_INT256);\\\\r\\\\n    return a < 0 ? -a : a;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/*\\\\r\\\\n * @dev Provides information about the current execution context, including the\\\\r\\\\n * sender of the transaction and its data. While these are generally available\\\\r\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\r\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\r\\\\n * paying for execution may not be the actual sender (as far as an application\\\\r\\\\n * is concerned).\\\\r\\\\n *\\\\r\\\\n * This contract is only required for intermediate, library-like contracts.\\\\r\\\\n */\\\\r\\\\nabstract contract Context {\\\\r\\\\n  function _msgSender() internal view virtual returns (address) {\\\\r\\\\n    return msg.sender;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function _msgData() internal view virtual returns (bytes calldata) {\\\\r\\\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\\\r\\\\n    return msg.data;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * BEP20 standard interface.\\\\r\\\\n */\\\\r\\\\ninterface IBEP20 {\\\\r\\\\n  function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n  function decimals() external view returns (uint8);\\\\r\\\\n\\\\r\\\\n  function symbol() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n  function name() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n  function getOwner() external view returns (address);\\\\r\\\\n\\\\r\\\\n  function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n  function allowance(address _owner, address spender) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n  function transferFrom(\\\\r\\\\n    address sender,\\\\r\\\\n    address recipient,\\\\r\\\\n    uint256 amount\\\\r\\\\n  ) external returns (bool);\\\\r\\\\n\\\\r\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Contract module which allows children to implement an emergency stop\\\\r\\\\n * mechanism that can be triggered by an authorized account.\\\\r\\\\n *\\\\r\\\\n * This module is used through inheritance. It will make available the\\\\r\\\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\\\r\\\\n * the functions of your contract. Note that they will not be pausable by\\\\r\\\\n * simply including this module, only once the modifiers are put in place.\\\\r\\\\n */\\\\r\\\\nabstract contract Pausable is Context {\\\\r\\\\n  /**\\\\r\\\\n   * @dev Emitted when the pause is triggered by `account`.\\\\r\\\\n   */\\\\r\\\\n  event Paused(address account);\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Emitted when the pause is lifted by `account`.\\\\r\\\\n   */\\\\r\\\\n  event Unpaused(address account);\\\\r\\\\n\\\\r\\\\n  bool private _paused;\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Initializes the contract in unpaused state.\\\\r\\\\n   */\\\\r\\\\n  constructor() {\\\\r\\\\n    _paused = false;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Returns true if the contract is paused, and false otherwise.\\\\r\\\\n   */\\\\r\\\\n  function paused() public view virtual returns (bool) {\\\\r\\\\n    return _paused;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - The contract must not be paused.\\\\r\\\\n   */\\\\r\\\\n  modifier whenNotPaused() {\\\\r\\\\n    require(!paused(), \'Pausable: paused\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Modifier to make a function callable only when the contract is paused.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - The contract must be paused.\\\\r\\\\n   */\\\\r\\\\n  modifier whenPaused() {\\\\r\\\\n    require(paused(), \'Pausable: not paused\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Triggers stopped state.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - The contract must not be paused.\\\\r\\\\n   */\\\\r\\\\n  function _pause() internal virtual whenNotPaused {\\\\r\\\\n    _paused = true;\\\\r\\\\n    emit Paused(_msgSender());\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  /**\\\\r\\\\n   * @dev Returns to normal state.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - The contract must be paused.\\\\r\\\\n   */\\\\r\\\\n  function _unpause() internal virtual whenPaused {\\\\r\\\\n    _paused = false;\\\\r\\\\n    emit Unpaused(_msgSender());\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nabstract contract Auth {\\\\r\\\\n  address internal owner;\\\\r\\\\n  mapping(address => bool) internal authorizations;\\\\r\\\\n\\\\r\\\\n  constructor(address _owner) {\\\\r\\\\n    owner = _owner;\\\\r\\\\n    authorizations[_owner] = true;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  modifier onlyOwner() {\\\\r\\\\n    require(isOwner(msg.sender), \'!OWNER\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  modifier authorized() {\\\\r\\\\n    require(isAuthorized(msg.sender), \'!AUTHORIZED\');\\\\r\\\\n    _;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function authorize(address adr) public onlyOwner {\\\\r\\\\n    authorizations[adr] = true;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function unauthorize(address adr) public onlyOwner {\\\\r\\\\n    authorizations[adr] = false;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function isOwner(address account) public view returns (bool) {\\\\r\\\\n    return account == owner;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function isAuthorized(address adr) public view returns (bool) {\\\\r\\\\n    return authorizations[adr];\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function transferOwnership(address payable adr) public onlyOwner {\\\\r\\\\n    owner = adr;\\\\r\\\\n    authorizations[adr] = true;\\\\r\\\\n    emit OwnershipTransferred(adr);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  event OwnershipTransferred(address owner);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// abstract contract Whitelist is Pausable {\\\\r\\\\n//   mapping(address => bool) public whitelist;\\\\r\\\\n\\\\r\\\\n//   event WhitelistAdded(address indexed _account);\\\\r\\\\n//   event whitelistRemoved(address indexed _account);\\\\r\\\\n\\\\r\\\\n//   modifier ifWhitelisted(address _account) {\\\\r\\\\n//     require(_account != address(0));\\\\r\\\\n//     require(whitelist[_account]);\\\\r\\\\n//     _;\\\\r\\\\n//   }\\\\r\\\\n\\\\r\\\\n//   function addWhitelist(address _account) external whenNotPaused onlyOwner {\\\\r\\\\n//     require(_account != address(0));\\\\r\\\\n\\\\r\\\\n//     if (!whitelist[_account]) {\\\\r\\\\n//       whitelist[_account] = true;\\\\r\\\\n\\\\r\\\\n//       emit WhitelistAdded(_account);\\\\r\\\\n//     }\\\\r\\\\n//   }\\\\r\\\\n\\\\r\\\\n//   function removeWhitelist(address _account) external whenNotPaused onlyOwner {\\\\r\\\\n//     require(_account != address(0));\\\\r\\\\n//     if (whitelist[_account]) {\\\\r\\\\n//       whitelist[_account] = false;\\\\r\\\\n\\\\r\\\\n//       emit whitelistRemoved(_account);\\\\r\\\\n//     }\\\\r\\\\n//   }\\\\r\\\\n// }\\\\r\\\\n\\\\r\\\\ncontract PrivateSale is Auth {\\\\r\\\\n  using SafeMath for uint256;\\\\r\\\\n  using SafeMathInt for int256;\\\\r\\\\n\\\\r\\\\n  IBEP20 public MambaContract;\\\\r\\\\n\\\\r\\\\n  uint256 public totalAmountForPrivateSale = 10000000; //10,000,000\\\\r\\\\n  uint256 public rateMAMPperBNB = 100000; //100,000\\\\r\\\\n  uint256 public etherDenominator = 10**18;\\\\r\\\\n  uint256 public mampDenominator = 10**8;\\\\r\\\\n\\\\r\\\\n  uint256 public start_time = 1643673600; //1st Feb 2022\\\\r\\\\n  uint256 public end_time = 1643932800; //3th Feb 2022\\\\r\\\\n\\\\r\\\\n  uint256 public min_buy_amount_estimate = 0.1 * 10**18;//fix\\\\r\\\\n  uint256 public max_buy_amount_estimate = 2 * 10**18;\\\\r\\\\n\\\\r\\\\n  uint256 public depositedBNB = 0;\\\\r\\\\n  mapping(address => uint256) public contributions;\\\\r\\\\n\\\\r\\\\n  event joinedPool(address indexed from, uint256 amount);\\\\r\\\\n  event withdrawn(address indexed from, uint256 rewardAmount);\\\\r\\\\n\\\\r\\\\n  constructor(address _mambapad) Auth(msg.sender) {\\\\r\\\\n    MambaContract = IBEP20(_mambapad);\\\\r\\\\n    MambaContract.approve(_mambapad, totalAmountForPrivateSale);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function joinPool() public payable returns (uint256) {\\\\r\\\\n    require(block.timestamp > start_time, \\\\\\"Can\'t join pool yet\\\\\\");\\\\r\\\\n    require(block.timestamp < end_time, \\\\\\"Can\'t join pool more\\\\\\");\\\\r\\\\n    require(msg.value >= min_buy_amount_estimate, \\\\\\"Can\'t be under min_buy_amount\\\\\\");\\\\r\\\\n    require(msg.value <= max_buy_amount_estimate, \\\\\\"Can\'t be over max_buy_amount\\\\\\");\\\\r\\\\n\\\\r\\\\n    uint256 amountToBuy = (msg.value).div(rateMAMPperBNB);\\\\r\\\\n    require(MambaContract.balanceOf(address(this)) > amountToBuy, \'This pool has no enough Mamp than amountToBuy\');\\\\r\\\\n    _claimMamp(amountToBuy);\\\\r\\\\n\\\\r\\\\n    contributions[msg.sender] = contributions[msg.sender].add(amountToBuy);\\\\r\\\\n    depositedBNB = depositedBNB.add(msg.value);\\\\r\\\\n    emit joinedPool(msg.sender, msg.value);\\\\r\\\\n    return amountToBuy;                    \\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function _claimMamp(uint256 amountToBuy) private {\\\\r\\\\n    if (MambaContract.balanceOf(address(this)) > amountToBuy) {\\\\r\\\\n      MambaContract.transfer(msg.sender, amountToBuy);\\\\r\\\\n    } else MambaContract.transfer(msg.sender, MambaContract.balanceOf(address(this)));\\\\r\\\\n\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawBNB(uint256 _amount, address _to) public onlyOwner {\\\\r\\\\n    uint256 ownerBalance = address(this).balance;\\\\r\\\\n    require(ownerBalance > 0, \'No BNB to withdraw\');\\\\r\\\\n\\\\r\\\\n    (bool sent, ) = _to.call{value: _amount}(\'\');\\\\r\\\\n    require(sent, \'Transfer failed.\');\\\\r\\\\n    emit withdrawn(msg.sender, ownerBalance);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function withdrawMAMP(uint256 _amount, address _to) public onlyOwner {\\\\r\\\\n    uint256 ownerBalance = MambaContract.balanceOf(address(this));\\\\r\\\\n    require(ownerBalance > 0, \'No MAMP to withdraw\');\\\\r\\\\n\\\\r\\\\n    MambaContract.transfer(_to, _amount);\\\\r\\\\n\\\\r\\\\n    emit withdrawn(msg.sender, ownerBalance);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getInfo() public view returns(uint256 mampAmountofContract, uint256 bnbAmountDepositedinContract, uint256 startingTime, uint256 endingTime) {\\\\r\\\\n    mampAmountofContract = MambaContract.balanceOf(address(this));\\\\r\\\\n    bnbAmountDepositedinContract = depositedBNB;\\\\r\\\\n    startingTime = start_time;\\\\r\\\\n    endingTime = end_time;\\\\r\\\\n    return (MambaContract.balanceOf(address(this)),depositedBNB, start_time, end_time);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getBalanceofContract() public view returns (uint256) {\\\\r\\\\n    return address(this).balance;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getContractMampBalance() public view returns (uint256) {\\\\r\\\\n    require(MambaContract.balanceOf(address(this))>0,\\\\\\"balance is 0\\\\\\");\\\\r\\\\n    return MambaContract.balanceOf(address(this));\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getContribution(address _contributor) public view returns (uint256) {\\\\r\\\\n    return contributions[_contributor];\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getDepositedBNB() public view returns (uint256) {\\\\r\\\\n    return depositedBNB;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function addTotalAmountForPrivateSale(uint256 _addingAmount) public onlyOwner {\\\\r\\\\n    totalAmountForPrivateSale = totalAmountForPrivateSale.add(_addingAmount);\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setStartTime(uint256 _startTime) public onlyOwner {\\\\r\\\\n    start_time = _startTime;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function setEndTime(uint256 _endTime) public onlyOwner {\\\\r\\\\n    end_time = _endTime;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getStartTime() public view returns (uint256) {\\\\r\\\\n    return start_time;\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  function getEndTime() public view returns (uint256) {\\\\r\\\\n    return end_time;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x5500921b205090e492b8fe8295de775c2510df6fc2ba05ef204c3831fc786789\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x608060405262989680600355620186a0600455670de0b6b3a76400006005556305f5e1006006556361f878006007556361fc6c8060085567016345785d8a0000600955671bc16d674ec80000600a556000600b553480156200006057600080fd5b506040516200168738038062001687833981016040819052620000839162000151565b600080546001600160a01b0319908116339081178355825260016020819052604092839020805460ff19169091179055600280546001600160a01b03858116919093161790819055600354925163095ea7b360e01b815291169163095ea7b391620000f3918591600401620001a3565b602060405180830381600087803b1580156200010e57600080fd5b505af115801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000181565b5050620001bc565b60006020828403121562000163578081fd5b81516001600160a01b03811681146200017a578182fd5b9392505050565b60006020828403121562000193578081fd5b815180151581146200017a578182fd5b6001600160a01b03929092168252602082015260400190565b6114bb80620001cc6000396000f3fe6080604052600436106101c25760003560e01c806396281f89116100f7578063c828371e11610095578063f2fde38b11610064578063f2fde38b1461046a578063f5c35ea31461048a578063fd6cf78b146104ac578063fe9fbb80146104c1576101c2565b8063c828371e14610400578063ccb98ffc14610415578063df2ea3be14610435578063f0b37c041461044a576101c2565b8063ac5227b3116100d1578063ac5227b3146103a1578063b1e2548e146103b6578063b6a5d7de146103cb578063c40ce6f9146103eb576101c2565b806396281f89146103575780639dc738bd14610377578063a9c9b19c1461038c576101c2565b806342e94c90116101645780635ecc02221161013e5780635ecc022214610310578063834ee417146103255780638371e6b41461033a578063900901e314610342576101c2565b806342e94c90146102b6578063439f5ac2146102d65780635a9b0b89146102eb576101c2565b806324d4d6ce116101a057806324d4d6ce146102345780632f54bf6e1461024957806332a6900c146102765780633e0a322d14610296576101c2565b806307d1b247146101c757806316243356146101e957806321eff7fc14610214575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611135565b6104e1565b005b3480156101f557600080fd5b506101fe6105f0565b60405161020b9190611408565b60405180910390f35b34801561022057600080fd5b506101fe61022f3660046110c9565b6105f6565b34801561024057600080fd5b506101fe610611565b34801561025557600080fd5b506102696102643660046110c9565b610617565b60405161020b9190611194565b34801561028257600080fd5b506101e7610291366004611135565b61062b565b3480156102a257600080fd5b506101e76102b1366004611105565b6107be565b3480156102c257600080fd5b506101fe6102d13660046110c9565b6107e8565b3480156102e257600080fd5b506101fe6107fa565b3480156102f757600080fd5b50610300610800565b60405161020b9493929190611411565b34801561031c57600080fd5b506101fe610932565b34801561033157600080fd5b506101fe610936565b6101fe61093c565b34801561034e57600080fd5b506101fe610aff565b34801561036357600080fd5b506101e7610372366004611105565b610b05565b34801561038357600080fd5b506101fe610b3d565b34801561039857600080fd5b506101fe610b43565b3480156103ad57600080fd5b506101fe610b49565b3480156103c257600080fd5b506101fe610b4f565b3480156103d757600080fd5b506101e76103e63660046110c9565b610c76565b3480156103f757600080fd5b506101fe610cc2565b34801561040c57600080fd5b506101fe610cc8565b34801561042157600080fd5b506101e7610430366004611105565b610cce565b34801561044157600080fd5b506101fe610cf8565b34801561045657600080fd5b506101e76104653660046110c9565b610cfe565b34801561047657600080fd5b506101e76104853660046110c9565b610d44565b34801561049657600080fd5b5061049f610dd9565b60405161020b9190611167565b3480156104b857600080fd5b506101fe610de8565b3480156104cd57600080fd5b506102696104dc3660046110c9565b610dee565b6104ea33610617565b61050f5760405162461bcd60e51b8152600401610506906112f1565b60405180910390fd5b478061052d5760405162461bcd60e51b8152600401610506906113dc565b6000826001600160a01b03168460405161054690611164565b60006040518083038185875af1925050503d8060008114610583576040519150601f19603f3d011682016040523d82523d6000602084013e610588565b606091505b50509050806105a95760405162461bcd60e51b81526004016105069061133f565b336001600160a01b03167f6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885a836040516105e29190611408565b60405180910390a250505050565b60085481565b6001600160a01b03166000908152600c602052604090205490565b60045481565b6000546001600160a01b0390811691161490565b61063433610617565b6106505760405162461bcd60e51b8152600401610506906112f1565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610681903090600401611167565b60206040518083038186803b15801561069957600080fd5b505afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d1919061111d565b9050600081116106f35760405162461bcd60e51b8152600401610506906112c4565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610725908590879060040161117b565b602060405180830381600087803b15801561073f57600080fd5b505af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077791906110e5565b50336001600160a01b03167f6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885a826040516107b19190611408565b60405180910390a2505050565b6107c733610617565b6107e35760405162461bcd60e51b8152600401610506906112f1565b600755565b600c6020526000908152604090205481565b60085490565b6002546040516370a0823160e01b81526000918291829182916001600160a01b03909116906370a0823190610839903090600401611167565b60206040518083038186803b15801561085157600080fd5b505afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610889919061111d565b600b546007546008546002546040516370a0823160e01b815294985092965090945092506001600160a01b0316906370a08231906108cb903090600401611167565b60206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b919061111d565b600b54600754600854935093509350935090919293565b4790565b60075481565b6000600754421161095f5760405162461bcd60e51b815260040161050690611229565b60085442106109805760405162461bcd60e51b815260040161050690611311565b6009543410156109a25760405162461bcd60e51b81526004016105069061128d565b600a543411156109c45760405162461bcd60e51b815260040161050690611256565b60006109db60045434610e0c90919063ffffffff16565b6002546040516370a0823160e01b815291925082916001600160a01b03909116906370a0823190610a10903090600401611167565b60206040518083038186803b158015610a2857600080fd5b505afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a60919061111d565b11610a7d5760405162461bcd60e51b81526004016105069061138f565b610a8681610e55565b336000908152600c6020526040902054610aa09082611063565b336000908152600c6020526040902055600b54610abd9034611063565b600b5560405133907f25fca2339137f6b91fa9be6e01fb2c1e91aeea5c57ed5f286b1bc814b1bf0a7990610af2903490611408565b60405180910390a2905090565b600b5490565b610b0e33610617565b610b2a5760405162461bcd60e51b8152600401610506906112f1565b600354610b379082611063565b60035550565b600b5481565b60095481565b60065481565b6002546040516370a0823160e01b815260009182916001600160a01b03909116906370a0823190610b84903090600401611167565b60206040518083038186803b158015610b9c57600080fd5b505afa158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd4919061111d565b11610bf15760405162461bcd60e51b815260040161050690611369565b6002546040516370a0823160e01b81526001600160a01b03909116906370a0823190610c21903090600401611167565b60206040518083038186803b158015610c3957600080fd5b505afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c71919061111d565b905090565b610c7f33610617565b610c9b5760405162461bcd60e51b8152600401610506906112f1565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b60035481565b60075490565b610cd733610617565b610cf35760405162461bcd60e51b8152600401610506906112f1565b600855565b600a5481565b610d0733610617565b610d235760405162461bcd60e51b8152600401610506906112f1565b6001600160a01b03166000908152600160205260409020805460ff19169055565b610d4d33610617565b610d695760405162461bcd60e51b8152600401610506906112f1565b600080546001600160a01b0319166001600160a01b0383169081178255815260016020819052604091829020805460ff19169091179055517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616390610dce908390611167565b60405180910390a150565b6002546001600160a01b031681565b60055481565b6001600160a01b031660009081526001602052604090205460ff1690565b6000610e4e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611092565b9392505050565b6002546040516370a0823160e01b815282916001600160a01b0316906370a0823190610e85903090600401611167565b60206040518083038186803b158015610e9d57600080fd5b505afa158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed5919061111d565b1115610f655760025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610f0d903390859060040161117b565b602060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906110e5565b50611060565b6002546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90339083906370a0823190610f9f903090600401611167565b60206040518083038186803b158015610fb757600080fd5b505afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef919061111d565b6040518363ffffffff1660e01b815260040161100c92919061117b565b602060405180830381600087803b15801561102657600080fd5b505af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e91906110e5565b505b50565b600080611070838561142c565b905083811015610e4e5760405162461bcd60e51b8152600401610506906111f2565b600081836110b35760405162461bcd60e51b8152600401610506919061119f565b5060006110c08486611450565b95945050505050565b6000602082840312156110da578081fd5b8135610e4e81611470565b6000602082840312156110f6578081fd5b81518015158114610e4e578182fd5b600060208284031215611116578081fd5b5035919050565b60006020828403121561112e578081fd5b5051919050565b60008060408385031215611147578081fd5b82359150602083013561115981611470565b809150509250929050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b818110156111cb578581018301518582016040015282016111af565b818111156111dc5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526013908201527210d85b89dd081a9bda5b881c1bdbdb081e595d606a1b604082015260600190565b6020808252601c908201527f43616e2774206265206f766572206d61785f6275795f616d6f756e7400000000604082015260600190565b6020808252601d908201527f43616e277420626520756e646572206d696e5f6275795f616d6f756e74000000604082015260600190565b6020808252601390820152724e6f204d414d5020746f20776974686472617760681b604082015260600190565b60208082526006908201526510a7aba722a960d11b604082015260600190565b60208082526014908201527343616e2774206a6f696e20706f6f6c206d6f726560601b604082015260600190565b60208082526010908201526f2a3930b739b332b9103330b4b632b21760811b604082015260600190565b6020808252600c908201526b062616c616e636520697320360a41b604082015260600190565b6020808252602d908201527f5468697320706f6f6c20686173206e6f20656e6f756768204d616d702074686160408201526c6e20616d6f756e74546f42757960981b606082015260800190565b6020808252601290820152714e6f20424e4220746f20776974686472617760701b604082015260600190565b90815260200190565b93845260208401929092526040830152606082015260800190565b6000821982111561144b57634e487b7160e01b81526011600452602481fd5b500190565b60008261146b57634e487b7160e01b81526012600452602481fd5b500490565b6001600160a01b038116811461106057600080fdfea2646970667358221220b558cc62d4c0fd4498e2c8e46f3c0a76e995a03e6e65adec8175bce95ec1a81364736f6c63430008000033","deployedBytecode":"0x6080604052600436106101c25760003560e01c806396281f89116100f7578063c828371e11610095578063f2fde38b11610064578063f2fde38b1461046a578063f5c35ea31461048a578063fd6cf78b146104ac578063fe9fbb80146104c1576101c2565b8063c828371e14610400578063ccb98ffc14610415578063df2ea3be14610435578063f0b37c041461044a576101c2565b8063ac5227b3116100d1578063ac5227b3146103a1578063b1e2548e146103b6578063b6a5d7de146103cb578063c40ce6f9146103eb576101c2565b806396281f89146103575780639dc738bd14610377578063a9c9b19c1461038c576101c2565b806342e94c90116101645780635ecc02221161013e5780635ecc022214610310578063834ee417146103255780638371e6b41461033a578063900901e314610342576101c2565b806342e94c90146102b6578063439f5ac2146102d65780635a9b0b89146102eb576101c2565b806324d4d6ce116101a057806324d4d6ce146102345780632f54bf6e1461024957806332a6900c146102765780633e0a322d14610296576101c2565b806307d1b247146101c757806316243356146101e957806321eff7fc14610214575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611135565b6104e1565b005b3480156101f557600080fd5b506101fe6105f0565b60405161020b9190611408565b60405180910390f35b34801561022057600080fd5b506101fe61022f3660046110c9565b6105f6565b34801561024057600080fd5b506101fe610611565b34801561025557600080fd5b506102696102643660046110c9565b610617565b60405161020b9190611194565b34801561028257600080fd5b506101e7610291366004611135565b61062b565b3480156102a257600080fd5b506101e76102b1366004611105565b6107be565b3480156102c257600080fd5b506101fe6102d13660046110c9565b6107e8565b3480156102e257600080fd5b506101fe6107fa565b3480156102f757600080fd5b50610300610800565b60405161020b9493929190611411565b34801561031c57600080fd5b506101fe610932565b34801561033157600080fd5b506101fe610936565b6101fe61093c565b34801561034e57600080fd5b506101fe610aff565b34801561036357600080fd5b506101e7610372366004611105565b610b05565b34801561038357600080fd5b506101fe610b3d565b34801561039857600080fd5b506101fe610b43565b3480156103ad57600080fd5b506101fe610b49565b3480156103c257600080fd5b506101fe610b4f565b3480156103d757600080fd5b506101e76103e63660046110c9565b610c76565b3480156103f757600080fd5b506101fe610cc2565b34801561040c57600080fd5b506101fe610cc8565b34801561042157600080fd5b506101e7610430366004611105565b610cce565b34801561044157600080fd5b506101fe610cf8565b34801561045657600080fd5b506101e76104653660046110c9565b610cfe565b34801561047657600080fd5b506101e76104853660046110c9565b610d44565b34801561049657600080fd5b5061049f610dd9565b60405161020b9190611167565b3480156104b857600080fd5b506101fe610de8565b3480156104cd57600080fd5b506102696104dc3660046110c9565b610dee565b6104ea33610617565b61050f5760405162461bcd60e51b8152600401610506906112f1565b60405180910390fd5b478061052d5760405162461bcd60e51b8152600401610506906113dc565b6000826001600160a01b03168460405161054690611164565b60006040518083038185875af1925050503d8060008114610583576040519150601f19603f3d011682016040523d82523d6000602084013e610588565b606091505b50509050806105a95760405162461bcd60e51b81526004016105069061133f565b336001600160a01b03167f6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885a836040516105e29190611408565b60405180910390a250505050565b60085481565b6001600160a01b03166000908152600c602052604090205490565b60045481565b6000546001600160a01b0390811691161490565b61063433610617565b6106505760405162461bcd60e51b8152600401610506906112f1565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610681903090600401611167565b60206040518083038186803b15801561069957600080fd5b505afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d1919061111d565b9050600081116106f35760405162461bcd60e51b8152600401610506906112c4565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610725908590879060040161117b565b602060405180830381600087803b15801561073f57600080fd5b505af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077791906110e5565b50336001600160a01b03167f6fb24f3ad0678f9d138e80b17293be051d87911eb34e9e60f0d1b9c3805e885a826040516107b19190611408565b60405180910390a2505050565b6107c733610617565b6107e35760405162461bcd60e51b8152600401610506906112f1565b600755565b600c6020526000908152604090205481565b60085490565b6002546040516370a0823160e01b81526000918291829182916001600160a01b03909116906370a0823190610839903090600401611167565b60206040518083038186803b15801561085157600080fd5b505afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610889919061111d565b600b546007546008546002546040516370a0823160e01b815294985092965090945092506001600160a01b0316906370a08231906108cb903090600401611167565b60206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b919061111d565b600b54600754600854935093509350935090919293565b4790565b60075481565b6000600754421161095f5760405162461bcd60e51b815260040161050690611229565b60085442106109805760405162461bcd60e51b815260040161050690611311565b6009543410156109a25760405162461bcd60e51b81526004016105069061128d565b600a543411156109c45760405162461bcd60e51b815260040161050690611256565b60006109db60045434610e0c90919063ffffffff16565b6002546040516370a0823160e01b815291925082916001600160a01b03909116906370a0823190610a10903090600401611167565b60206040518083038186803b158015610a2857600080fd5b505afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a60919061111d565b11610a7d5760405162461bcd60e51b81526004016105069061138f565b610a8681610e55565b336000908152600c6020526040902054610aa09082611063565b336000908152600c6020526040902055600b54610abd9034611063565b600b5560405133907f25fca2339137f6b91fa9be6e01fb2c1e91aeea5c57ed5f286b1bc814b1bf0a7990610af2903490611408565b60405180910390a2905090565b600b5490565b610b0e33610617565b610b2a5760405162461bcd60e51b8152600401610506906112f1565b600354610b379082611063565b60035550565b600b5481565b60095481565b60065481565b6002546040516370a0823160e01b815260009182916001600160a01b03909116906370a0823190610b84903090600401611167565b60206040518083038186803b158015610b9c57600080fd5b505afa158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd4919061111d565b11610bf15760405162461bcd60e51b815260040161050690611369565b6002546040516370a0823160e01b81526001600160a01b03909116906370a0823190610c21903090600401611167565b60206040518083038186803b158015610c3957600080fd5b505afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c71919061111d565b905090565b610c7f33610617565b610c9b5760405162461bcd60e51b8152600401610506906112f1565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b60035481565b60075490565b610cd733610617565b610cf35760405162461bcd60e51b8152600401610506906112f1565b600855565b600a5481565b610d0733610617565b610d235760405162461bcd60e51b8152600401610506906112f1565b6001600160a01b03166000908152600160205260409020805460ff19169055565b610d4d33610617565b610d695760405162461bcd60e51b8152600401610506906112f1565b600080546001600160a01b0319166001600160a01b0383169081178255815260016020819052604091829020805460ff19169091179055517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616390610dce908390611167565b60405180910390a150565b6002546001600160a01b031681565b60055481565b6001600160a01b031660009081526001602052604090205460ff1690565b6000610e4e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611092565b9392505050565b6002546040516370a0823160e01b815282916001600160a01b0316906370a0823190610e85903090600401611167565b60206040518083038186803b158015610e9d57600080fd5b505afa158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed5919061111d565b1115610f655760025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610f0d903390859060040161117b565b602060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f91906110e5565b50611060565b6002546040516370a0823160e01b81526001600160a01b039091169063a9059cbb90339083906370a0823190610f9f903090600401611167565b60206040518083038186803b158015610fb757600080fd5b505afa158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef919061111d565b6040518363ffffffff1660e01b815260040161100c92919061117b565b602060405180830381600087803b15801561102657600080fd5b505af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e91906110e5565b505b50565b600080611070838561142c565b905083811015610e4e5760405162461bcd60e51b8152600401610506906111f2565b600081836110b35760405162461bcd60e51b8152600401610506919061119f565b5060006110c08486611450565b95945050505050565b6000602082840312156110da578081fd5b8135610e4e81611470565b6000602082840312156110f6578081fd5b81518015158114610e4e578182fd5b600060208284031215611116578081fd5b5035919050565b60006020828403121561112e578081fd5b5051919050565b60008060408385031215611147578081fd5b82359150602083013561115981611470565b809150509250929050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b818110156111cb578581018301518582016040015282016111af565b818111156111dc5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526013908201527210d85b89dd081a9bda5b881c1bdbdb081e595d606a1b604082015260600190565b6020808252601c908201527f43616e2774206265206f766572206d61785f6275795f616d6f756e7400000000604082015260600190565b6020808252601d908201527f43616e277420626520756e646572206d696e5f6275795f616d6f756e74000000604082015260600190565b6020808252601390820152724e6f204d414d5020746f20776974686472617760681b604082015260600190565b60208082526006908201526510a7aba722a960d11b604082015260600190565b60208082526014908201527343616e2774206a6f696e20706f6f6c206d6f726560601b604082015260600190565b60208082526010908201526f2a3930b739b332b9103330b4b632b21760811b604082015260600190565b6020808252600c908201526b062616c616e636520697320360a41b604082015260600190565b6020808252602d908201527f5468697320706f6f6c20686173206e6f20656e6f756768204d616d702074686160408201526c6e20616d6f756e74546f42757960981b606082015260800190565b6020808252601290820152714e6f20424e4220746f20776974686472617760701b604082015260600190565b90815260200190565b93845260208401929092526040830152606082015260800190565b6000821982111561144b57634e487b7160e01b81526011600452602481fd5b500190565b60008261146b57634e487b7160e01b81526012600452602481fd5b500490565b6001600160a01b038116811461106057600080fdfea2646970667358221220b558cc62d4c0fd4498e2c8e46f3c0a76e995a03e6e65adec8175bce95ec1a81364736f6c63430008000033","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":537,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":541,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"authorizations","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":671,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"MambaContract","offset":0,"slot":"2","type":"t_contract(IBEP20)446"},{"astId":674,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"totalAmountForPrivateSale","offset":0,"slot":"3","type":"t_uint256"},{"astId":677,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"rateMAMPperBNB","offset":0,"slot":"4","type":"t_uint256"},{"astId":682,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"etherDenominator","offset":0,"slot":"5","type":"t_uint256"},{"astId":687,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"mampDenominator","offset":0,"slot":"6","type":"t_uint256"},{"astId":690,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"start_time","offset":0,"slot":"7","type":"t_uint256"},{"astId":693,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"end_time","offset":0,"slot":"8","type":"t_uint256"},{"astId":700,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"min_buy_amount_estimate","offset":0,"slot":"9","type":"t_uint256"},{"astId":707,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"max_buy_amount_estimate","offset":0,"slot":"10","type":"t_uint256"},{"astId":710,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"depositedBNB","offset":0,"slot":"11","type":"t_uint256"},{"astId":714,"contract":"contracts/PrivateSale.sol:PrivateSale","label":"contributions","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IBEP20)446":{"encoding":"inplace","label":"contract IBEP20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},219:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(2),b=n(220);function i(e){return e&&"object"===typeof e&&"default"in e?e:{default:e}}var r=i(a);function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var n,a,b=function(e,t){if(null==e)return{};var n,a,b={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}var u="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement?a.useLayoutEffect:a.useEffect;function l(e){var t=a.useRef(e);return u((function(){t.current=e})),a.useCallback((function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return t.current.apply(void 0,n)}),[])}var p=["ref","startOnMount","enableReinitialize","delay","onEnd","onStart","onPauseResume","onReset","onUpdate"],m={decimal:".",delay:null,prefix:"",suffix:"",duration:2,start:0,startOnMount:!0,enableReinitialize:!0},y=function(e){var t=a.useMemo((function(){return s(s({},m),e)}),[e]),n=t.ref,i=t.startOnMount,r=t.enableReinitialize,d=t.delay,f=t.onEnd,o=t.onStart,u=t.onPauseResume,y=t.onReset,h=t.onUpdate,v=c(t,p),T=a.useRef(),x=a.useRef(),g=a.useRef(!1),w=l((function(){return function(e,t){var n=t.decimal,a=t.decimals,i=t.duration,r=t.easingFn,d=t.end,s=t.formattingFn,f=t.numerals,o=t.prefix,c=t.separator,u=t.start,l=t.suffix,p=t.useEasing;return new b.CountUp(e,d,{startVal:u,duration:i,decimal:n,decimalPlaces:a,easingFn:r,formattingFn:s,numerals:f,separator:c,prefix:o,suffix:l,useEasing:p,useGrouping:!!c})}("string"===typeof n?n:n.current,v)})),_=l((function(e){var t=T.current;if(t&&!e)return t;var n=w();return T.current=n,n})),M=l((function(){var e=function(){return _(!0).start((function(){null===f||void 0===f||f({pauseResume:j,reset:O,start:B,update:S})}))};d&&d>0?x.current=setTimeout(e,1e3*d):e(),null===o||void 0===o||o({pauseResume:j,reset:O,update:S})})),j=l((function(){_().pauseResume(),null===u||void 0===u||u({reset:O,start:B,update:S})})),O=l((function(){x.current&&clearTimeout(x.current),_().reset(),null===y||void 0===y||y({pauseResume:j,start:B,update:S})})),S=l((function(e){_().update(e),null===h||void 0===h||h({pauseResume:j,reset:O,start:B})})),B=l((function(){O(),M()})),E=l((function(e){i&&(e&&O(),M())}));return a.useEffect((function(){g.current?r&&E(!0):(g.current=!0,E())}),[r,g,E,d,e.start,e.suffix,e.prefix,e.duration,e.separator,e.decimals,e.decimal,e.formattingFn]),a.useEffect((function(){return function(){O()}}),[O]),{start:B,pauseResume:j,reset:O,update:S,getCountUp:_}},h=["className","redraw","containerProps","children","style"];t.default=function(e){var t=e.className,n=e.redraw,b=e.containerProps,i=e.children,d=e.style,f=c(e,h),u=r.default.useRef(null),p=r.default.useRef(!1),m=y(s(s({},f),{},{ref:u,startOnMount:"function"!==typeof i||0===e.delay,enableReinitialize:!1})),v=m.start,T=m.reset,x=m.update,g=m.pauseResume,w=m.getCountUp,_=l((function(){v()})),M=l((function(t){e.preserveValue||T(),x(t)})),j=l((function(){"function"!==typeof e.children||u.current instanceof Element?w():console.error('Couldn\'t find attached element to hook the CountUp instance into! Try to attach "containerRef" from the render prop to a an Element, eg. <span ref={containerRef} />.')}));a.useEffect((function(){j()}),[j]),a.useEffect((function(){p.current&&M(e.end)}),[e.end,M]);var O=n&&e;return a.useEffect((function(){n&&p.current&&_()}),[_,n,O]),a.useEffect((function(){!n&&p.current&&_()}),[_,n,e.start,e.suffix,e.prefix,e.duration,e.separator,e.decimals,e.decimal,e.className,e.formattingFn]),a.useEffect((function(){p.current=!0}),[]),"function"===typeof i?i({countUpRef:u,start:v,reset:T,update:x,pauseResume:g,getCountUp:w}):r.default.createElement("span",o({className:t,ref:u,style:d},b),e.start?w().formattingFn(e.start):"")},t.useCountUp=y},220:function(e,t,n){"use strict";n.r(t),n.d(t,"CountUp",(function(){return b}));var a=function(){return(a=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var b in t=arguments[n])Object.prototype.hasOwnProperty.call(t,b)&&(e[b]=t[b]);return e}).apply(this,arguments)},b=function(){function e(e,t,n){var b=this;this.target=e,this.endVal=t,this.options=n,this.version="2.0.8",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,smartEasingThreshold:999,smartEasingAmount:333,separator:",",decimal:".",prefix:"",suffix:""},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error="",this.startVal=0,this.paused=!0,this.count=function(e){b.startTime||(b.startTime=e);var t=e-b.startTime;b.remaining=b.duration-t,b.useEasing?b.countDown?b.frameVal=b.startVal-b.easingFn(t,0,b.startVal-b.endVal,b.duration):b.frameVal=b.easingFn(t,b.startVal,b.endVal-b.startVal,b.duration):b.countDown?b.frameVal=b.startVal-(b.startVal-b.endVal)*(t/b.duration):b.frameVal=b.startVal+(b.endVal-b.startVal)*(t/b.duration),b.countDown?b.frameVal=b.frameVal<b.endVal?b.endVal:b.frameVal:b.frameVal=b.frameVal>b.endVal?b.endVal:b.frameVal,b.frameVal=Number(b.frameVal.toFixed(b.options.decimalPlaces)),b.printValue(b.frameVal),t<b.duration?b.rAF=requestAnimationFrame(b.count):null!==b.finalEndVal?b.update(b.finalEndVal):b.callback&&b.callback()},this.formatNumber=function(e){var t,n,a,i,r=e<0?"-":"";t=Math.abs(e).toFixed(b.options.decimalPlaces);var d=(t+="").split(".");if(n=d[0],a=d.length>1?b.options.decimal+d[1]:"",b.options.useGrouping){i="";for(var s=0,f=n.length;s<f;++s)0!==s&&s%3==0&&(i=b.options.separator+i),i=n[f-s-1]+i;n=i}return b.options.numerals&&b.options.numerals.length&&(n=n.replace(/[0-9]/g,(function(e){return b.options.numerals[+e]})),a=a.replace(/[0-9]/g,(function(e){return b.options.numerals[+e]}))),r+b.options.prefix+n+a+b.options.suffix},this.easeOutExpo=function(e,t,n,a){return n*(1-Math.pow(2,-10*e/a))*1024/1023+t},this.options=a(a({},this.defaults),n),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(t),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,""===this.options.separator&&(this.options.useGrouping=!1),this.el="string"==typeof e?document.getElementById(e):e,this.el?this.printValue(this.startVal):this.error="[CountUp] target is null or undefined"}return e.prototype.determineDirectionAndSmartEasing=function(){var e=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>e;var t=e-this.startVal;if(Math.abs(t)>this.options.smartEasingThreshold){this.finalEndVal=e;var n=this.countDown?1:-1;this.endVal=e+n*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=e,this.finalEndVal=null;this.finalEndVal?this.useEasing=!1:this.useEasing=this.options.useEasing},e.prototype.start=function(e){this.error||(this.callback=e,this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},e.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},e.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},e.prototype.update=function(e){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(e),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,this.finalEndVal||this.resetDuration(),this.finalEndVal=null,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},e.prototype.printValue=function(e){var t=this.formattingFn(e);"INPUT"===this.el.tagName?this.el.value=t:"text"===this.el.tagName||"tspan"===this.el.tagName?this.el.textContent=t:this.el.innerHTML=t},e.prototype.ensureNumber=function(e){return"number"==typeof e&&!isNaN(e)},e.prototype.validateValue=function(e){var t=Number(e);return this.ensureNumber(t)?t:(this.error="[CountUp] invalid start or end value: "+e,null)},e.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},e}()},221:function(e){e.exports=JSON.parse('{"address":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_maxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_maxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"approveMax","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyCooldownEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkMaxWalletToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkSwapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountPercentage","type":"uint256"}],"name":"clearStuckBalance_sender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint8","name":"_interval","type":"uint8"}],"name":"cooldownEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownTimerInterval","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deadBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"distributor","outputs":[{"internalType":"contract DividendDistributor","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isDividendExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isNotInSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTimelockExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTxLimitExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_launchblock","type":"uint256"}],"name":"launchStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualSync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256[]","name":"tokens","type":"uint256[]"}],"name":"multiTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"multiTransfer_fixed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pairContract","outputs":[{"internalType":"contract InterfaceLP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"rebase_updatebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"rescueToken","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"contract IDEXRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sellReflectionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPeriod","type":"uint256"},{"internalType":"uint256","name":"_minDistribution","type":"uint256"}],"name":"setDistributionCriteria","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gas","type":"uint256"}],"name":"setDistributorSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_treasureFee","type":"uint256"},{"internalType":"uint256","name":"_buyReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_sellReflectionFee","type":"uint256"},{"internalType":"uint256","name":"_feeDenominator","type":"uint256"}],"name":"setFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsDividendExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTimelockExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setIsTxLimitExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"setLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTXPercentage_base1000","type":"uint256"}],"name":"setMaxTxPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxWallPercent_base1000","type":"uint256"}],"name":"setMaxWalletPercent_base1000","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_enabled","type":"bool"},{"internalType":"uint256","name":"_percentage_base10000","type":"uint256"}],"name":"setSwapBackSettings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"},{"internalType":"uint256","name":"_deadBlocks","type":"uint256"}],"name":"tradingStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"adr","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasureFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adr","type":"address"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","receipt":{"to":null,"from":"0xF82F63a0a80782DA349d2bFE3f53D23308F82212","contractAddress":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","transactionIndex":4,"gasUsed":"7666165","logsBloom":"0xblockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762","transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","logs":[{"transactionIndex":4,"blockNumber":15581319,"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","address":"0xB7926C0430Afb07AA7DEfDE6DA862aE0Bde767bc","topics":["0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","0x0000000000000000000000008ef2e8f121b6316e10c71df96fe19a5031940b70","0x000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd"],"data":"0x00000000000000000000000035024147e119eed23eb13a2e2605b40efcf69ed900000000000000000000000000000000000000000000000000000000000184dc","logIndex":15,"blockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762"},{"transactionIndex":4,"blockNumber":15581319,"transactionHash":"0x2e2f77323a3dd729c31805bd8109161f7ccb248f4bd612df4f1e6d9bf75d5721","address":"0x8eF2E8F121b6316e10c71DF96Fe19a5031940b70","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x000000000000000000000000f82f63a0a80782da349d2bfe3f53d23308f82212"],"data":"0x000000000000000000000000000000000000000000000000002386f26fc10000","logIndex":16,"blockHash":"0xdff1e26aac75ce245e65838a7b76607c5d5ddc7e2d439aa5d183075c11ea0762"}],"blockNumber":15581319,"cumulativeGasUsed":"8317207","status":1,"byzantium":true},"args":[],"solcInputHash":"a9285166ced9bb4ce8f79cdf2f241d39","metadata":"{\\"compiler\\":{\\"version\\":\\"0.7.6+commit.7338295f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"_maxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_maxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"_totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"approveMax\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"authorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyCooldownEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"buyReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxTxAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkMaxWalletToken\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"checkSwapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amountPercentage\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"clearStuckBalance_sender\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"_interval\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"cooldownEnabled\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"cooldownTimerInterval\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"deadBlocks\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"distributor\\",\\"outputs\\":[{\\"internalType\\":\\"contract DividendDistributor\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"feeDenominator\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getOwner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isAuthorized\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isDividendExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isFeeExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"isNotInSwap\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTimelockExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isTxLimitExempt\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_launchblock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"launchStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"launchedAt\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"manualSync\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256[]\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256[]\\"}],\\"name\\":\\"multiTransfer\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"multiTransfer_fixed\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pair\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pairContract\\",\\"outputs\\":[{\\"internalType\\":\\"contract InterfaceLP\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"rate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"addresses\\",\\"type\\":\\"address[]\\"}],\\"name\\":\\"rebase_updatebalance\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"tokenAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"tokens\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"rescueToken\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"router\\",\\"outputs\\":[{\\"internalType\\":\\"contract IDEXRouter\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"sellReflectionFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minPeriod\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minDistribution\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributionCriteria\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gas\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setDistributorSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_treasureFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_buyReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_sellReflectionFee\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_feeDenominator\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setFees\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsDividendExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsFeeExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTimelockExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"holder\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"exempt\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"setIsTxLimitExempt\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_address\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxTXPercentage_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxTxPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"maxWallPercent_base1000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMaxWalletPercent_base1000\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_enabled\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_percentage_base10000\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setSwapBackSettings\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapEnabled\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"swapThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"tradingOpen\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"_status\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_deadBlocks\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"tradingStatus\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address payable\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"treasureFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"adr\\",\\"type\\":\\"address\\"}],\\"name\\":\\"unauthorize\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"stateMutability\\":\\"payable\\",\\"type\\":\\"receive\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/Mambapad.sol\\":\\"Mambapad\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/Mambapad.sol\\":{\\"content\\":\\"/**\\\\n *Submitted for verification at BscScan.com on 2022-01-05\\\\n */\\\\n\\\\n// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity ^0.7.4;\\\\n\\\\nlibrary SafeMath {\\\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    uint256 c = a + b;\\\\n    require(c >= a, \'SafeMath: addition overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return sub(a, b, \'SafeMath: subtraction overflow\');\\\\n  }\\\\n\\\\n  function sub(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b <= a, errorMessage);\\\\n    uint256 c = a - b;\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    if (a == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 c = a * b;\\\\n    require(c / a == b, \'SafeMath: multiplication overflow\');\\\\n\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n    return div(a, b, \'SafeMath: division by zero\');\\\\n  }\\\\n\\\\n  function div(\\\\n    uint256 a,\\\\n    uint256 b,\\\\n    string memory errorMessage\\\\n  ) internal pure returns (uint256) {\\\\n    require(b > 0, errorMessage);\\\\n    uint256 c = a / b;\\\\n    return c;\\\\n  }\\\\n}\\\\n\\\\nlibrary SafeMathInt {\\\\n  int256 private constant MIN_INT256 = int256(1) << 255;\\\\n  int256 private constant MAX_INT256 = ~(int256(1) << 255);\\\\n\\\\n  function mul(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a * b;\\\\n\\\\n    require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\\\\n    require((b == 0) || (c / b == a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function div(int256 a, int256 b) internal pure returns (int256) {\\\\n    require(b != -1 || a != MIN_INT256);\\\\n\\\\n    return a / b;\\\\n  }\\\\n\\\\n  function sub(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a - b;\\\\n    require((b >= 0 && c <= a) || (b < 0 && c > a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function add(int256 a, int256 b) internal pure returns (int256) {\\\\n    int256 c = a + b;\\\\n    require((b >= 0 && c >= a) || (b < 0 && c < a));\\\\n    return c;\\\\n  }\\\\n\\\\n  function abs(int256 a) internal pure returns (int256) {\\\\n    require(a != MIN_INT256);\\\\n    return a < 0 ? -a : a;\\\\n  }\\\\n}\\\\n\\\\n/**\\\\n * BEP20 standard interface.\\\\n */\\\\ninterface IBEP20 {\\\\n  function totalSupply() external view returns (uint256);\\\\n\\\\n  function decimals() external view returns (uint8);\\\\n\\\\n  function symbol() external view returns (string memory);\\\\n\\\\n  function name() external view returns (string memory);\\\\n\\\\n  function getOwner() external view returns (address);\\\\n\\\\n  function balanceOf(address account) external view returns (uint256);\\\\n\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n  function allowance(address _owner, address spender) external view returns (uint256);\\\\n\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external returns (bool);\\\\n\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\\\nabstract contract Auth {\\\\n  address internal owner;\\\\n  mapping(address => bool) internal authorizations;\\\\n\\\\n  constructor(address _owner) {\\\\n    owner = _owner;\\\\n    authorizations[_owner] = true;\\\\n  }\\\\n\\\\n  modifier onlyOwner() {\\\\n    require(isOwner(msg.sender), \'!OWNER\');\\\\n    _;\\\\n  }\\\\n\\\\n  modifier authorized() {\\\\n    require(isAuthorized(msg.sender), \'!AUTHORIZED\');\\\\n    _;\\\\n  }\\\\n\\\\n  function authorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = true;\\\\n  }\\\\n\\\\n  function unauthorize(address adr) public onlyOwner {\\\\n    authorizations[adr] = false;\\\\n  }\\\\n\\\\n  function isOwner(address account) public view returns (bool) {\\\\n    return account == owner;\\\\n  }\\\\n\\\\n  function isAuthorized(address adr) public view returns (bool) {\\\\n    return authorizations[adr];\\\\n  }\\\\n\\\\n  function transferOwnership(address payable adr) public onlyOwner {\\\\n    owner = adr;\\\\n    authorizations[adr] = true;\\\\n    emit OwnershipTransferred(adr);\\\\n  }\\\\n\\\\n  event OwnershipTransferred(address owner);\\\\n}\\\\n\\\\ninterface IDEXFactory {\\\\n  function createPair(address tokenA, address tokenB) external returns (address pair);\\\\n}\\\\n\\\\ninterface InterfaceLP {\\\\n  function sync() external;\\\\n}\\\\n\\\\ninterface IDEXRouter {\\\\n  function factory() external pure returns (address);\\\\n\\\\n  function WETH() external pure returns (address);\\\\n\\\\n  function addLiquidity(\\\\n    address tokenA,\\\\n    address tokenB,\\\\n    uint256 amountADesired,\\\\n    uint256 amountBDesired,\\\\n    uint256 amountAMin,\\\\n    uint256 amountBMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    returns (\\\\n      uint256 amountA,\\\\n      uint256 amountB,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function addLiquidityETH(\\\\n    address token,\\\\n    uint256 amountTokenDesired,\\\\n    uint256 amountTokenMin,\\\\n    uint256 amountETHMin,\\\\n    address to,\\\\n    uint256 deadline\\\\n  )\\\\n    external\\\\n    payable\\\\n    returns (\\\\n      uint256 amountToken,\\\\n      uint256 amountETH,\\\\n      uint256 liquidity\\\\n    );\\\\n\\\\n  function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n\\\\n  function swapExactETHForTokensSupportingFeeOnTransferTokens(\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external payable;\\\\n\\\\n  function swapExactTokensForETHSupportingFeeOnTransferTokens(\\\\n    uint256 amountIn,\\\\n    uint256 amountOutMin,\\\\n    address[] calldata path,\\\\n    address to,\\\\n    uint256 deadline\\\\n  ) external;\\\\n}\\\\n\\\\ninterface IDividendDistributor {\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external;\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external;\\\\n\\\\n  function deposit() external payable;\\\\n\\\\n  function process(uint256 gas) external;\\\\n}\\\\n\\\\ncontract DividendDistributor is IDividendDistributor {\\\\n  using SafeMath for uint256;\\\\n\\\\n  address _token;\\\\n\\\\n  struct Share {\\\\n    uint256 amount;\\\\n    uint256 totalExcluded;\\\\n    uint256 totalRealised;\\\\n  }\\\\n\\\\n//   IBEP20 RWRD = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\\\\n  IBEP20 RWRD = IBEP20(0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47);\\\\n  //address WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\\\\n  IDEXRouter router;\\\\n\\\\n  address[] shareholders;\\\\n  mapping(address => uint256) shareholderIndexes;\\\\n  mapping(address => uint256) shareholderClaims;\\\\n\\\\n  mapping(address => Share) public shares;\\\\n\\\\n  uint256 public totalShares;\\\\n  uint256 public totalDividends;\\\\n  uint256 public totalDistributed;\\\\n  uint256 public dividendsPerShare;\\\\n  uint256 public dividendsPerShareAccuracyFactor = 10**36;\\\\n\\\\n  uint256 public minPeriod = 45 * 60;\\\\n  uint256 public minDistribution = (7 / 1000) * (10**8);\\\\n\\\\n  uint256 currentIndex;\\\\n\\\\n  bool initialized;\\\\n  modifier initialization() {\\\\n    require(!initialized);\\\\n    _;\\\\n    initialized = true;\\\\n  }\\\\n\\\\n  modifier onlyToken() {\\\\n    require(msg.sender == _token);\\\\n    _;\\\\n  }\\\\n\\\\n  constructor(address _router) {\\\\n    // router = _router != address(0) ? IDEXRouter(_router) : IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\\\n    router = _router != address(0) ? IDEXRouter(_router) : IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\\\n    _token = msg.sender;\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external override onlyToken {\\\\n    minPeriod = _minPeriod;\\\\n    minDistribution = _minDistribution;\\\\n  }\\\\n\\\\n  function setShare(address shareholder, uint256 amount) external override onlyToken {\\\\n    if (shares[shareholder].amount > 0) {\\\\n      distributeDividend(shareholder);\\\\n    }\\\\n\\\\n    if (amount > 0 && shares[shareholder].amount == 0) {\\\\n      addShareholder(shareholder);\\\\n    } else if (amount == 0 && shares[shareholder].amount > 0) {\\\\n      removeShareholder(shareholder);\\\\n    }\\\\n\\\\n    totalShares = totalShares.sub(shares[shareholder].amount).add(amount);\\\\n    shares[shareholder].amount = amount;\\\\n    shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n  }\\\\n\\\\n  function deposit() external payable override onlyToken {\\\\n    uint256 balanceBefore = RWRD.balanceOf(address(this));\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = WBNB;\\\\n    path[1] = address(RWRD);\\\\n\\\\n    router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: msg.value}(\\\\n      0,\\\\n      path,\\\\n      address(this),\\\\n      block.timestamp\\\\n    );\\\\n\\\\n    uint256 amount = RWRD.balanceOf(address(this)).sub(balanceBefore);\\\\n\\\\n    totalDividends = totalDividends.add(amount);\\\\n    dividendsPerShare = dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares));\\\\n  }\\\\n\\\\n  function process(uint256 gas) external override onlyToken {\\\\n    uint256 shareholderCount = shareholders.length;\\\\n\\\\n    if (shareholderCount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 gasUsed = 0;\\\\n    uint256 gasLeft = gasleft();\\\\n\\\\n    uint256 iterations = 0;\\\\n\\\\n    while (gasUsed < gas && iterations < shareholderCount) {\\\\n      if (currentIndex >= shareholderCount) {\\\\n        currentIndex = 0;\\\\n      }\\\\n\\\\n      if (shouldDistribute(shareholders[currentIndex])) {\\\\n        distributeDividend(shareholders[currentIndex]);\\\\n      }\\\\n\\\\n      gasUsed = gasUsed.add(gasLeft.sub(gasleft()));\\\\n      gasLeft = gasleft();\\\\n      currentIndex++;\\\\n      iterations++;\\\\n    }\\\\n  }\\\\n\\\\n  function shouldDistribute(address shareholder) internal view returns (bool) {\\\\n    return\\\\n      shareholderClaims[shareholder] + minPeriod < block.timestamp && getUnpaidEarnings(shareholder) > minDistribution;\\\\n  }\\\\n\\\\n  function distributeDividend(address shareholder) internal {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return;\\\\n    }\\\\n\\\\n    uint256 amount = getUnpaidEarnings(shareholder);\\\\n    if (amount > 0) {\\\\n      totalDistributed = totalDistributed.add(amount);\\\\n      RWRD.transfer(shareholder, amount);\\\\n      shareholderClaims[shareholder] = block.timestamp;\\\\n      shares[shareholder].totalRealised = shares[shareholder].totalRealised.add(amount);\\\\n      shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\\\\n    }\\\\n  }\\\\n\\\\n  function claimDividend() external {\\\\n    distributeDividend(msg.sender);\\\\n  }\\\\n\\\\n  function getUnpaidEarnings(address shareholder) public view returns (uint256) {\\\\n    if (shares[shareholder].amount == 0) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    uint256 shareholderTotalDividends = getCumulativeDividends(shares[shareholder].amount);\\\\n    uint256 shareholderTotalExcluded = shares[shareholder].totalExcluded;\\\\n\\\\n    if (shareholderTotalDividends <= shareholderTotalExcluded) {\\\\n      return 0;\\\\n    }\\\\n\\\\n    return shareholderTotalDividends.sub(shareholderTotalExcluded);\\\\n  }\\\\n\\\\n  function getCumulativeDividends(uint256 share) internal view returns (uint256) {\\\\n    return share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor);\\\\n  }\\\\n\\\\n  function addShareholder(address shareholder) internal {\\\\n    shareholderIndexes[shareholder] = shareholders.length;\\\\n    shareholders.push(shareholder);\\\\n  }\\\\n\\\\n  function removeShareholder(address shareholder) internal {\\\\n    shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length - 1];\\\\n    shareholderIndexes[shareholders[shareholders.length - 1]] = shareholderIndexes[shareholder];\\\\n    shareholders.pop();\\\\n  }\\\\n}\\\\n\\\\ncontract Mambapad is IBEP20, Auth {\\\\n  using SafeMath for uint256;\\\\n  using SafeMathInt for int256;\\\\n\\\\n//   address WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\\\\n  address WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\\\\n  address DEAD = 0x000000000000000000000000000000000000dEaD;\\\\n  address ZERO = 0x0000000000000000000000000000000000000000;\\\\n\\\\n  string constant _name = \'Mambapad\';\\\\n  string constant _symbol = \'MAMP\';\\\\n  uint8 constant _decimals = 8;\\\\n\\\\n  mapping(address => uint256) _rBalance;\\\\n  mapping(address => mapping(address => uint256)) _allowances;\\\\n\\\\n  mapping(address => bool) public isFeeExempt;\\\\n  mapping(address => bool) public isTxLimitExempt;\\\\n  mapping(address => bool) public isTimelockExempt;\\\\n  mapping(address => bool) public isDividendExempt;\\\\n\\\\n  uint256 public treasureFee = 3; // for marketing & development & updating\\\\n  uint256 public buyReflectionFee = 3;\\\\n  uint256 public sellReflectionFee = 6;\\\\n  uint256 public feeDenominator = 100;\\\\n\\\\n  uint256 private totalReflectionFeeAmount;\\\\n  uint256 private totalFeeAmount;\\\\n\\\\n  uint256 public deadBlocks = 2;\\\\n  uint256 public launchedAt = 0;\\\\n\\\\n  IDEXRouter public router;\\\\n  address public pair;\\\\n  InterfaceLP public pairContract;\\\\n\\\\n  bool public tradingOpen = false;\\\\n\\\\n  DividendDistributor public distributor;\\\\n  uint256 distributorGas = 500000;\\\\n\\\\n  bool public buyCooldownEnabled = false;\\\\n  uint8 public cooldownTimerInterval = 5;\\\\n  mapping(address => uint256) private cooldownTimer;\\\\n\\\\n  bool public swapEnabled = false;\\\\n  bool inSwap;\\\\n  modifier swapping() {\\\\n    inSwap = true;\\\\n    _;\\\\n    inSwap = false;\\\\n  }\\\\n\\\\n  // event CaliforniaCheckin(address guest, uint256 rentPaid);\\\\n\\\\n  uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 10**8 * 10**_decimals;\\\\n  uint256 public swapThreshold = (rSupply * 10) / 50000;\\\\n\\\\n  uint256 public rate;\\\\n  uint256 public _totalSupply;\\\\n  uint256 private constant MAX_UINT256 = ~uint256(0);\\\\n  uint256 private constant MAX_SUPPLY = ~uint128(0);\\\\n  uint256 private constant rSupply = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\\\\n\\\\n  // Max wallet & Transaction\\\\n  uint256 public _maxTxAmount = rSupply.div(100).mul(2);\\\\n  uint256 public _maxWalletToken = rSupply.div(100).mul(3);\\\\n\\\\n  constructor() Auth(msg.sender) {\\\\n    // router = IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\\\n    router = IDEXRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\\\n    pair = IDEXFactory(router.factory()).createPair(WBNB, address(this));\\\\n    _allowances[address(this)][address(router)] = uint256(-1);\\\\n\\\\n    pairContract = InterfaceLP(pair);\\\\n    _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\\\\n    rate = rSupply.div(_totalSupply);\\\\n\\\\n    distributor = new DividendDistributor(address(router));\\\\n\\\\n    isFeeExempt[msg.sender] = true;\\\\n    isTxLimitExempt[msg.sender] = true;\\\\n\\\\n    isTimelockExempt[msg.sender] = true;\\\\n    isTimelockExempt[DEAD] = true;\\\\n    isTimelockExempt[address(this)] = true;\\\\n\\\\n    isDividendExempt[pair] = true;\\\\n    isDividendExempt[address(this)] = true;\\\\n    isDividendExempt[DEAD] = true;\\\\n\\\\n    _rBalance[msg.sender] = rSupply;\\\\n    emit Transfer(address(0), msg.sender, _totalSupply);\\\\n  }\\\\n\\\\n  receive() external payable {}\\\\n\\\\n  function totalSupply() external view override returns (uint256) {\\\\n    return _totalSupply;\\\\n  }\\\\n\\\\n  function decimals() external pure override returns (uint8) {\\\\n    return _decimals;\\\\n  }\\\\n\\\\n  function symbol() external pure override returns (string memory) {\\\\n    return _symbol;\\\\n  }\\\\n\\\\n  function name() external pure override returns (string memory) {\\\\n    return _name;\\\\n  }\\\\n\\\\n  function getOwner() external view override returns (address) {\\\\n    return owner;\\\\n  }\\\\n\\\\n  function balanceOf(address account) public view override returns (uint256) {\\\\n    return _rBalance[account].div(rate);\\\\n  }\\\\n\\\\n  function allowance(address holder, address spender) external view override returns (uint256) {\\\\n    return _allowances[holder][spender];\\\\n  }\\\\n\\\\n  function approve(address spender, uint256 amount) public override returns (bool) {\\\\n    _allowances[msg.sender][spender] = amount;\\\\n    emit Approval(msg.sender, spender, amount);\\\\n    return true;\\\\n  }\\\\n\\\\n  function approveMax(address spender) external returns (bool) {\\\\n    return approve(spender, uint256(-1));\\\\n  }\\\\n\\\\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\\\\n    return _transferFrom(msg.sender, recipient, amount);\\\\n  }\\\\n\\\\n  function transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) external override returns (bool) {\\\\n    if (_allowances[sender][msg.sender] != uint256(-1)) {\\\\n      _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \'Insufficient Allowance\');\\\\n    }\\\\n\\\\n    return _transferFrom(sender, recipient, amount);\\\\n  }\\\\n\\\\n  function _transferFrom(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    if (inSwap) {\\\\n      return _basicTransfer(sender, recipient, amount);\\\\n    }\\\\n\\\\n    if (!authorizations[sender] && !authorizations[recipient]) {\\\\n      require(tradingOpen, \'Trading not open yet\');\\\\n    }\\\\n\\\\n    uint256 rAmount = amount.mul(rate);\\\\n\\\\n    if (!authorizations[sender] && recipient != address(this) && recipient != address(DEAD) && recipient != pair) {\\\\n      uint256 heldTokens = balanceOf(recipient);\\\\n      require(\\\\n        (heldTokens + rAmount) <= _maxWalletToken,\\\\n        \'Total Holding is currently limited, you can not buy that much.\'\\\\n      );\\\\n    }\\\\n\\\\n    if (sender == pair && buyCooldownEnabled && !isTimelockExempt[recipient]) {\\\\n      require(cooldownTimer[recipient] < block.timestamp, \'buy Cooldown exists\');\\\\n      cooldownTimer[recipient] = block.timestamp + cooldownTimerInterval;\\\\n    }\\\\n\\\\n    // Checks max transaction limit\\\\n    checkTxLimit(sender, rAmount);\\\\n\\\\n    if (shouldSwapBack()) {\\\\n      swapBack();\\\\n    }\\\\n\\\\n    //Exchange tokens\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n\\\\n    uint256 amountReceived = (!shouldTakeFee(sender) || !shouldTakeFee(recipient))\\\\n      ? rAmount\\\\n      : takeFee(sender, rAmount, (recipient == pair));\\\\n    _rBalance[recipient] = _rBalance[recipient].add(amountReceived);\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[sender]) {\\\\n      try distributor.setShare(sender, balanceOf(sender)) {} catch {}\\\\n    }\\\\n\\\\n    if (!isDividendExempt[recipient]) {\\\\n      try distributor.setShare(recipient, balanceOf(recipient)) {} catch {}\\\\n    }\\\\n\\\\n    try distributor.process(distributorGas) {} catch {}\\\\n\\\\n    emit Transfer(sender, recipient, amountReceived.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  // Changed\\\\n\\\\n  function _basicTransfer(\\\\n    address sender,\\\\n    address recipient,\\\\n    uint256 amount\\\\n  ) internal returns (bool) {\\\\n    uint256 rAmount = amount.mul(rate);\\\\n    _rBalance[sender] = _rBalance[sender].sub(rAmount, \'Insufficient Balance\');\\\\n    _rBalance[recipient] = _rBalance[recipient].add(rAmount);\\\\n    emit Transfer(sender, recipient, rAmount.div(rate));\\\\n    return true;\\\\n  }\\\\n\\\\n  function checkTxLimit(address sender, uint256 rAmount) internal view {\\\\n    require(rAmount <= _maxTxAmount || isTxLimitExempt[sender], \'TX Limit Exceeded\');\\\\n  }\\\\n\\\\n  function shouldTakeFee(address sender) internal view returns (bool) {\\\\n    return !isFeeExempt[sender];\\\\n  }\\\\n\\\\n  function takeFee(\\\\n    address sender,\\\\n    uint256 rAmount,\\\\n    bool isSell\\\\n  ) internal returns (uint256) {\\\\n    uint256 reflectionFee = buyReflectionFee;\\\\n    if (isSell) {\\\\n      reflectionFee = sellReflectionFee;\\\\n    }\\\\n\\\\n    uint256 totalFee = reflectionFee.add(treasureFee);\\\\n\\\\n    uint256 feeAmount = rAmount.div(feeDenominator).mul(totalFee);\\\\n\\\\n    if (!isSell && (launchedAt + deadBlocks) > block.number) {\\\\n      feeAmount = rAmount.div(100).mul(99);\\\\n    }\\\\n\\\\n    totalFeeAmount = totalFeeAmount.add(feeAmount);\\\\n    totalReflectionFeeAmount = totalReflectionFeeAmount.add(feeAmount.div(totalFee).mul(reflectionFee));\\\\n\\\\n    _rBalance[address(this)] = _rBalance[address(this)].add(feeAmount);\\\\n    emit Transfer(sender, address(this), feeAmount.div(rate));\\\\n\\\\n    return rAmount.sub(feeAmount);\\\\n  }\\\\n\\\\n  function shouldSwapBack() internal view returns (bool) {\\\\n    return msg.sender != pair && !inSwap && swapEnabled && _rBalance[address(this)] >= swapThreshold;\\\\n  }\\\\n\\\\n  function clearStuckBalance_sender(uint256 amountPercentage) external authorized {\\\\n    uint256 amountBNB = address(this).balance;\\\\n    payable(msg.sender).transfer((amountBNB * amountPercentage) / 100);\\\\n  }\\\\n\\\\n  // switch Trading\\\\n\\\\n  function tradingStatus(bool _status, uint256 _deadBlocks) public onlyOwner {\\\\n    tradingOpen = _status;\\\\n    if (tradingOpen && launchedAt == 0) {\\\\n      launchedAt = block.number;\\\\n      deadBlocks = _deadBlocks;\\\\n    }\\\\n  }\\\\n\\\\n  function launchStatus(uint256 _launchblock) public onlyOwner {\\\\n    launchedAt = _launchblock;\\\\n  }\\\\n\\\\n  function cooldownEnabled(bool _status, uint8 _interval) public onlyOwner {\\\\n    buyCooldownEnabled = _status;\\\\n    cooldownTimerInterval = _interval;\\\\n  }\\\\n\\\\n  // OK, check 3\\\\n  function swapBack() internal swapping {\\\\n    uint256 tokensToSell = swapThreshold.div(rate);\\\\n\\\\n    address[] memory path = new address[](2);\\\\n    path[0] = address(this);\\\\n    path[1] = WBNB;\\\\n\\\\n    uint256 balanceBefore = address(this).balance;\\\\n\\\\n    router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokensToSell, 0, path, address(this), block.timestamp);\\\\n\\\\n    uint256 amountBNB = address(this).balance.sub(balanceBefore);\\\\n\\\\n    if (totalFeeAmount != 0 && totalReflectionFeeAmount != 0) {\\\\n      uint256 amountBNBReflection = amountBNB.mul(totalReflectionFeeAmount).div(totalFeeAmount);\\\\n      try distributor.deposit{value: amountBNBReflection}() {} catch {}\\\\n      totalFeeAmount = 0;\\\\n      totalReflectionFeeAmount = 0;\\\\n    }\\\\n  }\\\\n\\\\n  function setIsDividendExempt(address holder, bool exempt) external authorized {\\\\n    require(holder != address(this) && holder != pair);\\\\n    isDividendExempt[holder] = exempt;\\\\n    if (exempt) {\\\\n      distributor.setShare(holder, 0);\\\\n    } else {\\\\n      distributor.setShare(holder, balanceOf(holder));\\\\n    }\\\\n  }\\\\n\\\\n  function setIsFeeExempt(address holder, bool exempt) external authorized {\\\\n    isFeeExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTxLimitExempt(address holder, bool exempt) external authorized {\\\\n    isTxLimitExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setIsTimelockExempt(address holder, bool exempt) external authorized {\\\\n    isTimelockExempt[holder] = exempt;\\\\n  }\\\\n\\\\n  function setFees(\\\\n    uint256 _treasureFee,\\\\n    uint256 _buyReflectionFee,\\\\n    uint256 _sellReflectionFee,\\\\n    uint256 _feeDenominator\\\\n  ) external authorized {\\\\n    treasureFee = _treasureFee;\\\\n    buyReflectionFee = _buyReflectionFee;\\\\n    sellReflectionFee = _sellReflectionFee;\\\\n    feeDenominator = _feeDenominator;\\\\n    uint256 totalFee = _treasureFee.add(sellReflectionFee);\\\\n    if (buyReflectionFee > sellReflectionFee) {\\\\n      totalFee.sub(sellReflectionFee).add(buyReflectionFee);\\\\n    }\\\\n    require(totalFee < feeDenominator / 3, \'Fees cannot be more than 33%\');\\\\n  }\\\\n\\\\n  function setSwapBackSettings(bool _enabled, uint256 _percentage_base10000) external authorized {\\\\n    swapEnabled = _enabled;\\\\n    swapThreshold = rSupply.div(10000).mul(_percentage_base10000);\\\\n  }\\\\n\\\\n  function manualSync() external {\\\\n    InterfaceLP(pair).sync();\\\\n  }\\\\n\\\\n  function setLP(address _address) external onlyOwner {\\\\n    pairContract = InterfaceLP(_address);\\\\n    isFeeExempt[_address];\\\\n  }\\\\n\\\\n  function isNotInSwap() external view returns (bool) {\\\\n    return !inSwap;\\\\n  }\\\\n\\\\n  function checkSwapThreshold() external view returns (uint256) {\\\\n    return swapThreshold.div(rate);\\\\n  }\\\\n\\\\n  function setDistributionCriteria(uint256 _minPeriod, uint256 _minDistribution) external authorized {\\\\n    distributor.setDistributionCriteria(_minPeriod, _minDistribution);\\\\n  }\\\\n\\\\n  function setDistributorSettings(uint256 gas) external authorized {\\\\n    require(gas < 900000);\\\\n    distributorGas = gas;\\\\n  }\\\\n\\\\n  function rescueToken(address tokenAddress, uint256 tokens) public onlyOwner returns (bool success) {\\\\n    return IBEP20(tokenAddress).transfer(msg.sender, tokens);\\\\n  }\\\\n\\\\n  function checkMaxWalletToken() external view returns (uint256) {\\\\n    return _maxWalletToken.div(rate);\\\\n  }\\\\n\\\\n  function checkMaxTxAmount() external view returns (uint256) {\\\\n    return _maxTxAmount.div(rate);\\\\n  }\\\\n\\\\n  function setMaxWalletPercent_base1000(uint256 maxWallPercent_base1000) external onlyOwner {\\\\n    _maxWalletToken = rSupply.div(1000).mul(maxWallPercent_base1000);\\\\n  }\\\\n\\\\n  function setMaxTxPercent_base1000(uint256 maxTXPercentage_base1000) external onlyOwner {\\\\n    _maxTxAmount = rSupply.div(1000).mul(maxTXPercentage_base1000);\\\\n  }\\\\n\\\\n  /* Airdrop Begins */\\\\n\\\\n  function multiTransfer(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256[] calldata tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 801, \'GAS Error: max airdrop limit is 500 addresses\'); // to prevent overflow\\\\n    require(addresses.length == tokens.length, \'Mismatch between Address and token count\');\\\\n\\\\n    uint256 SCCC = 0;\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      SCCC = SCCC + tokens[i];\\\\n    }\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens[i]);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function multiTransfer_fixed(\\\\n    address from,\\\\n    address[] calldata addresses,\\\\n    uint256 tokens\\\\n  ) external onlyOwner {\\\\n    require(addresses.length < 2001, \'GAS Error: max airdrop limit is 2000 addresses\'); // to prevent overflow\\\\n\\\\n    uint256 SCCC = tokens * addresses.length;\\\\n\\\\n    require(balanceOf(from) >= SCCC, \'Not enough tokens in wallet\');\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      _basicTransfer(from, addresses[i], tokens);\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n\\\\n    // Dividend tracker\\\\n    if (!isDividendExempt[from]) {\\\\n      try distributor.setShare(from, balanceOf(from)) {} catch {}\\\\n    }\\\\n  }\\\\n\\\\n  function rebase_updatebalance(address[] calldata addresses) external onlyOwner {\\\\n    require(addresses.length < 5001, \'GAS Error: max address allowed is 5000\'); // to prevent out of gas & overflow error\\\\n\\\\n    for (uint256 i = 0; i < addresses.length; i++) {\\\\n      if (!isDividendExempt[addresses[i]]) {\\\\n        try distributor.setShare(addresses[i], balanceOf(addresses[i])) {} catch {}\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x08d2f5f09dbe58856c5dc28a32a73ce0625267199a9b40550a08b2e7c77b2a82\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60806040526002805473ae13d989dac2f0debff460ac112a837c89baa7cd6001600160a01b03199182161782556003805461dead90831617815560048054909216909155600b819055600c556006600d556064600e5560115560006012556015805460ff60a01b191690556207a1206017556018805461ffff1916610500179055601a805460ff1916905561c350668e63c1efd3ffff1904601b55620000df6002620000cb6064662386f26fc100006000195b06600019036200041360201b6200249c1790919060201c565b6200046660201b620024de1790919060201c565b601e55620000ff6003620000cb6064662386f26fc10000600019620000b2565b601f553480156200010f57600080fd5b50600080546001600160a01b0319908116339081178355825260016020818152604093849020805460ff191690921790915560138054909216739ac64cc6e4415144c455bd8e4837fea55603e5c31791829055825163c45a015560e01b815292516001600160a01b03929092169263c45a01559260048083019392829003018186803b1580156200019f57600080fd5b505afa158015620001b4573d6000803e3d6000fd5b505050506040513d6020811015620001cb57600080fd5b5051600254604080516364e329cb60e11b81526001600160a01b0392831660048201523060248201529051919092169163c9c653969160448083019260209291908290030181600087803b1580156200022357600080fd5b505af115801562000238573d6000803e3d6000fd5b505050506040513d60208110156200024f57600080fd5b5051601480546001600160a01b03199081166001600160a01b039384161782553060009081526006602090815260408083206013548716845290915290206000199081905591546015805491909416911617909155662386f26fc10000601d819055620002be918190620000b2565b601c556013546040516001600160a01b0390911690620002de906200056b565b6001600160a01b03909116815260405190819003602001906000f0801580156200030c573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03928316179055336000818152600760209081526040808320805460ff1990811660019081179092556008845282852080548216831790556009845282852080548216831790556003805488168652838620805483168417905530808752848720805484168517905560145489168752600a865284872080548416851790558652838620805483168417905554909616845281842080549096161790945582825260058152838220660e3d2cfe61ffff199055601d5484519081529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a362000579565b60006200045d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620004c460201b60201c565b90505b92915050565b600082620004775750600062000460565b828202828482816200048557fe5b04146200045d5760405162461bcd60e51b8152600401808060200182810382526021815260200180620047186021913960400191505060405180910390fd5b60008183620005545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000518578181015183820152602001620004fe565b50505050905090810190601f168015620005465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200056157fe5b0495945050505050565b610ebd806200385b83390190565b6132d280620005896000396000f3fe6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f51565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fbe565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611025565b34801561051357600080fd5b506103dd61102b565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611031565b34801561060357600080fd5b506103dd61134b565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611351565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611413565b34801561068d57600080fd5b506103dd611497565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b508035906020013561149d565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff1661154d565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115b6565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611622565b34801561076d57600080fd5b50610776611636565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163b565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118bf565b34801561085c57600080fd5b506103dd611986565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b031661198c565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a1565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119b6565b34801561090157600080fd5b5061090a611a36565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a45565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5a565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611acd565b3480156109d357600080fd5b506103dd611adb565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae1565b348015610a6357600080fd5b506103dd611c46565b348015610a7857600080fd5b506104de611c64565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c6d565b348015610ac857600080fd5b506103dd611ce0565b348015610add57600080fd5b506104de611cf9565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d02565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dfb565b348015610b6157600080fd5b50610776611e23565b348015610b7657600080fd5b506104a3611e31565b348015610b8b57600080fd5b506103dd611e9b565b348015610ba057600080fd5b506103dd611ea1565b348015610bb557600080fd5b506104de611ea7565b348015610bca57600080fd5b5061090a611eb6565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec5565b348015610c1257600080fd5b50610404611eda565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611ef8565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f40565b348015610c7b57600080fd5b5061090a611f9c565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fab565b348015610cc957600080fd5b506103dd611fb8565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd1565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b503561203b565b348015610d3b57600080fd5b506103dd61209e565b348015610d5057600080fd5b506103dd6120a4565b348015610d6557600080fd5b5061090a6120aa565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120b9565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e4565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b031661215b565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121bf565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612270565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123e6565b348015610ec357600080fd5b5061090a612459565b348015610ed857600080fd5b506103dd612468565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b031661246e565b348015610f2057600080fd5b506104de61248c565b601b5481565b60408051808201909152600881526713585b58985c185960c21b602082015290565b610f5a33611622565b610f94576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fb881610fb26103e8662386f26fc100006000195b06199061249c565b906124de565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103a33611622565b611074576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b45760405162461bcd60e51b815260040180806020018281038252602d81526020018061324a602d913960400191505060405180910390fd5b8281146110f25760405162461bcd60e51b81526004018080602001828103825260288152602001806131956028913960400191505060405180910390fd5b6000805b848110156111205783838281811061110a57fe5b60200291909101359290920191506001016110f6565b508061112b87611dfb565b101561117e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112ae576111c18787878481811061119957fe5b905060200201356001600160a01b03168686858181106111b557fe5b90506020020135612537565b50600a60008787848181106111d257fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112a6576016546001600160a01b03166314b6ca9687878481811061121957fe5b905060200201356001600160a01b031661124d89898681811061123857fe5b905060200201356001600160a01b0316611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129357600080fd5b505af19250505080156112a4575060015b505b600101611181565b506001600160a01b0386166000908152600a602052604090205460ff16611343576016546001600160a01b03166314b6ca96876112ea81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133057600080fd5b505af1925050508015611341575060015b505b505050505050565b600c5481565b6001600160a01b0383166000908152600660209081526040808320338452909152812054600019146113fe576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113d9918490612653565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6114098484846126ea565b90505b9392505050565b61141c33611622565b611456576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114845750601254155b15611493574360125560118190555b5050565b601c5481565b6114a63361246e565b6114e5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153957600080fd5b505af1158015611343573d6000803e3d6000fd5b61155633611622565b611590576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115bf33611622565b6115f9576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164433611622565b61167e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116be5760405162461bcd60e51b815260040180806020018281038252602e8152602001806131bd602e913960400191505060405180910390fd5b808202806116cb86611dfb565b101561171e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b838110156118275761174f8686868481811061173957fe5b905060200201356001600160a01b031685612537565b50600a600086868481811061176057fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff1661181f576016546001600160a01b03166314b6ca968686848181106117a757fe5b905060200201356001600160a01b03166117c688888681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561180c57600080fd5b505af192505050801561181d575060015b505b600101611721565b506001600160a01b0385166000908152600a602052604090205460ff166118b8576016546001600160a01b03166314b6ca968661186381611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118a957600080fd5b505af192505050801561134357505b5050505050565b60006118ca33611622565b611904576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195357600080fd5b505af1158015611967573d6000803e3d6000fd5b505050506040513d602081101561197d57600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119bf3361246e565b6119fe576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a31573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a633361246e565b611aa2576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061101f82600019610fbe565b600d5481565b611aea33611622565b611b24576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b645760405162461bcd60e51b81526004018080602001828103825260268152602001806132776026913960400191505060405180910390fd5b60005b81811015611a3157600a6000848484818110611b7f57fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c3e576016546001600160a01b03166314b6ca96848484818110611bc657fe5b905060200201356001600160a01b0316611be586868681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2b57600080fd5b505af1925050508015611c3c575060015b505b600101611b67565b6000611c5f601c54601e5461249c90919063ffffffff16565b905090565b60185460ff1681565b611c763361246e565b611cb5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c5f601c54601b5461249c90919063ffffffff16565b601a5460ff1681565b611d0b3361246e565b611d4a576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6a8584612c54565b9050600d54600c541115611d9b57611d99600c54611d93600d5484612cae90919063ffffffff16565b90612c54565b505b6003600e5481611da757fe5b0481106118b8576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161101f919061249c565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8157600080fd5b505af1158015611e95573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b60408051808201909152600481526304d414d560e41b602082015290565b611f0133611622565b611f3b576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f493361246e565b611f88576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9757600080fd5b601755565b6014546001600160a01b031681565b600061140c3384846126ea565b6000611c5f601c54601f5461249c90919063ffffffff16565b611fda33611622565b612014576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204433611622565b61207e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209881610fb26103e8662386f26fc10000600019610faa565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120ed3361246e565b61212c576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215481610fb2612710662386f26fc10000600019610faa565b601b555050565b61216433611622565b61219e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121c833611622565b612202576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b6122793361246e565b6122b8576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122df57506014546001600160a01b03838116911614155b6122e857600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff191682158015919091179091556123855760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236857600080fd5b505af115801561237c573d6000803e3d6000fd5b50505050611493565b6016546001600160a01b03166314b6ca96836123a081611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153957600080fd5b6123ef3361246e565b61242e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061140c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf0565b6000826124ed5750600061101f565b828202828482816124fa57fe5b041461140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806131eb6021913960400191505060405180910390fd5b60008061254f601c54846124de90919063ffffffff16565b90506125b78160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126539092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125e69082612c54565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263790859061249c565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126a757818101518382015260200161268f565b50505050905090810190601f1680156126d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff161561270f57612708848484612537565b905061140c565b6001600160a01b03841660009081526001602052604090205460ff1615801561275157506001600160a01b03831660009081526001602052604090205460ff16155b156127ab57601554600160a01b900460ff166127ab576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c2601c54846124de90919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127f757506001600160a01b0384163014155b801561281157506003546001600160a01b03858116911614155b801561282b57506014546001600160a01b03858116911614155b1561288257600061283b85611dfb565b9050601f5482820111156128805760405162461bcd60e51b815260040180806020018281038252603e81526020018061320c603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a1575060185460ff165b80156128c657506001600160a01b03841660009081526009602052604090205460ff16155b15612956576001600160a01b038416600090815260196020526040902054421161292d576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129608582612d55565b612968612dc3565b1561297557612975612e17565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129c7918390612653565b6001600160a01b0386166000908152600560205260408120919091556129ec86613048565b15806129fe57506129fc85613048565b155b612a2557601454612a2090879084906001600160a01b03898116911614613067565b612a27565b815b6001600160a01b038616600090815260056020526040902054909150612a4d9082612c54565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af4576016546001600160a01b03166314b6ca9687612a9b81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae157600080fd5b505af1925050508015612af2575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b88576016546001600160a01b03166314b6ca9686612b2f81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7557600080fd5b505af1925050508015612b86575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612bdb57600080fd5b505af1925050508015612bec575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c37601c548561249c90919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b60008282018381101561140c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061140c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612653565b60008183612d3f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126a757818101518382015260200161268f565b506000838581612d4b57fe5b0495945050505050565b601e5481111580612d7e57506001600160a01b03821660009081526008602052604090205460ff165b611493576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612de95750601a54610100900460ff16155b8015612df75750601a5460ff165b8015611c5f575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e39919061249c565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e6d57fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9857fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f32578181015183820152602001612f1a565b505050509050019650505050505050600060405180830381600087803b158015612f5b57600080fd5b505af1158015612f6f573d6000803e3d6000fd5b505050506000612f888247612cae90919063ffffffff16565b9050601054600014158015612f9e5750600f5415155b15613037576000612fc6601054612fc0600f54856124de90919063ffffffff16565b9061249c565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301857600080fd5b505af19350505050801561302a575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c5460009082156130785750600d545b600061308f600b5483612c5490919063ffffffff16565b905060006130ac82610fb2600e548961249c90919063ffffffff16565b9050841580156130c157504360115460125401115b156130d9576130d66063610fb288606461249c565b90505b6010546130e69082612c54565b6010556131036130fa84610fb2848661249c565b600f5490612c54565b600f55306000908152600560205260409020546131209082612c54565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061316e90859061249c565b60408051918252519081900360200190a36131898682612cae565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212207ea858363a82299eb2f880e204366ae9651cdd893eafc422d640c17f990f0a9e64736f6c634300070600336080604052600180546001600160a01b0319908116738301f2213c0eed49a7e28ae4c3e91722919b8b47179091556002805490911673ae13d989dac2f0debff460ac112a837c89baa7cd1790556ec097ce7bc90715b34b9f1000000000600c55610a8c600d55620aae60600e5534801561007857600080fd5b50604051610ebd380380610ebd8339818101604052602081101561009b57600080fd5b50516001600160a01b0381166100c557739ac64cc6e4415144c455bd8e4837fea55603e5c36100c7565b805b600380546001600160a01b03929092166001600160a01b0319928316179055600080549091163317905550610dbc806101016000396000f3fe6080604052600436106100dd5760003560e01c8063ce7c2ac21161007f578063efca2eed11610059578063efca2eed14610254578063f0fc6bca14610269578063ffb2c4791461027e578063ffd49c84146102a8576100dd565b8063ce7c2ac2146101e6578063d0e30db014610237578063e2d2e2191461023f576100dd565b80632d48e896116100bb5780632d48e896146101775780633a98ef39146101a75780634fab0ae8146101bc578063997664d7146101d1576100dd565b806311ce023d146100e257806314b6ca961461010957806328fd319814610144575b600080fd5b3480156100ee57600080fd5b506100f76102bd565b60408051918252519081900360200190f35b34801561011557600080fd5b506101426004803603604081101561012c57600080fd5b506001600160a01b0381351690602001356102c3565b005b34801561015057600080fd5b506100f76004803603602081101561016757600080fd5b50356001600160a01b03166103e8565b34801561018357600080fd5b506101426004803603604081101561019a57600080fd5b5080359060200135610474565b3480156101b357600080fd5b506100f7610496565b3480156101c857600080fd5b506100f761049c565b3480156101dd57600080fd5b506100f76104a2565b3480156101f257600080fd5b506102196004803603602081101561020957600080fd5b50356001600160a01b03166104a8565b60408051938452602084019290925282820152519081900360600190f35b6101426104c9565b34801561024b57600080fd5b506100f761075b565b34801561026057600080fd5b506100f7610761565b34801561027557600080fd5b50610142610767565b34801561028a57600080fd5b50610142600480360360208110156102a157600080fd5b5035610772565b3480156102b457600080fd5b506100f7610854565b600c5481565b6000546001600160a01b031633146102da57600080fd5b6001600160a01b03821660009081526007602052604090205415610301576103018261085a565b60008111801561032757506001600160a01b038216600090815260076020526040902054155b1561033a5761033582610982565b61036d565b8015801561035f57506001600160a01b03821660009081526007602052604090205415155b1561036d5761036d826109e3565b6001600160a01b03821660009081526007602052604090205460085461039e91839161039891610ad0565b90610b1b565b6008556001600160a01b03821660009081526007602052604090208190556103c581610b75565b6001600160a01b0390921660009081526007602052604090206001019190915550565b6001600160a01b03811660009081526007602052604081205461040d5750600061046f565b6001600160a01b03821660009081526007602052604081205461042f90610b75565b6001600160a01b0384166000908152600760205260409020600101549091508082116104605760009250505061046f565b61046a8282610ad0565b925050505b919050565b6000546001600160a01b0316331461048b57600080fd5b600d91909155600e55565b60085481565b600e5481565b60095481565b60076020526000908152604090208054600182015460029092015490919083565b6000546001600160a01b031633146104e057600080fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b50516040805160028082526060820183529293506000929091602083019080368337505060025482519293506001600160a01b03169183915060009061059757fe5b6001600160a01b03928316602091820292909201015260018054835192169183919081106105c157fe5b6001600160a01b0392831660209182029290920181019190915260035460405163b6f9de9560e01b815260006004820181815230604484018190524260648501819052608060248601908152895160848701528951969098169763b6f9de9597349795968b969495939460a49091019187810191028083838b5b8381101561065357818101518382015260200161063b565b50505050905001955050505050506000604051808303818588803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b5050600154604080516370a0823160e01b815230600482015290516000955061071994508793506001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106e757600080fd5b505afa1580156106fb573d6000803e3d6000fd5b505050506040513d602081101561071157600080fd5b505190610ad0565b6009549091506107299082610b1b565b600955600854600c546107539161074a916107449085610b92565b90610beb565b600b5490610b1b565b600b55505050565b600b5481565b600a5481565b6107703361085a565b565b6000546001600160a01b0316331461078957600080fd5b600454806107975750610851565b6000805a905060005b84831080156107ae57508381105b1561084c5783600f54106107c2576000600f555b6107ee6004600f54815481106107d457fe5b6000918252602090912001546001600160a01b0316610c2d565b1561081f5761081f6004600f548154811061080557fe5b6000918252602090912001546001600160a01b031661085a565b61083461082d5a8490610ad0565b8490610b1b565b92505a600f80546001908101909155909250016107a0565b505050505b50565b600d5481565b6001600160a01b03811660009081526007602052604090205461087c57610851565b6000610887826103e8565b9050801561097e57600a5461089c9082610b1b565b600a556001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b505050506040513d602081101561091f57600080fd5b50506001600160a01b038216600090815260066020908152604080832042905560079091529020600201546109549082610b1b565b6001600160a01b03831660009081526007602052604090206002810191909155546103c590610b75565b5050565b600480546001600160a01b039092166000818152600560205260408120849055600184018355919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b0319169091179055565b6004805460001981019081106109f557fe5b60009182526020808320909101546001600160a01b0384811684526005909252604090922054600480549290931692918110610a2d57fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559183168152600591829052604081205460048054919392916000198101908110610a7b57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556004805480610aab57fe5b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000610b1283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c69565b90505b92915050565b600082820183811015610b12576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610b15600c54610744600b5485610b9290919063ffffffff16565b600082610ba157506000610b15565b82820282848281610bae57fe5b0414610b125760405162461bcd60e51b8152600401808060200182810382526021815260200180610d666021913960400191505060405180910390fd5b6000610b1283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d00565b600d546001600160a01b0382166000908152600660205260408120549091429101108015610b155750600e54610c62836103e8565b1192915050565b60008184841115610cf85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cbd578181015183820152602001610ca5565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d4f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cbd578181015183820152602001610ca5565b506000838581610d5b57fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220cdcae73dbeb71516a5cb20daf65ff9ea98155c9d5901fc65b10a700909db3bae64736f6c63430007060033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","deployedBytecode":"0x6080604052600436106103bc5760003560e01c80636d351d1a116101f2578063b43b78351161010d578063f0b37c04116100a0578063f887ea401161006f578063f887ea4014610eb7578063fabb0b4f14610ecc578063fe9fbb8014610ee1578063ffb54a9914610f14576103c3565b8063f0b37c0414610ddb578063f2fde38b14610e0e578063f708a64f14610e41578063f84ba65d14610e7c576103c3565b8063bf8f31df116100dc578063bf8f31df14610d44578063bfe1092814610d59578063dd62ed3e14610d6e578063df20fd4914610da9576103c3565b8063b43b783514610cbd578063b6a5d7de14610cd2578063bd9ab53714610d05578063bf56b37114610d2f576103c3565b806383b4ac68116101855780639ba1fc4c116101545780639ba1fc4c14610c1b5780639d1944f514610c45578063a8aa1b3114610c6f578063a9059cbb14610c84576103c3565b806383b4ac6814610ba9578063893d20e814610bbe5780638b42507f14610bd357806395d89b4114610c06576103c3565b8063722b62ad116101c1578063722b62ad14610b55578063753d02a114610b6a57806378109e5414610b7f5780637d1db4a514610b94576103c3565b80636d351d1a14610abc5780636ddd171314610ad15780636fcba37714610ae657806370a0823114610b22576103c3565b8063313ce567116102e257806350af449e1161027557806360dbacdf1161024457806360dbacdf146109dc5780636149a20a14610a57578063617fe0ed14610a6c578063658d4b7f14610a81576103c3565b806350af449e1461092657806350db71fb14610959578063571ac8b0146109945780636042f719146109c7576103c3565b80633f4218e0116102b15780633f4218e0146108655780634355855a1461089857806344a33fd2146108cb5780634d709adf146108f5576103c3565b8063313ce56714610761578063335f6a431461078c57806333f3d628146108175780633eaaf86b14610850576103c3565b8063231363711161035a5780632d48e896116103295780632d48e896146106965780632d594567146106c65780632f34d282146106fb5780632f54bf6e1461072e576103c3565b806323136371146105f757806323b872dd1461060c57806326e353b81461064f5780632c4e722e14610681576103c3565b8063095ea7b311610396578063095ea7b3146104a5578063180b0d7e146104f257806318160ddd146105075780631ca0a28d1461051c576103c3565b80630445b667146103c857806306fdde03146103ef57806309302dc614610479576103c3565b366103c357005b600080fd5b3480156103d457600080fd5b506103dd610f29565b60408051918252519081900360200190f35b3480156103fb57600080fd5b50610404610f2f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104a36004803603602081101561049c57600080fd5b5035610f51565b005b3480156104b157600080fd5b506104de600480360360408110156104c857600080fd5b506001600160a01b038135169060200135610fbe565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506103dd611025565b34801561051357600080fd5b506103dd61102b565b34801561052857600080fd5b506104a36004803603606081101561053f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460208302840111600160201b8311171561059c57600080fd5b919390929091602081019035600160201b8111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460208302840111600160201b831117156105ec57600080fd5b509092509050611031565b34801561060357600080fd5b506103dd61134b565b34801561061857600080fd5b506104de6004803603606081101561062f57600080fd5b506001600160a01b03813581169160208101359091169060400135611351565b34801561065b57600080fd5b506104a36004803603604081101561067257600080fd5b50803515159060200135611413565b34801561068d57600080fd5b506103dd611497565b3480156106a257600080fd5b506104a3600480360360408110156106b957600080fd5b508035906020013561149d565b3480156106d257600080fd5b506104a3600480360360408110156106e957600080fd5b5080351515906020013560ff1661154d565b34801561070757600080fd5b506104a36004803603602081101561071e57600080fd5b50356001600160a01b03166115b6565b34801561073a57600080fd5b506104de6004803603602081101561075157600080fd5b50356001600160a01b0316611622565b34801561076d57600080fd5b50610776611636565b6040805160ff9092168252519081900360200190f35b34801561079857600080fd5b506104a3600480360360608110156107af57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460208302840111600160201b8311171561080c57600080fd5b91935091503561163b565b34801561082357600080fd5b506104de6004803603604081101561083a57600080fd5b506001600160a01b0381351690602001356118bf565b34801561085c57600080fd5b506103dd611986565b34801561087157600080fd5b506104de6004803603602081101561088857600080fd5b50356001600160a01b031661198c565b3480156108a457600080fd5b506104de600480360360208110156108bb57600080fd5b50356001600160a01b03166119a1565b3480156108d757600080fd5b506104a3600480360360208110156108ee57600080fd5b50356119b6565b34801561090157600080fd5b5061090a611a36565b604080516001600160a01b039092168252519081900360200190f35b34801561093257600080fd5b506104de6004803603602081101561094957600080fd5b50356001600160a01b0316611a45565b34801561096557600080fd5b506104a36004803603604081101561097c57600080fd5b506001600160a01b0381351690602001351515611a5a565b3480156109a057600080fd5b506104de600480360360208110156109b757600080fd5b50356001600160a01b0316611acd565b3480156109d357600080fd5b506103dd611adb565b3480156109e857600080fd5b506104a3600480360360208110156109ff57600080fd5b810190602081018135600160201b811115610a1957600080fd5b820183602082011115610a2b57600080fd5b803590602001918460208302840111600160201b83111715610a4c57600080fd5b509092509050611ae1565b348015610a6357600080fd5b506103dd611c46565b348015610a7857600080fd5b506104de611c64565b348015610a8d57600080fd5b506104a360048036036040811015610aa457600080fd5b506001600160a01b0381351690602001351515611c6d565b348015610ac857600080fd5b506103dd611ce0565b348015610add57600080fd5b506104de611cf9565b348015610af257600080fd5b506104a360048036036080811015610b0957600080fd5b5080359060208101359060408101359060600135611d02565b348015610b2e57600080fd5b506103dd60048036036020811015610b4557600080fd5b50356001600160a01b0316611dfb565b348015610b6157600080fd5b50610776611e23565b348015610b7657600080fd5b506104a3611e31565b348015610b8b57600080fd5b506103dd611e9b565b348015610ba057600080fd5b506103dd611ea1565b348015610bb557600080fd5b506104de611ea7565b348015610bca57600080fd5b5061090a611eb6565b348015610bdf57600080fd5b506104de60048036036020811015610bf657600080fd5b50356001600160a01b0316611ec5565b348015610c1257600080fd5b50610404611eda565b348015610c2757600080fd5b506104a360048036036020811015610c3e57600080fd5b5035611ef8565b348015610c5157600080fd5b506104a360048036036020811015610c6857600080fd5b5035611f40565b348015610c7b57600080fd5b5061090a611f9c565b348015610c9057600080fd5b506104de60048036036040811015610ca757600080fd5b506001600160a01b038135169060200135611fab565b348015610cc957600080fd5b506103dd611fb8565b348015610cde57600080fd5b506104a360048036036020811015610cf557600080fd5b50356001600160a01b0316611fd1565b348015610d1157600080fd5b506104a360048036036020811015610d2857600080fd5b503561203b565b348015610d3b57600080fd5b506103dd61209e565b348015610d5057600080fd5b506103dd6120a4565b348015610d6557600080fd5b5061090a6120aa565b348015610d7a57600080fd5b506103dd60048036036040811015610d9157600080fd5b506001600160a01b03813581169160200135166120b9565b348015610db557600080fd5b506104a360048036036040811015610dcc57600080fd5b508035151590602001356120e4565b348015610de757600080fd5b506104a360048036036020811015610dfe57600080fd5b50356001600160a01b031661215b565b348015610e1a57600080fd5b506104a360048036036020811015610e3157600080fd5b50356001600160a01b03166121bf565b348015610e4d57600080fd5b506104a360048036036040811015610e6457600080fd5b506001600160a01b0381351690602001351515612270565b348015610e8857600080fd5b506104a360048036036040811015610e9f57600080fd5b506001600160a01b03813516906020013515156123e6565b348015610ec357600080fd5b5061090a612459565b348015610ed857600080fd5b506103dd612468565b348015610eed57600080fd5b506104de60048036036020811015610f0457600080fd5b50356001600160a01b031661246e565b348015610f2057600080fd5b506104de61248c565b601b5481565b60408051808201909152600881526713585b58985c185960c21b602082015290565b610f5a33611622565b610f94576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b610fb881610fb26103e8662386f26fc100006000195b06199061249c565b906124de565b601f5550565b3360008181526006602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b600e5481565b601d5490565b61103a33611622565b611074576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61032183106110b45760405162461bcd60e51b815260040180806020018281038252602d81526020018061324a602d913960400191505060405180910390fd5b8281146110f25760405162461bcd60e51b81526004018080602001828103825260288152602001806131956028913960400191505060405180910390fd5b6000805b848110156111205783838281811061110a57fe5b60200291909101359290920191506001016110f6565b508061112b87611dfb565b101561117e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b848110156112ae576111c18787878481811061119957fe5b905060200201356001600160a01b03168686858181106111b557fe5b90506020020135612537565b50600a60008787848181106111d257fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff166112a6576016546001600160a01b03166314b6ca9687878481811061121957fe5b905060200201356001600160a01b031661124d89898681811061123857fe5b905060200201356001600160a01b0316611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561129357600080fd5b505af19250505080156112a4575060015b505b600101611181565b506001600160a01b0386166000908152600a602052604090205460ff16611343576016546001600160a01b03166314b6ca96876112ea81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561133057600080fd5b505af1925050508015611341575060015b505b505050505050565b600c5481565b6001600160a01b0383166000908152600660209081526040808320338452909152812054600019146113fe576040805180820182526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020808301919091526001600160a01b03871660009081526006825283812033825290915291909120546113d9918490612653565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b6114098484846126ea565b90505b9392505050565b61141c33611622565b611456576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6015805460ff60a01b1916600160a01b8415158102919091179182905560ff91041680156114845750601254155b15611493574360125560118190555b5050565b601c5481565b6114a63361246e565b6114e5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601654604080516316a4744b60e11b8152600481018590526024810184905290516001600160a01b0390921691632d48e8969160448082019260009290919082900301818387803b15801561153957600080fd5b505af1158015611343573d6000803e3d6000fd5b61155633611622565b611590576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6018805460ff19169215159290921761ff00191661010060ff9290921691909102179055565b6115bf33611622565b6115f9576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601580546001600160a01b039092166001600160a01b0319909216821790556000526007602052565b6000546001600160a01b0390811691161490565b600890565b61164433611622565b61167e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6107d182106116be5760405162461bcd60e51b815260040180806020018281038252602e8152602001806131bd602e913960400191505060405180910390fd5b808202806116cb86611dfb565b101561171e576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320696e2077616c6c65740000000000604482015290519081900360640190fd5b60005b838110156118275761174f8686868481811061173957fe5b905060200201356001600160a01b031685612537565b50600a600086868481811061176057fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff1661181f576016546001600160a01b03166314b6ca968686848181106117a757fe5b905060200201356001600160a01b03166117c688888681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561180c57600080fd5b505af192505050801561181d575060015b505b600101611721565b506001600160a01b0385166000908152600a602052604090205460ff166118b8576016546001600160a01b03166314b6ca968661186381611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156118a957600080fd5b505af192505050801561134357505b5050505050565b60006118ca33611622565b611904576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b0385169163a9059cbb9160448083019260209291908290030181600087803b15801561195357600080fd5b505af1158015611967573d6000803e3d6000fd5b505050506040513d602081101561197d57600080fd5b50519392505050565b601d5481565b60076020526000908152604090205460ff1681565b600a6020526000908152604090205460ff1681565b6119bf3361246e565b6119fe576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6040514790339060648484020480156108fc02916000818181858888f19350505050158015611a31573d6000803e3d6000fd5b505050565b6015546001600160a01b031681565b60096020526000908152604090205460ff1681565b611a633361246e565b611aa2576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b600061101f82600019610fbe565b600d5481565b611aea33611622565b611b24576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6113898110611b645760405162461bcd60e51b81526004018080602001828103825260268152602001806132776026913960400191505060405180910390fd5b60005b81811015611a3157600a6000848484818110611b7f57fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff16611c3e576016546001600160a01b03166314b6ca96848484818110611bc657fe5b905060200201356001600160a01b0316611be586868681811061123857fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611c2b57600080fd5b505af1925050508015611c3c575060015b505b600101611b67565b6000611c5f601c54601e5461249c90919063ffffffff16565b905090565b60185460ff1681565b611c763361246e565b611cb5576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6000611c5f601c54601b5461249c90919063ffffffff16565b601a5460ff1681565b611d0b3361246e565b611d4a576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b600b849055600c839055600d829055600e8190556000611d6a8584612c54565b9050600d54600c541115611d9b57611d99600c54611d93600d5484612cae90919063ffffffff16565b90612c54565b505b6003600e5481611da757fe5b0481106118b8576040805162461bcd60e51b815260206004820152601c60248201527f466565732063616e6e6f74206265206d6f7265207468616e2033332500000000604482015290519081900360640190fd5b601c546001600160a01b038216600090815260056020526040812054909161101f919061249c565b601854610100900460ff1681565b601460009054906101000a90046001600160a01b03166001600160a01b031663fff6cae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e8157600080fd5b505af1158015611e95573d6000803e3d6000fd5b50505050565b601f5481565b601e5481565b601a54610100900460ff161590565b6000546001600160a01b031690565b60086020526000908152604090205460ff1681565b60408051808201909152600481526304d414d560e41b602082015290565b611f0133611622565b611f3b576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b601255565b611f493361246e565b611f88576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b620dbba08110611f9757600080fd5b601755565b6014546001600160a01b031681565b600061140c3384846126ea565b6000611c5f601c54601f5461249c90919063ffffffff16565b611fda33611622565b612014576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61204433611622565b61207e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b61209881610fb26103e8662386f26fc10000600019610faa565b601e5550565b60125481565b600b5481565b6016546001600160a01b031681565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6120ed3361246e565b61212c576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b601a805460ff191683151517905561215481610fb2612710662386f26fc10000600019610faa565b601b555050565b61216433611622565b61219e576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6121c833611622565b612202576040805162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825580825260016020818152604093849020805460ff1916909217909155825191825291517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163929181900390910190a150565b6122793361246e565b6122b8576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03821630148015906122df57506014546001600160a01b03838116911614155b6122e857600080fd5b6001600160a01b0382166000908152600a60205260409020805460ff191682158015919091179091556123855760165460408051630a5b654b60e11b81526001600160a01b03858116600483015260006024830181905292519316926314b6ca969260448084019391929182900301818387803b15801561236857600080fd5b505af115801561237c573d6000803e3d6000fd5b50505050611493565b6016546001600160a01b03166314b6ca96836123a081611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561153957600080fd5b6123ef3361246e565b61242e576040805162461bcd60e51b815260206004820152600b60248201526a085055551213d49256915160aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6013546001600160a01b031681565b60115481565b6001600160a01b031660009081526001602052604090205460ff1690565b601554600160a01b900460ff1681565b600061140c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cf0565b6000826124ed5750600061101f565b828202828482816124fa57fe5b041461140c5760405162461bcd60e51b81526004018080602001828103825260218152602001806131eb6021913960400191505060405180910390fd5b60008061254f601c54846124de90919063ffffffff16565b90506125b78160405180604001604052806014815260200173496e73756666696369656e742042616c616e636560601b81525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020546126539092919063ffffffff16565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546125e69082612c54565b6001600160a01b03808616600081815260056020526040902092909255601c54908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061263790859061249c565b60408051918252519081900360200190a3506001949350505050565b600081848411156126e25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126a757818101518382015260200161268f565b50505050905090810190601f1680156126d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b601a54600090610100900460ff161561270f57612708848484612537565b905061140c565b6001600160a01b03841660009081526001602052604090205460ff1615801561275157506001600160a01b03831660009081526001602052604090205460ff16155b156127ab57601554600160a01b900460ff166127ab576040805162461bcd60e51b8152602060048201526014602482015273151c98591a5b99c81b9bdd081bdc195b881e595d60621b604482015290519081900360640190fd5b60006127c2601c54846124de90919063ffffffff16565b6001600160a01b03861660009081526001602052604090205490915060ff161580156127f757506001600160a01b0384163014155b801561281157506003546001600160a01b03858116911614155b801561282b57506014546001600160a01b03858116911614155b1561288257600061283b85611dfb565b9050601f5482820111156128805760405162461bcd60e51b815260040180806020018281038252603e81526020018061320c603e913960400191505060405180910390fd5b505b6014546001600160a01b0386811691161480156128a1575060185460ff165b80156128c657506001600160a01b03841660009081526009602052604090205460ff16155b15612956576001600160a01b038416600090815260196020526040902054421161292d576040805162461bcd60e51b815260206004820152601360248201527262757920436f6f6c646f776e2065786973747360681b604482015290519081900360640190fd5b6018546001600160a01b038516600090815260196020526040902061010090910460ff16420190555b6129608582612d55565b612968612dc3565b1561297557612975612e17565b6040805180820182526014815273496e73756666696369656e742042616c616e636560601b6020808301919091526001600160a01b0388166000908152600590915291909120546129c7918390612653565b6001600160a01b0386166000908152600560205260408120919091556129ec86613048565b15806129fe57506129fc85613048565b155b612a2557601454612a2090879084906001600160a01b03898116911614613067565b612a27565b815b6001600160a01b038616600090815260056020526040902054909150612a4d9082612c54565b6001600160a01b038087166000908152600560209081526040808320949094559189168152600a909152205460ff16612af4576016546001600160a01b03166314b6ca9687612a9b81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612ae157600080fd5b505af1925050508015612af2575060015b505b6001600160a01b0385166000908152600a602052604090205460ff16612b88576016546001600160a01b03166314b6ca9686612b2f81611dfb565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612b7557600080fd5b505af1925050508015612b86575060015b505b601654601754604080516001624d3b8760e01b031981526004810192909252516001600160a01b039092169163ffb2c4799160248082019260009290919082900301818387803b158015612bdb57600080fd5b505af1925050508015612bec575060015b50846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef612c37601c548561249c90919063ffffffff16565b60408051918252519081900360200190a350600195945050505050565b60008282018381101561140c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061140c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612653565b60008183612d3f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156126a757818101518382015260200161268f565b506000838581612d4b57fe5b0495945050505050565b601e5481111580612d7e57506001600160a01b03821660009081526008602052604090205460ff165b611493576040805162461bcd60e51b8152602060048201526011602482015270151608131a5b5a5d08115e18d959591959607a1b604482015290519081900360640190fd5b6014546000906001600160a01b03163314801590612de95750601a54610100900460ff16155b8015612df75750601a5460ff165b8015611c5f575050601b5430600090815260056020526040902054101590565b601a805461ff001916610100179055601c54601b54600091612e39919061249c565b60408051600280825260608201835292935060009290916020830190803683370190505090503081600081518110612e6d57fe5b6001600160a01b039283166020918202929092010152600254825191169082906001908110612e9857fe5b6001600160a01b0392831660209182029290920181019190915260135460405163791ac94760e01b8152600481018681526000602483018190523060648401819052426084850181905260a060448601908152895160a487015289514799979097169763791ac947978c9795968c9690939260c49091019187820191028083838b5b83811015612f32578181015183820152602001612f1a565b505050509050019650505050505050600060405180830381600087803b158015612f5b57600080fd5b505af1158015612f6f573d6000803e3d6000fd5b505050506000612f888247612cae90919063ffffffff16565b9050601054600014158015612f9e5750600f5415155b15613037576000612fc6601054612fc0600f54856124de90919063ffffffff16565b9061249c565b9050601660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561301857600080fd5b505af19350505050801561302a575060015b505060006010819055600f555b5050601a805461ff00191690555050565b6001600160a01b031660009081526007602052604090205460ff161590565b600c5460009082156130785750600d545b600061308f600b5483612c5490919063ffffffff16565b905060006130ac82610fb2600e548961249c90919063ffffffff16565b9050841580156130c157504360115460125401115b156130d9576130d66063610fb288606461249c565b90505b6010546130e69082612c54565b6010556131036130fa84610fb2848661249c565b600f5490612c54565b600f55306000908152600560205260409020546131209082612c54565b30600081815260056020526040902091909155601c546001600160a01b038916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061316e90859061249c565b60408051918252519081900360200190a36131898682612cae565b97965050505050505056fe4d69736d61746368206265747765656e204164647265737320616e6420746f6b656e20636f756e74474153204572726f723a206d61782061697264726f70206c696d6974206973203230303020616464726573736573536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f74616c20486f6c64696e672069732063757272656e746c79206c696d697465642c20796f752063616e206e6f74206275792074686174206d7563682e474153204572726f723a206d61782061697264726f70206c696d69742069732035303020616464726573736573474153204572726f723a206d6178206164647265737320616c6c6f7765642069732035303030a26469706673582212207ea858363a82299eb2f880e204366ae9651cdd893eafc422d640c17f990f0a9e64736f6c63430007060033","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":427,"contract":"contracts/Mambapad.sol:Mambapad","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":431,"contract":"contracts/Mambapad.sol:Mambapad","label":"authorizations","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1327,"contract":"contracts/Mambapad.sol:Mambapad","label":"WBNB","offset":0,"slot":"2","type":"t_address"},{"astId":1330,"contract":"contracts/Mambapad.sol:Mambapad","label":"DEAD","offset":0,"slot":"3","type":"t_address"},{"astId":1333,"contract":"contracts/Mambapad.sol:Mambapad","label":"ZERO","offset":0,"slot":"4","type":"t_address"},{"astId":1346,"contract":"contracts/Mambapad.sol:Mambapad","label":"_rBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":1352,"contract":"contracts/Mambapad.sol:Mambapad","label":"_allowances","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1356,"contract":"contracts/Mambapad.sol:Mambapad","label":"isFeeExempt","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":1360,"contract":"contracts/Mambapad.sol:Mambapad","label":"isTxLimitExempt","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":1364,"contract":"contracts/Mambapad.sol:Mambapad","label":"isTimelockExempt","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"},{"astId":1368,"contract":"contracts/Mambapad.sol:Mambapad","label":"isDividendExempt","offset":0,"slot":"10","type":"t_mapping(t_address,t_bool)"},{"astId":1371,"contract":"contracts/Mambapad.sol:Mambapad","label":"treasureFee","offset":0,"slot":"11","type":"t_uint256"},{"astId":1374,"contract":"contracts/Mambapad.sol:Mambapad","label":"buyReflectionFee","offset":0,"slot":"12","type":"t_uint256"},{"astId":1377,"contract":"contracts/Mambapad.sol:Mambapad","label":"sellReflectionFee","offset":0,"slot":"13","type":"t_uint256"},{"astId":1380,"contract":"contracts/Mambapad.sol:Mambapad","label":"feeDenominator","offset":0,"slot":"14","type":"t_uint256"},{"astId":1382,"contract":"contracts/Mambapad.sol:Mambapad","label":"totalReflectionFeeAmount","offset":0,"slot":"15","type":"t_uint256"},{"astId":1384,"contract":"contracts/Mambapad.sol:Mambapad","label":"totalFeeAmount","offset":0,"slot":"16","type":"t_uint256"},{"astId":1387,"contract":"contracts/Mambapad.sol:Mambapad","label":"deadBlocks","offset":0,"slot":"17","type":"t_uint256"},{"astId":1390,"contract":"contracts/Mambapad.sol:Mambapad","label":"launchedAt","offset":0,"slot":"18","type":"t_uint256"},{"astId":1392,"contract":"contracts/Mambapad.sol:Mambapad","label":"router","offset":0,"slot":"19","type":"t_contract(IDEXRouter)661"},{"astId":1394,"contract":"contracts/Mambapad.sol:Mambapad","label":"pair","offset":0,"slot":"20","type":"t_address"},{"astId":1396,"contract":"contracts/Mambapad.sol:Mambapad","label":"pairContract","offset":0,"slot":"21","type":"t_contract(InterfaceLP)564"},{"astId":1399,"contract":"contracts/Mambapad.sol:Mambapad","label":"tradingOpen","offset":20,"slot":"21","type":"t_bool"},{"astId":1401,"contract":"contracts/Mambapad.sol:Mambapad","label":"distributor","offset":0,"slot":"22","type":"t_contract(DividendDistributor)1314"},{"astId":1404,"contract":"contracts/Mambapad.sol:Mambapad","label":"distributorGas","offset":0,"slot":"23","type":"t_uint256"},{"astId":1407,"contract":"contracts/Mambapad.sol:Mambapad","label":"buyCooldownEnabled","offset":0,"slot":"24","type":"t_bool"},{"astId":1410,"contract":"contracts/Mambapad.sol:Mambapad","label":"cooldownTimerInterval","offset":1,"slot":"24","type":"t_uint8"},{"astId":1414,"contract":"contracts/Mambapad.sol:Mambapad","label":"cooldownTimer","offset":0,"slot":"25","type":"t_mapping(t_address,t_uint256)"},{"astId":1417,"contract":"contracts/Mambapad.sol:Mambapad","label":"swapEnabled","offset":0,"slot":"26","type":"t_bool"},{"astId":1419,"contract":"contracts/Mambapad.sol:Mambapad","label":"inSwap","offset":1,"slot":"26","type":"t_bool"},{"astId":1448,"contract":"contracts/Mambapad.sol:Mambapad","label":"swapThreshold","offset":0,"slot":"27","type":"t_uint256"},{"astId":1450,"contract":"contracts/Mambapad.sol:Mambapad","label":"rate","offset":0,"slot":"28","type":"t_uint256"},{"astId":1452,"contract":"contracts/Mambapad.sol:Mambapad","label":"_totalSupply","offset":0,"slot":"29","type":"t_uint256"},{"astId":1483,"contract":"contracts/Mambapad.sol:Mambapad","label":"_maxTxAmount","offset":0,"slot":"30","type":"t_uint256"},{"astId":1492,"contract":"contracts/Mambapad.sol:Mambapad","label":"_maxWalletToken","offset":0,"slot":"31","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(DividendDistributor)1314":{"encoding":"inplace","label":"contract DividendDistributor","numberOfBytes":"20"},"t_contract(IDEXRouter)661":{"encoding":"inplace","label":"contract IDEXRouter","numberOfBytes":"20"},"t_contract(InterfaceLP)564":{"encoding":"inplace","label":"contract InterfaceLP","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},232:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return ce}));var a=n(2),b=n.n(a),i=n(190),r=n(194),d=n(188),s=n(37),f=n(218),o=n(52),c=n(64),u=n(197);function l(){var e=function(e,t){var n,a=Object(o.c)(),b=a.account,i=a.library;return n=b?null===i||void 0===i?void 0:i.getSigner(b):Object(u.a)(),new c.b(e,t,n)}(f.address,f.abi).functions;return{isOwner:e.isOwner,setStartTime:e.setStartTime,setEndTime:e.setEndTime,getStartTime:e.getStartTime,getEndTime:e.getEndTime,getContribution:e.getContribution,getBalanceofContract:e.getBalanceofContract,getContractMampBalance:e.getContractMampBalance,getDepositedBNB:e.getDepositedBNB,getInfo:e.getInfo,joinPool:e.joinPool,withdraw:e.withdraw}}var p=n(226),m=n(227),y=n(111),h=n(11);var v=n(5),T=n.n(v),x=n(31),g=n(215),w=n(216),_=n(217),M=n(233),j=n(42),O=n(70),S=n(179),B=n(180),E=n.n(B),A=n(181),I=n(202),D=["min","now","max","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix"],k=["isChild"],P=["min","now","max","label","visuallyHidden","striped","animated","bsPrefix","variant","className","children"];function F(e,t,n){var a=(e-t)/(n-t)*100;return Math.round(1e3*a)/1e3}function N(e,t){var n,a=e.min,b=e.now,i=e.max,r=e.label,d=e.visuallyHidden,s=e.striped,f=e.animated,o=e.className,c=e.style,u=e.variant,l=e.bsPrefix,p=Object(S.a)(e,D);return Object(h.jsx)("div",Object(O.a)(Object(O.a)({ref:t},p),{},{role:"progressbar",className:E()(o,"".concat(l,"-bar"),(n={},Object(j.a)(n,"bg-".concat(u),u),Object(j.a)(n,"".concat(l,"-bar-animated"),f),Object(j.a)(n,"".concat(l,"-bar-striped"),f||s),n)),style:Object(O.a)({width:"".concat(F(b,a,i),"%")},c),"aria-valuenow":b,"aria-valuemin":a,"aria-valuemax":i,children:d?Object(h.jsx)("span",{className:"visually-hidden",children:r}):r}))}var C=a.forwardRef((function(e,t){var n=e.isChild,b=Object(S.a)(e,k);if(b.bsPrefix=Object(A.a)(b.bsPrefix,"progress"),n)return N(b,t);var i=b.min,r=b.now,d=b.max,s=b.label,f=b.visuallyHidden,o=b.striped,c=b.animated,u=b.bsPrefix,l=b.variant,p=b.className,m=b.children,y=Object(S.a)(b,P);return Object(h.jsx)("div",Object(O.a)(Object(O.a)({ref:t},y),{},{className:E()(p,u),children:m?Object(I.b)(m,(function(e){return Object(a.cloneElement)(e,{isChild:!0})})):N({min:i,now:r,max:d,label:s,visuallyHidden:f,striped:o,animated:c,bsPrefix:u,variant:l},t)}))}));C.displayName="ProgressBar",C.defaultProps={min:0,max:100,animated:!1,isChild:!1,visuallyHidden:!1,striped:!1};var R=C,V=n(53),z=n(72),q=(n(219),n(195)),L=function(e){e.size;return Object(h.jsxs)("div",{className:"social-links2",children:[Object(h.jsx)("a",{href:"https://twitter.com/mambapad_ido",children:Object(h.jsx)(m.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://medium.com/@mambapad",children:Object(h.jsx)(m.b,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://t.me/mambapad_official",children:Object(h.jsx)(y.e,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://t.me/mambapad_ann",children:Object(h.jsx)(y.e,{className:"social-link"})})]})},U=n(193),W=n(49),H=(n(61),n(62)),X=Object(H.a)();new V.a.providers.JsonRpcProvider(X),n(221);var G=n(98),J=n(99),Y=(n(100),J.c);function Z(){var e=Object(J.b)();return{isAppLoading:Y(G.b),dispatchLoading:function(){return e(Object(G.c)())},dispatchNotLoading:function(){return e(Object(G.d)())}}}function K(e){var t=e.pool,n=l(),b=n.joinPool,i=(n.getBalanceofContract,n.getContractMampBalance,n.getStartTime,n.getEndTime,n.getContribution,n.getDepositedBNB,n.getInfo),r=function(){var e=Object(o.c)(),t=e.account,n=e.library;return{account:t,getBalanceBNB:function(){var e=Object(x.a)(T.a.mark((function e(){var a;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null===n||void 0===n?void 0:n.getBalance(t);case 2:return a=e.sent,e.abrupt("return",a&&Object(W.b)(a));case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}()}}(),d=r.account,f=r.getBalanceBNB,c=Z(),u=(c.dispatchLoading,c.dispatchNotLoading,Object(a.useState)(0)),p=Object(s.a)(u,2),m=p[0],y=p[1],v=Object(a.useState)(0),j=Object(s.a)(v,2),O=j[0],S=j[1],B=Object(a.useState)(""),E=Object(s.a)(B,2),A=E[0],I=E[1],D=Object(a.useState)(!1),k=Object(s.a)(D,2),P=(k[0],k[1]),F=Object(a.useState)(""),N=Object(s.a)(F,2),C=N[0],H=N[1],X=Object(a.useState)(""),G=Object(s.a)(X,2),J=G[0],Y=G[1],K=Object(a.useState)(""),Q=Object(s.a)(K,2),$=(Q[0],Q[1]),ee=Object(a.useState)(""),te=Object(s.a)(ee,2),ne=(te[0],te[1],Object(a.useState)("")),ae=Object(s.a)(ne,2),be=(ae[0],ae[1],Object(a.useState)("")),ie=Object(s.a)(be,2),re=ie[0],de=ie[1],se=Object(a.useState)(""),fe=Object(s.a)(se,2),oe=fe[0],ce=fe[1],ue=Object(a.useState)(!1),le=Object(s.a)(ue,2),pe=le[0],me=le[1],ye=Object(a.useState)(!1),he=Object(s.a)(ye,2),ve=he[0],Te=he[1],xe=Object(a.useState)(0),ge=Object(s.a)(xe,2),we=ge[0],_e=ge[1],Me=new Date(C).toUTCString(),je=(new Date(J).toUTCString(),C-Date.now()),Oe=function(e){return 1*localStorage.getItem(e)};Object(a.useEffect)((function(){(function(){var e=Object(x.a)(T.a.mark((function e(){var t;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f().then(I),e.next=3,i();case 3:(t=e.sent)&&($(t),t.startingTime&&H(1*t.startingTime.toString()*1e3),t.endingTime&&Y(1*t.endingTime.toString()*1e3),t.mampAmountofContract&&de(V.a.utils.formatUnits(t.mampAmountofContract.toString(),"0")),t.bnbAmountDepositedinContract&&ce(V.a.utils.formatEther(t.bnbAmountDepositedinContract)),_e(oe/100*100));case 5:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}})()()}),[d,f]);var Se=function(){var e=Object(x.a)(T.a.mark((function e(){var t,n;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=V.a.utils.parseUnits(m.toString(),"18"),n=1e4*Math.pow(10,8),pe){e.next=5;break}return Object(z.c)("You Should Wait Until Open Pool..."),e.abrupt("return");case 5:if(!(n>re)){e.next=8;break}return Object(z.c)("Sorry.. Not Enough MAMP IN POOL NOW.."),e.abrupt("return");case 8:if(0!==m&&"string"!==typeof m){e.next=11;break}return Object(z.c)("Please Insert Amount of BNB"),e.abrupt("return");case 11:if(!(m>2||m<.1)){e.next=14;break}return Object(z.c)("Min Amount: 0.1 BNB. Max Amount: 2 BNB"),e.abrupt("return");case 14:if(!(A<m)){e.next=17;break}return Object(z.c)("Sorry. Your Fund is not Enough... Check Wallet."),e.abrupt("return");case 17:return e.prev=17,e.next=20,b({value:t});case 20:e.sent,console.log("success"),e.next=27;break;case 24:e.prev=24,e.t0=e.catch(17),e.t0.data.message&&Object(z.c)(e.t0.data.message);case 27:case"end":return e.stop()}}),e,null,[[17,24]])})));return function(){return e.apply(this,arguments)}}();return setTimeout((function(){P(!0)}),je),Object(a.useEffect)((function(){localStorage.setItem("start_epoch_time",C),localStorage.setItem("end_epoch_time",J),je>0&&(me(!1),Te(!1)),C<Date.now()&&J>Date.now()&&(me(!0),Te(!1)),J<Date.now()&&(me(!1),Te(!0))}),[je]),Object(h.jsx)(h.Fragment,{children:Object(h.jsxs)("section",{className:"pool-card",children:[Object(h.jsxs)("div",{className:"pool-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"pool profile"})}),Object(h.jsxs)("div",{className:"pool-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsx)(q.a,{})]}),Object(h.jsx)("p",{style:{color:"orange"}})]}),Object(h.jsx)(L,{}),Object(h.jsx)("div",{className:"pool-card-body",children:Object(h.jsxs)("section",{children:[Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["MAMP AMOUNT:","  ",Object(h.jsx)("span",{style:{fontSize:"30px"},children:V.a.utils.formatUnits(1*re,"8")})," ","MAMP"," "]}),Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["BNB AMOUNT:"," ",Object(h.jsx)("span",{style:{fontSize:"30px"},children:oe})," BNB"," "]}),Object(h.jsxs)("h4",{style:{marginBottom:10,textAlign:"center"},children:["START: ",Object(h.jsx)("span",{style:{fontSize:"24px"},children:Me})]}),!pe&&!ve&&Object(h.jsxs)("h4",{style:{marginBottom:0,textAlign:"center"},children:["Pool will open after    ",Object(h.jsx)("span",{style:{fontSize:"24px"},children:Object(h.jsx)(U.a,{date:Oe("start_epoch_time"),fontSize:20,daysInHours:!0})})]}),Object(h.jsxs)(g.a,{style:{margin:"20px 0px",gap:10,alignItems:"center"},children:[Object(h.jsx)(w.a,{style:{padding:0,flex:1},children:Object(h.jsxs)(_.a,{className:"allocation-table",bordered:!0,hover:!0,variant:"dark",children:[Object(h.jsx)("thead",{children:Object(h.jsx)("tr",{children:Object(h.jsx)("th",{colSpan:"2",children:"ALLOCATION(BNB)"})})}),Object(h.jsxs)("tbody",{children:[Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"MIN"}),Object(h.jsx)("td",{children:t.min_allocation})]}),Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"MAX"}),Object(h.jsx)("td",{children:t.max_allocation})]})]}),Object(h.jsx)("thead",{children:Object(h.jsx)("tr",{children:Object(h.jsx)("th",{colSpan:"2",children:"PRICE(USDT)"})})}),Object(h.jsxs)("tbody",{children:[Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"IDO"}),Object(h.jsx)("td",{children:t.ido_price})]}),Object(h.jsxs)("tr",{children:[Object(h.jsx)("td",{children:"LISTING"}),Object(h.jsx)("td",{children:t.listing_price})]})]})]})}),Object(h.jsxs)(w.a,{style:{padding:0,flex:1},children:[Object(h.jsx)("h3",{style:{marginBottom:3,fontSize:14},children:"AMOUNT(BNB)"}),Object(h.jsx)(M.a.Control,{style:{marginBottom:"20px"},required:!0,value:m,type:"number",placeholder:"BNB",onChange:function(e){if(""===e.target.value)y(""),S("");else{var t=1*e.target.value;y(t),S(1e5*t*.94)}}}),Object(h.jsx)("div",{className:"join-button",children:Object(h.jsx)("button",{className:"poolcard-button",onClick:Se,children:"JOIN POOL"})}),Object(h.jsx)("h3",{style:{marginBottom:3,marginTop:70,fontSize:14},children:"AMOUNT(MAMP)"}),Object(h.jsx)(M.a.Control,{type:"number",value:O,placeholder:"MAMP",onChange:function(e){var t=1*e.target.value;S(t),y(t/1e5)}})]})]}),Object(h.jsx)(R,{animated:!0,now:we,variant:"secondary",label:"".concat(we,"%"),style:{background:"orange"}}),Object(h.jsxs)(g.a,{style:{marginTop:"30px"},children:[pe&&Object(h.jsx)("h3",{style:{marginBottom:0,fontSize:"24px"},children:"WILL LIVE FOR"}),pe&&Object(h.jsx)("div",{style:{fontSize:"2em"},children:Object(h.jsx)(U.a,{date:Oe("end_epoch_time"),autoStart:function(){},onComplete:function(){}})}),ve&&Object(h.jsx)("h3",{style:{marginBottom:0,fontSize:"44px"},children:"CLOSED!!"})]})]})})]})})}var Q=n(184),$=n(192),ee=function(){var e=Object(a.useState)(Date.now()),t=Object(s.a)(e,2);t[0],t[1];return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-open",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",style:{marginTop:40},children:"ACTIVE POOLS"}),Object(h.jsx)("img",{src:$.a,alt:"leftsidebigmamba",className:"activepool-mamba"}),Object(h.jsx)("section",{className:"container open-projects",children:Object(h.jsx)(K,{pool:Q.d})})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})},te=n(6),ne=n(7),ae=n(9),be=n(8);function ie(e){var t=e.project,n=Object(a.useState)(!1),i=Object(s.a)(n,2),r=i[0],d=i[1],f=1*new Date(t.startTime),o=new Date(1*t.startTime).toUTCString(),c=f-Date.now();return setTimeout((function(){d(!0)}),c),Object(h.jsx)(b.a.Fragment,{children:r?Object(h.jsx)(h.Fragment,{}):Object(h.jsxs)("section",{className:"coming-card",children:[Object(h.jsxs)("div",{className:"coming-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"project profile"})}),Object(h.jsxs)("div",{className:"coming-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsx)("strong",{children:t.subname}),Object(h.jsx)(q.a,{})]})]}),Object(h.jsx)(L,{}),Object(h.jsx)("div",{className:"coming-card-body",children:t.message}),Object(h.jsxs)("div",{className:"coming-card-footer",children:[Object(h.jsx)("strong",{children:"This Pool will be OPEN at "}),Object(h.jsx)("strong",{children:o})]})]})})}var re=n(198),de=function(e){Object(ae.a)(n,e);var t=Object(be.a)(n);function n(){return Object(te.a)(this,n),t.apply(this,arguments)}return Object(ne.a)(n,[{key:"render",value:function(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-coming ",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PROJECTS COMING SOON"}),Object(h.jsx)("section",{className:"coming-projects",children:Object(h.jsx)(ie,{project:Q.c})}),Object(h.jsx)("img",{src:re.a,alt:"rightmamba",className:"coming-projects-mamba"})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})}}]),n}(a.Component);function se(e){var t=e.project,n=new Date(16432416e5).toUTCString();return Object(h.jsxs)("section",{className:"closed-card",children:[Object(h.jsxs)("div",{className:"closed-card-header",children:[Object(h.jsx)("a",{href:"/",children:Object(h.jsx)("img",{src:t.picture,alt:"project profile"})}),Object(h.jsxs)("div",{className:"closed-card-title",children:[Object(h.jsx)("strong",{children:t.name}),Object(h.jsxs)("div",{className:"social-links",children:[Object(h.jsx)("a",{href:"https://www.google.com",children:Object(h.jsx)(p.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.twitter.com",children:Object(h.jsx)(m.a,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.medium.com",children:Object(h.jsx)(m.b,{className:"social-link"})}),Object(h.jsx)("a",{href:"https://www.telegram.com",children:Object(h.jsx)(y.e,{className:"social-link"})})]})]})]}),Object(h.jsx)("div",{className:"closed-card-body",children:t.message}),Object(h.jsxs)("div",{className:"closed-card-footer",children:[Object(h.jsx)("strong",{children:"This Pool was closed at "}),Object(h.jsx)("strong",{children:n})]})]})}var fe=n(191),oe=function(e){Object(ae.a)(n,e);var t=Object(be.a)(n);function n(){return Object(te.a)(this,n),t.apply(this,arguments)}return Object(ne.a)(n,[{key:"render",value:function(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("section",{className:"container projects-closed",children:[Object(h.jsx)("h3",{className:"col-12 text-center font-weight-bold sub-title",children:"PROJECTS CLOSED"}),Object(h.jsx)("img",{src:fe.a,alt:"leftmamba",className:"closed-projects-mamba"}),Object(h.jsx)("section",{className:"closed-projects",children:Q.e.map((function(e,t){return"Closed"===e.status&&Object(h.jsx)(se,{project:e},t)}))})]}),Object(h.jsx)("hr",{style:{border:"1px solid #fdac42"}})]})}}]),n}(a.Component);function ce(){return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(i.a,{}),Object(h.jsx)(d.default,{}),Object(h.jsx)(ee,{}),Object(h.jsx)(de,{}),Object(h.jsx)(oe,{}),Object(h.jsx)(r.a,{})]})}}}]);
//# sourceMappingURL=8.76b044aa.chunk.js.map